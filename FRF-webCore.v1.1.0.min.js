'use strict';
angular.module("WebCoreModule",["ngSanitize","ngTouch","pascalprecht.translate","ui.bootstrap","ui.mask","ui.router","ui.select","WcResponsiveTableModule"]).config(["$httpProvider",function(n){n.useApplyAsync(!0)}]),angular.module("WebCoreModule").constant("_",window._),angular.module("WebCoreModule").constant("XLSX",window.XLSX),angular.module("WebCoreModule").constant("Chart",window.Chart),angular.module("WebCoreModule").constant("Constants",{local:"local",wslBaseUrl:"https://www.wsl.ford.com/login.cgi?portstripping=no&back=",authorization:{any:"Any",all:"All"},version:"Ford Responsive Framework (FRF) 1.1.0"}),angular.module("WebCoreModule").constant("Prism",window.Prism),jQuery.fn.exists=function(){return 0!==this.length},jQuery.fn.outerHTML=function(){return jQuery("<div>").append(this.eq(0).clone()).html()},angular.merge=function(n){return angular.forEach(arguments,function(o){o!==n&&angular.forEach(o,function(o,e){n[e]&&n[e].constructor&&n[e].constructor===Object?angular.merge(n[e],o):n[e]=o})}),n};
angular.module("WebCoreModule").service("WcAlertConsoleService",["$timeout","_","$interval","$sce",function(e,t,i,s){this.configureDefaults=function(e){e&&(void 0===e.visible||!0!==e.visible&&!1!==e.visible||(u=e.visible),void 0===e.multiple||!0!==e.multiple&&!1!==e.multiple||(r=e.multiple),void 0===e.persist||!0!==e.persist&&!1!==e.persist||(n=e.persist),void 0!==e.timeout&&"NaN"!==parseInt(e.timeout)&&(o=e.timeout),!e.errorOnStateChange||!0!==e.errorOnStateChange&&!1!==e.errorOnStateChange||(a=e.errorOnStateChange))};var u=!0,r=!0,n=!1,o=7,a=!0;this.getSettings=function(){return{visible:u,multiple:r,persist:n,timeout:o,fadeOutAnimationLengthMS:350,removeErrorOnStateChange:a}};var l=[];this.isMessageDuplicate=function(e){for(var t=!1,i=0;i<l.length;i++)l[i].message.$$unwrapTrustedValue()===e.$$unwrapTrustedValue()&&(t=!0);return t},this.addMessage=function(e){e.message=s.trustAsHtml(e.message),e&&(void 0===e.visible&&(e.visible=u),void 0===e.multiple&&(e.multiple=r),void 0===e.persist&&(e.persist=n),void 0===e.timeout&&(e.timeout=o));var a=t.uniqueId("alert_");e.uniqueishID=a,"danger"===e.type&&(e.persist=!0),!1===e.multiple?this.isMessageDuplicate(e.message)||l.push(e):l.push(e),!1===e.persist&&(i(function(){for(var t=0;t<l.length;t++)l[t].uniqueishID===e.uniqueishID&&(l[t].fadeOut=!0)},1e3*e.timeout-350,1),i(angular.bind(this,function(){this.removeMessage(e.uniqueishID)}),1e3*e.timeout,1),i(angular.bind(this,function(){this.updateTimeout(e.uniqueishID)}),1e3,e.timeout))},this.updateTimeout=function(e){for(var t=0;t<l.length;t++)l[t].uniqueishID===e&&l[t].timeout--},this.removeMessage=function(t,i){for(var s in l)if(l[s].uniqueishID===t)return i?(l[s].fadeOut=!0,void e(angular.bind(this,function(e){return function(){this.removeMessage(e)}}(t)),350)):void l.splice(s,1)},this.removeMessages=function(e){for(var t=0;t<l.length;t++)!1!==l[t].persist&&!0!==e||(l.splice(t,1),t-=1)},this.removeErrorMessages=function(){for(var e=0;e<l.length;e++)"danger"===l[e].type&&(l.splice(e,1),e-=1)},this.getMessages=function(e){for(var t=[],i=0;i<l.length;i++)(!0===e&&!0===l[i].visible||void 0===e)&&t.push(l[i]);return t},this.getMessagesByType=function(e){for(var t=[],i=0;i<l.length;i++)l[i].type===e&&t.push(l[i]);return t}}]);
//angular.module("WebCoreModule").service("WcAuthorizationCacheHelper",["_","$q","$window",function(e,t,i){this.setSessionCache=function(){i.sessionStorage.policyCache=angular.toJson(this.cache)},this.getSessionCache=function(){return angular.fromJson(i.sessionStorage.policyCache)},this.cache=this.getSessionCache(),this.cache||(this.cache=[]),this.resetCache=function(){this.cache=[]},this.retrievePolicyAuthorization=function(i){var c=e.find(this.cache,{policy:i});return void 0!==c?c.promise&&c.promise.then?c.promise.then(function(e){return(e=e.data?e.data:e).authorized}):t.when(c.authorized):null},this.formatPolicy=function(e,t){if(t.then){t.then(angular.bind(this,function(t){var i;for(i=0;i<this.cache.length&&this.cache[i].policy!==e;i++);t=t.data?t.data:t,this.cache[i]=this.formatPolicy(e,t),this.setSessionCache()}));var i={};return i.policy=e,i.promise=t,i}var c=angular.copy(t);return c.policy=e,delete c.resource,delete c.action,c},this.addPolicy=function(e,t){this.cache.push(this.formatPolicy(e,t)),this.setSessionCache()}}]);

angular.module("WebCoreModule").service("WcAuthorizationCacheHelper", ["_", "$q", "$window", function(e, t, i) {
    this.setSessionCache = function() {
        i.sessionStorage.policyCache = angular.toJson(this.cache)
    }, this.getSessionCache = function() {
        return angular.fromJson(i.sessionStorage.policyCache)
    }, this.cache = this.getSessionCache(), this.cache || (this.cache = []), this.resetCache = function() {
        this.cache = []
    }, this.retrievePolicyAuthorization = function(i) {
        var c = e.find(this.cache, {
            policy: i
        });
        return void 0 !== c ? c.promise && c.promise.then ? c.promise.then(function(e) {
            return (e = e.data ? e.data : e).authorized
        }) : t.when(c.authorized) : null
    }, this.formatPolicy = function(e, t) {
        if (t.then) {
            t.then(angular.bind(this, function(t) {
                var i;
                for (i = 0; i < this.cache.length && this.cache[i].policy !== e; i++);
                t = t.data ? t.data : t, this.cache[i] = this.formatPolicy(e, t), this.setSessionCache()
            }));
            var i = {};
            return i.policy = e, i.promise = t, i
        }
        var c = angular.copy(t);
        return c.policy = e, delete c.resource, delete c.action, c
    }, this.addPolicy = function(e, t) {
        this.cache.push(this.formatPolicy(e, t)), this.setSessionCache()
    }
}]);

//angular.module("WebCoreModule").service("WcAuthorizationService",["WcHttpEndpointPrototype","WcAuthorizationCacheHelper","_","$q","Constants","$state",function(t,i,r,a,n,e){this.authorizationEndpoint=new t("authorization"),this.requestAuthorization=function(t){i.addPolicy(t,this.authorizationEndpoint.get({params:{authorizationString:t}}).then(function(t){return t.data[0]}))},this.isAuthorizedFromCache=function(t){return i.retrievePolicyAuthorization(t)},this.isStateAuthorized=function(t){var i=e.get(t),r=null,o=null;return i.data&&(r=i.data.policies?i.data.policies:null,o=i.data.criteria?i.data.criteria:null),r?(r&&!o&&(o=n.authorization.all),this.isAuthorized(r,o)):a.when(!0)},this.isAuthorized=function(t,i){i||(i=n.authorization.all),angular.isArray(t)||(t=[t]);var e=[];return r.each(t,angular.bind(this,function(t){var i=this.isAuthorizedFromCache(t);null===i&&(this.requestAuthorization(t),i=this.isAuthorizedFromCache(t)),e.push(i)})),a.all(e).then(function(t){switch(i){case"Any":return r.some(t);case"All":return r.every(t);default:return!1}})}}]);

angular.module("WebCoreModule").service("WcAuthorizationService", ["WcHttpEndpointPrototype", "WcAuthorizationCacheHelper", "_", "$q", "Constants", "$state", function (t, i, r, a, n, e) {
	this.authorizationEndpoint = new t("authorization"),
	this.requestAuthorization = function (t) {
		
//		console.log('requestAuthorization');
		
		i.addPolicy(t, this.authorizationEndpoint.get({
				params: {
					authorizationString: t
				}
			}).then(function (t) {
				if (t.data == '') {
					return t.data;
				}
				return t.data[0]
			}))
	},
	this.requestAuthorizationMenu = function (menuData) {
//		console.log('requestAuthorizationMenu');
		var resources = [];
		
		$.each(menuData, function (index) {
			var itemProtected = menuData[index]["protected"];
			var subMenu = menuData[index]["subMenu"];
			if (itemProtected != null && itemProtected != "") {
				resources.push(itemProtected);
			}
			if (subMenu != null && subMenu.length > 0) {
				$.each(subMenu, function (index) {
					var itemProtected = subMenu[index]["protected"];
					if (itemProtected != null && itemProtected) {
						resources.push(itemProtected);
					}
				});
			}
		});
		
		return this.authorizationEndpoint.post(resources.toString()).then(function (t) {
//			console.log('authorizationEndpoint.post');
			var j = 0;
			for (j = 0; j < resources.length; j++) {
				$.each(t.data, function (index) {
					var resourceC = t.data[index]["resourceC"];
					if (resources[j] === resourceC) {
						i.addPolicy(resourceC, t.data[index]);
						return false;
					}
				});
			}
			
			var menuDataAccess = $.grep(menuData, function (el, index) {
				var itemProtected = menuData[index]["protected"];
				var subMenu = menuData[index]["subMenu"];
				var hasAccess = false;
				if (itemProtected != null && itemProtected != "") {
					hasAccess = false;
					$.each(t.data, function (index) {
						var resourceC = t.data[index]["resourceC"];
						if (itemProtected === resourceC) {
							hasAccess = true;
						}
					});
					if (! hasAccess) {
						return false;
					}
				}
				if (subMenu != null && subMenu.length > 0) {
					subMenu = $.grep(subMenu, function (el, index) {
						var itemProtected = subMenu[index]["protected"];
						if (itemProtected != null && itemProtected) {
							hasAccess = false;
							$.each(t.data, function (index) {
								var resourceC = t.data[index]["resourceC"];
								if (itemProtected === resourceC) {
									hasAccess = true;
								}
							});
							if (! hasAccess) {
								return false;
							}
							return true;
						}
					});
					
					menuData[index]["subMenu"] = subMenu;
				}
				
				return true;
			});
			
			return menuDataAccess;
			
		});
		
	},
	this.isAuthorizedFromCache = function (t) {
//		console.log('isAuthorizedFromCache')
		return i.retrievePolicyAuthorization(t)
	},
	this.isStateAuthorized = function (t) {
//		console.log('isStateAuthorized')
		var i = e.get(t),
		r = null,
		o = null;
		return i.data && (r = i.data.policies ? i.data.policies : null, o = i.data.criteria ? i.data.criteria : null),
		r ? (r && !o && (o = n.authorization.all), this.isAuthorized(r, o)) : a.when(!0)
	},
	this.isAuthorized = function (t, i) {
//		console.log('isAuthorized')
		i || (i = n.authorization.all),
		angular.isArray(t) || (t = [t]);
		var e = [];
		return r.each(t, angular.bind(this, function (t) {
				var i = this.isAuthorizedFromCache(t);
				null === i && (this.requestAuthorization(t), i = this.isAuthorizedFromCache(t)),
//				null === i && (i = this.isAuthorizedFromCache(t)),
				e.push(i)
			})),
		a.all(e).then(function (t) {
			switch (i) {
			case "Any":
				return r.some(t);
			case "All":
				return r.every(t);
			default:
				return !1
			}
		})
	}
}
]);

angular.module("WebCoreModule").service("WcCameraService",["$window","$rootScope","WcImageFileService",function(e,t,i){var s=e.navigator;t.$on("$stateChangeStart",angular.bind(this,function(){this.stopCamera()})),e.onbeforeunload=angular.bind(this,function(){this.stopCamera()}),this.cameraIsOn=!1,this.height=0,this.width=0,this.setCameraSize=function(e,t){this.height=t,this.width=e},this.mediaDevices=s.mediaDevices&&s.mediaDevices.getUserMedia?s.mediaDevices:s.mozGetUserMedia||s.webkitGetUserMedia?{getUserMedia:function(e){return new Promise(function(t,i){(s.mozGetUserMedia||s.webkitGetUserMedia).call(s,e,t,i)})}}:null,this.generateVideo=function(){return document.createElement("video")},this.returnVideoElement=function(){return this.videoElement=this.generateVideo(),this.videoElement.setAttribute("autoplay","autoplay"),this.videoElement.style.width=this.width+"px",this.videoElement.style.height=this.height+"px",this.mediaDevices.getUserMedia({audio:!1,video:!0}).then(angular.bind(this,function(t){return this.stream=t,this.videoElement.src=e.URL.createObjectURL(t),$(this.videoElement)})).catch(function(e){console.error(e)})},this.checkForCamera=function(){return e.navigator.mediaDevices.enumerateDevices().then(function(e){return(e=e.filter(function(e){return"videoinput"===e.kind})).length>0}).catch(function(e){console.log(e.name+": "+e.message)})},this.takePicture=function(){var e=i.generateCanvas();return e.width=this.width,e.height=this.height,e.getContext("2d").drawImage(this.videoElement,0,0,this.width,this.height),e.toDataURL("image/jpeg",100)},this.startCamera=function(){this.videoElement.play(),this.cameraIsOn=!0},this.stopCamera=function(){if(this.cameraIsOn){if(this.stream.getVideoTracks){var e=this.stream.getVideoTracks();e&&e[0]&&e[0].stop&&e[0].stop()}else this.stream.stop&&this.stream.stop();this.cameraIsOn=!1}}}]);
angular.module("WebCoreModule").service("WcDataFileService",["$q","$window",function(e,r){this.getFileType=function(e){return e.type.replace(/[a-z]+\//,"")},this.prepareForFileUpload=function(e){return{MIMEType:e.match(/^[^,]*,/,"")[0],base64String:e.replace(/^[^,]*,/,"")}},this.readFile=function(t){var n=e.defer(),a=new r.FileReader;return a.onload=function(e){var r=e.target.result;n.resolve(r)},a.onerror=function(){n.reject(t)},a.readAsDataURL(t),n.promise}}]);
//angular.module("WebCoreModule").service("WcHttpRequestService",["$rootScope","$q","$http","$window","$timeout","$interpolate","WcAlertConsoleService",function(e,t,s,r,n,i,u){this.configuration={xsrfCookieName:"WSL-credential",withCredentials:!0,headers:{},timeout:1e4,baseUrl:"",cache:!1,pingTrustPeriodMS:1e3,unAuthenticatedCallback:function(){},unprotectedPingRoute:"unprotected/ping",queuedRequestMessages:{}},this.configureDefaults=function(e){angular.extend(this.configuration,e)},this.requestConfigurationMapper=function(e){var t=angular.copy(this.configuration);return delete t.baseUrl,delete t.pingTrustPeriodMS,delete t.unAuthenticatedCallback,delete t.unprotectedPingRoute,delete t.queuedRequestMessages,angular.extend(t,e),delete t.cache,t},this.urlBuilder=function(e){return e.indexOf("http://")>-1||e.indexOf("https://")>-1?e:this.configuration.baseUrl+e},this.get=function(r,i){var u=this.triggerRequestInterceptors(r,null,i),o=r=u.url;if((i=u.config)&&i.params&&(o=r+function(e){var t="/";return Object.keys(e).forEach(function(s){t="/"===t?t+s+":"+e[s]:t+"-"+s+":"+e[s]}),t}(i.params)),i&&i.cache&&!i.alwaysRefresh&&!i.forceRefresh){var a;if("localStorage"===i.cache?a={data:this.getFromLocalStorage(o)}:"sessionStorage"===i.cache&&(a=this.getFromSessionStorage(o)),a&&a.data)return t.when(a)}return s.get(this.urlBuilder(r),this.requestConfigurationMapper(i)).then(angular.bind(this,function(t){return e.$broadcast("Online"),t=this.triggerResponseInterceptors(t),i&&("localStorage"===i.cache?this.storeInLocalStorage(o,t.data):"sessionStorage"===i.cache&&this.storeInSessionStorage(o,t.data)),{data:t.data,status:t.status}}),angular.bind(this,function(s){return this.triggerErrorInterceptors(s),s.status>0?t.reject(s):this.getNetworkState().then(angular.bind(this,function(r){if("offline"===r&&i){var u;return"localStorage"===i.cache?u={data:this.getFromLocalStorage(o)}:"sessionStorage"===i.cache&&(u=this.getFromSessionStorage(o)),u&&u.data?t.when(u).finally(function(){n(function(){e.$broadcast("Offline")})}):t.reject("Offline: No cached data available!")}return t.reject(s)}))}))},this.post=function(r,n,i){var u=this.triggerRequestInterceptors(r,n,i);return r=u.url,n=u.data,i=u.config,s.post(this.urlBuilder(r),n,this.requestConfigurationMapper(i)).then(angular.bind(this,function(t){return e.$broadcast("Online"),t=this.triggerResponseInterceptors(t),{data:t.data,status:t.status}}),angular.bind(this,function(e){return this.triggerErrorInterceptors(e),e.status<=0&&i&&"queue"===i.offline&&!i.fromQueue?(this.queueRequest("post",r,n,i),e.status="queue",t.when(e)):t.reject(e)}))},this.put=function(r,n,i){var u=this.triggerRequestInterceptors(r,n,i);return r=u.url,n=u.data,i=u.config,s.put(this.urlBuilder(r),n,this.requestConfigurationMapper(i)).then(angular.bind(this,function(t){return e.$broadcast("Online"),t=this.triggerResponseInterceptors(t),{data:t.data,status:t.status}}),angular.bind(this,function(e){return this.triggerErrorInterceptors(e),e.status<=0&&i&&"queue"===i.offline&&!i.fromQueue?(this.queueRequest("put",r,n,i),e.status="queue",t.when(e)):t.reject(e)}))},this.delete=function(r,n){var i=this.triggerRequestInterceptors(r,null,n);return r=i.url,n=i.config,s.delete(this.urlBuilder(r),this.requestConfigurationMapper(n)).then(angular.bind(this,function(t){return e.$broadcast("Online"),t=this.triggerResponseInterceptors(t),{data:t.data,status:t.status}}),angular.bind(this,function(e){return this.triggerErrorInterceptors(e),e.status<=0&&n&&"queue"===n.offline&&!n.fromQueue?(this.queueRequest("delete",r,void 0,n),e.status="queue",t.when(e)):t.reject(e)}))},this.getFromLocalStorage=function(e){var t=r.localStorage.getItem(e);try{t=angular.fromJson(t)}finally{return t}},this.getFromSessionStorage=function(e){var t=r.sessionStorage.getItem(e);try{t=angular.fromJson(t)}finally{return t?{data:t}:t}},this.storeInLocalStorage=function(e,t){angular.isString(t)||(t=angular.toJson(t)),r.localStorage.setItem(e,t)},this.storeInSessionStorage=function(e,t){angular.isString(t)||(t=angular.toJson(t)),r.sessionStorage.setItem(e,t)},this.removeFromLocalStorage=function(e){r.localStorage.removeItem(e)},this.removeFromSessionStorage=function(e){r.sessionStorage.removeItem(e)},this.addMessageForQueuedRequest=function(e,t,s,r,n){var o,a;if(200===n.status?(o="Queued request submitted successfully: "+e+" to endpoint "+t+", status: "+n.status,a="success"):409===n.status?(o="Queued request failed to be submitted due to a conflict: "+e+" to endpoint "+t+", status: "+n.status,a="danger"):500===n.status&&(o="Queued request failed to be submitted due to a server error: "+e+" to endpoint "+t+", status: "+n.status,a="danger"),this.configuration.queuedRequestMessages&&0!==Object.keys(this.configuration.queuedRequestMessages).length){this.configuration.queuedRequestMessages[e][t]?this.configuration.queuedRequestMessages[e][t][n.status]&&(o=this.configuration.queuedRequestMessages[e][t][n.status],o=i(o)({verb:e,url:t,data:s,config:r,response:n})):this.configuration.queuedRequestMessages[e][t.substring(0,t.lastIndexOf("/"))][n.status]&&(o=this.configuration.queuedRequestMessages[e][t.substring(0,t.lastIndexOf("/"))][n.status],o=i(o)({verb:e,url:t,data:s,config:r,response:n}))}u.addMessage({message:o,type:a,multiple:!1,errorOnStateChange:!1,timeout:20})},this.processOfflineQueue=function(e){var t=this.getFromLocalStorage("offlineQueue");this.removeFromLocalStorage("offlineQueue"),e();for(var s=t.shift();s;){s.config.fromQueue=!0;var r;r="delete"===s.verb?this.delete(s.url,s.config):this[s.verb](s.url,s.data,s.config);var n=angular.bind(this,function(e,t){this.addMessageForQueuedRequest(e.verb,e.url,e.data,e.config,t)},s);r.then(n,n),s=t.shift()}},this.setupQueueTrigger=function(){var t=e.$on("Online",angular.bind(this,function(){this.processOfflineQueue(t)}))},this.queueRequest=function(e,t,s,r){var n=this.getFromLocalStorage("offlineQueue");n?(n.push({verb:e,url:t,data:s,config:r}),this.storeInLocalStorage("offlineQueue",n)):(this.storeInLocalStorage("offlineQueue",[{verb:e,url:t,data:s,config:r}]),this.setupQueueTrigger())},this.getFromLocalStorage("offlineQueue")&&this.setupQueueTrigger(),this.requestInterceptors=[],this.responseInterceptors=[],this.errorInterceptors=[],this.addRequestInterceptor=function(e){this.requestInterceptors.push(e)},this.triggerRequestInterceptors=function(e,t,s){for(var r=0;r<this.requestInterceptors.length;){var n=this.requestInterceptors[r](e,t,s);n&&(n.url&&(e=n.url),n.data&&(t=n.data),n.config&&(s=n.config)),r++}return{url:e,data:t,config:s}},this.addResponseInterceptor=function(e){this.responseInterceptors.push(e)},this.triggerResponseInterceptors=function(e){for(var t=0;t<this.responseInterceptors.length;){var s=this.responseInterceptors[t](e);s&&(e=s),t++}return e},this.addErrorInterceptor=function(e){this.errorInterceptors.push(e)},this.triggerErrorInterceptors=function(e){for(var t=0;t<this.errorInterceptors.length;)this.errorInterceptors[t](e),t++},this._lastPingRequestTimestamp=0,this._trustedResponse="",this._pendingRequests=0,this._currentPingRequestPromise={},this._networkStatusResponses=["online","unauthenticated","offline"],this.getNetworkState=function(){if(this._pendingRequests>0)return this._currentPingRequestPromise;var r=new Date;return r-this._lastPingRequestTimestamp>this.configuration.pingTrustPeriodMS?(this._pendingRequests++,this._lastPingRequestTimestamp=r,this._trustedResponse="",this._currentPingRequestPromise=s.get(this.urlBuilder(this.configuration.unprotectedPingRoute),this.requestConfigurationMapper(this.configuration)).then(angular.bind(this,function(){return this._pendingRequests--,this._currentPingRequestPromise={},this._trustedResponse=this._networkStatusResponses[1],this.configuration.unAuthenticatedCallback(),e.$broadcast("Unauthenticated"),t.when(this._networkStatusResponses[1])}),angular.bind(this,function(){return this._pendingRequests--,this._currentPingRequestPromise={},this._trustedResponse=this._networkStatusResponses[2],e.$broadcast("Offline"),t.when(this._networkStatusResponses[2])})),this._currentPingRequestPromise):t.when(this._trustedResponse)}}]);

angular.module("WebCoreModule").service("WcHttpRequestService", ["$rootScope", "$q", "$http", "$window", "$timeout", "$interpolate", "WcAlertConsoleService", function(e, t, s, r, n, i, u) {
    this.configuration = {
        xsrfCookieName: "WSL-credential",
        withCredentials: !0,
        headers: {},
        timeout: 6e4,
        baseUrl: "",
        cache: !1,
        pingTrustPeriodMS: 1e3,
        unAuthenticatedCallback: function() {},
        unprotectedPingRoute: "unprotected/ping",
        queuedRequestMessages: {}
    }, this.configureDefaults = function(e) {
        angular.extend(this.configuration, e)
    }, this.requestConfigurationMapper = function(e) {
        var t = angular.copy(this.configuration);
        return delete t.baseUrl, delete t.pingTrustPeriodMS, delete t.unAuthenticatedCallback, delete t.unprotectedPingRoute, delete t.queuedRequestMessages, angular.extend(t, e), delete t.cache, t
    }, this.urlBuilder = function(e) {
        return e.indexOf("http://") > -1 || e.indexOf("https://") > -1 ? e : this.configuration.baseUrl + e
    }, this.get = function(r, i) {
        var u = this.triggerRequestInterceptors(r, null, i),
            o = r = u.url;
        if ((i = u.config) && i.params && (o = r + function(e) {
                var t = "/";
                return Object.keys(e).forEach(function(s) {
                    t = "/" === t ? t + s + ":" + e[s] : t + "-" + s + ":" + e[s]
                }), t
            }(i.params)), i && i.cache && !i.alwaysRefresh && !i.forceRefresh) {
            var a;
            if ("localStorage" === i.cache ? a = {
                    data: this.getFromLocalStorage(o)
                } : "sessionStorage" === i.cache && (a = this.getFromSessionStorage(o)), a && a.data) return t.when(a)
        }
        return s.get(this.urlBuilder(r), this.requestConfigurationMapper(i)).then(angular.bind(this, function(t) {
            return e.$broadcast("Online"), t = this.triggerResponseInterceptors(t), i && ("localStorage" === i.cache ? this.storeInLocalStorage(o, t.data) : "sessionStorage" === i.cache && this.storeInSessionStorage(o, t.data)), {
                data: t.data,
                status: t.status
            }
        }), angular.bind(this, function(s) {
            return this.triggerErrorInterceptors(s), s.status > 0 ? t.reject(s) : this.getNetworkState().then(angular.bind(this, function(r) {
                if ("offline" === r && i) {
                    var u;
                    return "localStorage" === i.cache ? u = {
                        data: this.getFromLocalStorage(o)
                    } : "sessionStorage" === i.cache && (u = this.getFromSessionStorage(o)), u && u.data ? t.when(u).finally(function() {
                        n(function() {
                            e.$broadcast("Offline")
                        })
                    }) : t.reject("Offline: No cached data available!")
                }
                return t.reject(s)
            }))
        }))
    }, this.post = function(r, n, i) {
        var u = this.triggerRequestInterceptors(r, n, i);
        return r = u.url, n = u.data, i = u.config, s.post(this.urlBuilder(r), n, this.requestConfigurationMapper(i)).then(angular.bind(this, function(t) {
            return e.$broadcast("Online"), t = this.triggerResponseInterceptors(t), {
                data: t.data,
                status: t.status
            }
        }), angular.bind(this, function(e) {
            return this.triggerErrorInterceptors(e), e.status <= 0 && i && "queue" === i.offline && !i.fromQueue ? (this.queueRequest("post", r, n, i), e.status = "queue", t.when(e)) : t.reject(e)
        }))
    }, this.put = function(r, n, i) {
        var u = this.triggerRequestInterceptors(r, n, i);
        return r = u.url, 
        	   n = u.data, 
        	   i = u.config, 
        	   s.put(this.urlBuilder(r), n, this.requestConfigurationMapper(i)).then(angular.bind(this, function(t) {
		        	return e.$broadcast("Online") , 
		        		   t = this.triggerResponseInterceptors(t), 
		        		   {
				        		data: t.data,
				                status: t.status
				            }
        }), angular.bind(this, function(e) {
            return this.triggerErrorInterceptors(e), e.status <= 0 && i && "queue" === i.offline && !i.fromQueue ? (this.queueRequest("put", r, n, i), e.status = "queue", t.when(e)) : t.reject(e)
        }))
    }, this.delete = function(r, n) {
        var i = this.triggerRequestInterceptors(r, null, n);
        return r = i.url, n = i.config, s.delete(this.urlBuilder(r), this.requestConfigurationMapper(n)).then(angular.bind(this, function(t) {
            return e.$broadcast("Online"), t = this.triggerResponseInterceptors(t), {
                data: t.data,
                status: t.status
            }
        }), angular.bind(this, function(e) {
            return this.triggerErrorInterceptors(e), e.status <= 0 && n && "queue" === n.offline && !n.fromQueue ? (this.queueRequest("delete", r, void 0, n), e.status = "queue", t.when(e)) : t.reject(e)
        }))
    }, this.getFromLocalStorage = function(e) {
        var t = r.localStorage.getItem(e);
        try {
            t = angular.fromJson(t)
        } finally {
            return t
        }
    }, this.getFromSessionStorage = function(e) {
        var t = r.sessionStorage.getItem(e);
        try {
            t = angular.fromJson(t)
        } finally {
            return t ? {
                data: t
            } : t
        }
    }, this.storeInLocalStorage = function(e, t) {
        angular.isString(t) || (t = angular.toJson(t)), r.localStorage.setItem(e, t)
    }, this.storeInSessionStorage = function(e, t) {
        angular.isString(t) || (t = angular.toJson(t)), r.sessionStorage.setItem(e, t)
    }, this.removeFromLocalStorage = function(e) {
        r.localStorage.removeItem(e)
    }, this.removeFromSessionStorage = function(e) {
        r.sessionStorage.removeItem(e)
    }, this.addMessageForQueuedRequest = function(e, t, s, r, n) {
        var o, a;
        if (200 === n.status ? (o = "Queued request submitted successfully: " + e + " to endpoint " + t + ", status: " + n.status, a = "success") : 409 === n.status ? (o = "Queued request failed to be submitted due to a conflict: " + e + " to endpoint " + t + ", status: " + n.status, a = "danger") : 500 === n.status && (o = "Queued request failed to be submitted due to a server error: " + e + " to endpoint " + t + ", status: " + n.status, a = "danger"), this.configuration.queuedRequestMessages && 0 !== Object.keys(this.configuration.queuedRequestMessages).length) {
            this.configuration.queuedRequestMessages[e][t] ? this.configuration.queuedRequestMessages[e][t][n.status] && (o = this.configuration.queuedRequestMessages[e][t][n.status], o = i(o)({
                verb: e,
                url: t,
                data: s,
                config: r,
                response: n
            })) : this.configuration.queuedRequestMessages[e][t.substring(0, t.lastIndexOf("/"))][n.status] && (o = this.configuration.queuedRequestMessages[e][t.substring(0, t.lastIndexOf("/"))][n.status], o = i(o)({
                verb: e,
                url: t,
                data: s,
                config: r,
                response: n
            }))
        }
        u.addMessage({
            message: o,
            type: a,
            multiple: !1,
            errorOnStateChange: !1,
            timeout: 20
        })
    }, this.processOfflineQueue = function(e) {
        var t = this.getFromLocalStorage("offlineQueue");
        this.removeFromLocalStorage("offlineQueue"), e();
        for (var s = t.shift(); s;) {
            s.config.fromQueue = !0;
            var r;
            r = "delete" === s.verb ? this.delete(s.url, s.config) : this[s.verb](s.url, s.data, s.config);
            var n = angular.bind(this, function(e, t) {
                this.addMessageForQueuedRequest(e.verb, e.url, e.data, e.config, t)
            }, s);
            r.then(n, n), s = t.shift()
        }
    }, this.setupQueueTrigger = function() {
        var t = e.$on("Online", angular.bind(this, function() {
//        	console.log("Online broadcast");
            this.processOfflineQueue(t)
        }))
    }, this.queueRequest = function(e, t, s, r) {
        var n = this.getFromLocalStorage("offlineQueue");
        n ? (n.push({
            verb: e,
            url: t,
            data: s,
            config: r
        }), this.storeInLocalStorage("offlineQueue", n)) : (this.storeInLocalStorage("offlineQueue", [{
            verb: e,
            url: t,
            data: s,
            config: r
        }]), this.setupQueueTrigger())
    }, this.getFromLocalStorage("offlineQueue") && this.setupQueueTrigger(), this.requestInterceptors = [], this.responseInterceptors = [], this.errorInterceptors = [], this.addRequestInterceptor = function(e) {
        this.requestInterceptors.push(e)
    }, this.triggerRequestInterceptors = function(e, t, s) {
        for (var r = 0; r < this.requestInterceptors.length;) {
            var n = this.requestInterceptors[r](e, t, s);
            n && (n.url && (e = n.url), n.data && (t = n.data), n.config && (s = n.config)), r++
        }
        return {
            url: e,
            data: t,
            config: s
        }
    }, this.addResponseInterceptor = function(e) {
        this.responseInterceptors.push(e)
    }, this.triggerResponseInterceptors = function(e) {
//    	console.log('triggerResponseInterceptors:before')
        for (var t = 0; t < this.responseInterceptors.length;) {
            var s = this.responseInterceptors[t](e);
            s && (e = s), t++
        }
//        console.log('triggerResponseInterceptors')
        return e
    }, this.addErrorInterceptor = function(e) {
        this.errorInterceptors.push(e)
    }, this.triggerErrorInterceptors = function(e) {
        for (var t = 0; t < this.errorInterceptors.length;) this.errorInterceptors[t](e), t++
    }, this._lastPingRequestTimestamp = 0, this._trustedResponse = "", this._pendingRequests = 0, this._currentPingRequestPromise = {}, this._networkStatusResponses = ["online", "unauthenticated", "offline"], this.getNetworkState = function() {
        if (this._pendingRequests > 0) return this._currentPingRequestPromise;
        var r = new Date;
        return r - this._lastPingRequestTimestamp > this.configuration.pingTrustPeriodMS ? (this._pendingRequests++, this._lastPingRequestTimestamp = r, this._trustedResponse = "", this._currentPingRequestPromise = s.get(this.urlBuilder(this.configuration.unprotectedPingRoute), this.requestConfigurationMapper(this.configuration)).then(angular.bind(this, function() {
            return this._pendingRequests--, this._currentPingRequestPromise = {}, this._trustedResponse = this._networkStatusResponses[1], this.configuration.unAuthenticatedCallback(), e.$broadcast("Unauthenticated"), t.when(this._networkStatusResponses[1])
        }), angular.bind(this, function() {
            return this._pendingRequests--, this._currentPingRequestPromise = {}, this._trustedResponse = this._networkStatusResponses[2], e.$broadcast("Offline"), t.when(this._networkStatusResponses[2])
        })), this._currentPingRequestPromise) : t.when(this._trustedResponse)
    }
}]);

angular.module("WebCoreModule").provider("WcTranslateConfiguratorService",["$translateProvider",function(a){this.translateProvider=a,this.configuration={sanitizationStrategy:"escape",loader:"$translatePartialLoader",loaderObj:{urlTemplate:"translations/{lang}/{part}.json"},langKeyArray:["en","zh","ru"],langKeyObj:{"en_*":"en","en-*":"en",zh_CN:"zh",zh_HK:"zh",ru_RU:"ru"},fallbackLang:"en"},this.configureTranslateService=function(e){e&&angular.extend(this.configuration,e),a.useSanitizeValueStrategy(this.configuration.sanitizationStrategy),a.useLoader(this.configuration.loader,this.configuration.loaderObj),a.registerAvailableLanguageKeys(this.configuration.langKeyArray,this.configuration.langKeyObj),a.determinePreferredLanguage(),a.fallbackLanguage(this.configuration.fallbackLang),a.use(a.preferredLanguage())},this.$get=["$translate","$translatePartialLoader",function(a,e){return this.loadPartAndRefresh=function(r){e.addPart(r),a.refresh()},this}]}]);
angular.module("WebCoreModule").service("WcWebtrendsService",["$rootScope","$window","$state","$timeout",function(t,e,a,n){this._enabled=!1,this.enable=function(){this._enabled=!0},this.trackData=function(){var t,n;return""!==e.location.hash&&(n=e.location.hash+e.location.search),(t=n&&n.replace("#/","")!==a.$current.name?n+":"+a.$current.name:n)||(t=":"+a.$current.name),e.dcsMultiTrack("DCS.dcsuri",t),t},t.$on("$stateChangeSuccess",angular.bind(this,function(){this._enabled&&e.dcsMultiTrack&&n(angular.bind(this,function(){t.$apply(),this.trackData()}))}))}]);
//angular.module("WebCoreModule").factory("WcDateRangePickerPrototype",["$rootScope",function(t){function e(e){var a,n,i,s,r,d,l;e&&(a=e.startDate?e.startDate:null,n=e.endDate?e.endDate:null,i=e.minDate?e.minDate:null,s=e.maxDate?e.maxDate:null,r=e.startDateFieldName?e.startDateFieldName:null,d=e.endDateFieldName?e.endDateFieldName:null,l=e.form?e.form:null),this.isStartDateOpen=!1,this.isEndDateOpen=!1,this.load(a,n,i,s),t.$watch(angular.bind(this,function(){return this.startDate}),angular.bind(this,function(t){this.minEndDate=t||this.minDate})),t.$watch(angular.bind(this,function(){return this.endDate}),angular.bind(this,function(t){this.maxStartDate=t||this.maxDate})),l&&r&&d?t.$watch(function(){var t=l.$error["date-disabled"];return t?t.length:0},angular.bind(this,function(t){var e=l.$error["date-disabled"];if(t>0)for(var a=0;a<e.length;a++)e[a].$viewValue===l[r].$viewValue?l[r].$setValidity("dateRange",!e[a].$error["date-disabled"]):l[d].$setValidity("dateRange",!e[a].$error["date-disabled"]);else l[r].$setValidity("dateRange",!0),l[d].$setValidity("dateRange",!0)})):console.log("The DateRangePicker cannot support validation indicators without having been provided the formObj and the field names.")}return e.prototype.load=function(t,e,a,n){this.startDate=t||null,this.endDate=e||null,this.minDate=a||null,this.maxDate=n||null,this.minStartDate=this.minDate,this.maxStartDate=this.endDate?this.endDate:this.maxDate,this.minEndDate=this.startDate?this.startDate:this.minDate,this.maxEndDate=this.maxDate},e.prototype.openStartDate=function(t){t.preventDefault(),t.stopPropagation(),!0===this.isStartDateOpen?this.isStartDateOpen=!1:(this.isStartDateOpen=!0,this.isEndDateOpen=!1)},e.prototype.openEndDate=function(t){t.preventDefault(),t.stopPropagation(),!0===this.isEndDateOpen?this.isEndDateOpen=!1:(this.isEndDateOpen=!0,this.isStartDateOpen=!1)},e}]);
angular.module("WebCoreModule").factory("WcDateRangePickerPrototype", ["$rootScope", function(t) {
    function e(e) {
        var a, n, i, s, r, d, l;
        e && (a = e.startDate ? e.startDate : null, n = e.endDate ? e.endDate : null, i = e.minDate ? e.minDate : null, s = e.maxDate ? e.maxDate : null, r = e.startDateFieldName ? e.startDateFieldName : null, d = e.endDateFieldName ? e.endDateFieldName : null, l = e.form ? e.form : null), this.isStartDateOpen = !1, this.isEndDateOpen = !1, this.load(a, n, i, s), t.$watch(angular.bind(this, function() {
            return this.startDate
        }), angular.bind(this, function(t) {
            this.minEndDate = t || this.minDate
        })), t.$watch(angular.bind(this, function() {
            return this.endDate
        }), angular.bind(this, function(t) {
            this.maxStartDate = t || this.maxDate
        })), l && r && d ? t.$watch(function() {
            var t = l.$error["date-disabled"];
            return t ? t.length : 0
        }, angular.bind(this, function(t) {
            var e = l.$error["date-disabled"];
            if (t > 0)
                for (var a = 0; a < e.length; a++) e[a].$viewValue === l[r].$viewValue ? l[r].$setValidity("dateRange", !e[a].$error["date-disabled"]) : l[d].$setValidity("dateRange", !e[a].$error["date-disabled"]);
            else l[r].$setValidity("dateRange", !0), l[d].$setValidity("dateRange", !0)
        })) : console.log("The DateRangePicker cannot support validation indicators without having been provided the formObj and the field names.")
    }
    return e.prototype.load = function(t, e, a, n) {
        this.startDate = t || null, this.endDate = e || null, this.minDate = a || null, this.maxDate = n || null, this.minStartDate = this.minDate, this.maxStartDate = this.endDate ? this.endDate : this.maxDate, this.minEndDate = this.startDate ? this.startDate : this.minDate, this.maxEndDate = this.maxDate
    }, e.prototype.openStartDate = function(t) {
//      	console.log(">>>>>>openStartDate")
        t.preventDefault(), t.stopPropagation(), !0 === this.isStartDateOpen ? this.isStartDateOpen = !1 : (this.isStartDateOpen = !0, this.isEndDateOpen = !1)
    }, e.prototype.openEndDate = function(t) {
        t.preventDefault(), t.stopPropagation(), !0 === this.isEndDateOpen ? this.isEndDateOpen = !1 : (this.isEndDateOpen = !0, this.isStartDateOpen = !1)
    }, e
}]);

angular.module("WebCoreModule").factory("WcHttpEndpointPrototype", ["WcHttpRequestService", function(t) {
    function e(t, e) {
        this.baseUrl = e, this.route = t, e && (this.route = this.baseUrl + this.route)
    }
    return e.prototype = {
        subRoute: function(t) {
          	return new e(this.route + "/" + t)
        },
        get: function(e) {
          	return t.get(this.route, e)
        },
        post: function(e, u) {
          	return t.post(this.route, e, u)
        },
        put: function(e, u, r) {
          return t.put(this.route + "/" + e, u, r)
        },
        delete: function(e, u) {
          return t.delete(this.route + "/" + e, u)
        }
    }, e
}]);

angular.module("WebCoreModule").directive("required", ["WcTranslateConfiguratorService", "$compile", "$timeout", function(e, i, r) {
    return {
        restrict: "A",
        require: ["required"],
        controller: ["$scope", "$element", "$attrs", function(t, n, s) {
        	
//        	angular.forEach(s, function(value, key) {
//        		  console.log(key + ': ' + value);
//        	}, s);
        	
//        	/console.log("ELEMENT >>>>>>>" + n[0].type.val)
        	
            this.insertionPoint = $('label[for="' + s.id + '"]'), "checkbox" != n[0].type && "radio" != n[0].type || (this.insertionPoint = n.closest("fieldset").find("legend")), this.formElem = this.insertionPoint.closest("form"), this.addLabels = function(t, n) {
            	
            	e.loadPartAndRefresh("WC-required"), r(angular.bind(this, function() {
                    0 !== this.insertionPoint.has('abbr[title="Required"]').length || n.disabled || n.readonly || this.insertionPoint.prepend('<abbr class="required h6" title="Required">*</abbr>'), 0 !== this.formElem.has("div.required-legend").length || n.disabled || n.readonly || this.formElem.prepend(i('<div class="required-legend hidden-xs"><span class="required-text"><abbr class="required h6" title="Required">*</abbr> {{"required.requiredText" | translate}}</span></div>')(t))
                }), 0)
            }
        }],
        link: function(e, i, r, t) {
            t[0].addLabels(e, r)
        }
    }
}]);

//angular.module("WebCoreModule").directive("required",["WcTranslateConfiguratorService","$compile","$timeout",function(e,i,r){return{restrict:"A",require:["required"],controller:["$scope","$element","$attrs",function(t,n,s){this.insertionPoint=$('label[for="'+s.id+'"]'),"checkbox"!=n[0].type&&"radio"!=n[0].type||(this.insertionPoint=n.closest("fieldset").find("legend")),this.formElem=this.insertionPoint.closest("form"),this.addLabels=function(t,n){e.loadPartAndRefresh("WC-required"),r(angular.bind(this,function(){0!==this.insertionPoint.has('abbr[title="Required"]').length||n.disabled||n.readonly||this.insertionPoint.prepend('<abbr class="required h6" title="Required">*</abbr>'),0!==this.formElem.has("div.required-legend").length||n.disabled||n.readonly||this.formElem.prepend(i('<div class="required-legend hidden-xs"><span class="required-text"><abbr class="required h6" title="Required">*</abbr> {{"required.requiredText" | translate}}</span></div>')(t))}),0)}}],link:function(e,i,r,t){t[0].addLabels(e,r)}}}]);
angular.module("WebCoreModule").directive("form",function(){return{restrict:"E",link:function(e){e.$on("$viewContentLoaded",angular.bind(this,function(){$("[required]").length<1&&$(".required-legend").remove()}))}}});
//angular.module("WebCoreModule").directive("ngRequired",["WcTranslateConfiguratorService","$compile","$timeout",function(e,r,i){return{restrict:"A",require:["ngRequired","^form"],scope:{ngRequired:"="},controller:["$scope","$element","$attrs",function(t,n,o){this.insertionPoint=$('label[for="'+o.id+'"]'),"checkbox"!==n[0].type&&"radio"!==n[0].type||(this.insertionPoint=n.closest("fieldset").find("legend")),this.formElem=this.insertionPoint.closest("form");var s=function(e){var r=[];return angular.forEach(e,function(e){"object"==typeof e&&e.hasOwnProperty("$valid")&&this.push(e)},r),r};this.calculateNumRequiredFields=function(e){var r=s(e),i=0;return angular.forEach(r,function(e){e.$error.required&&i++}),i},this.addLabels=function(t,n){e.loadPartAndRefresh("WC-required"),i(angular.bind(this,function(){0!==this.insertionPoint.has('abbr[title="Required"]').length||n.disabled||n.readonly||this.insertionPoint.prepend('<abbr class="required h6" title="Required">*</abbr>'),0!==this.formElem.has("div.required-legend").length||n.disabled||n.readonly||this.formElem.prepend(r('<div class="required-legend hidden-xs"><span class="required-text"><abbr class="required h6" title="Required">*</abbr> {{"required.requiredText" | translate}}</span></div>')(t))}),0)},this.removeLabels=function(e){this.insertionPoint.find("abbr.required").remove(),0===this.calculateNumRequiredFields(e)&&this.formElem.find("div.required-legend").remove()}}],link:function(e,r,i,t){var n=t[0],o=t[1];e.$watch(function(){return e.ngRequired},function(r){r?n.addLabels(e,i):n.removeLabels(o)})}}}]);
/**
 * @ngdoc directive
 * @name WebCoreModule.directive:ngRequired
 * @restrict A
 * @element input|select|textarea
 * @description
 * The ngRequired directive adds behavior to Angular's ngRequired attribute. With this directive in use, any tag with a
 * ng-required attribute will have a required field indicator added to the label for the field. The directive will also
 * add an appropriate legend to the form of the field, indicating what the required field indicator means.
 */
//'use strict';
//angular.module('WebCoreModule')
//    .directive('ngRequired', ['WcTranslateConfiguratorService', '$compile', '$timeout', function (WcTranslateConfiguratorService, $compile, $timeout) {
//        return {
//            restrict: 'A',
//            require: ['ngRequired', '^form'],
//            scope: {
//                ngRequired: '='
//            },
//            controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) { // jshint ignore:line
//                // Look for the label to insert the required abbreviation
//                this.insertionPoint = $('label[for="' + $attrs.id + '"]');
//                
//                // If it's a radio or checkbox, try to find legend for fieldset instead
//                if ($element[0].type === 'checkbox' || $element[0].type === 'radio') {
//                    this.insertionPoint = $element.closest('fieldset').find('legend');
//                }
//                
//                
//                // Look for the parent form to insert the required legend
//                this.formElem = this.insertionPoint.closest('form');
//
//                var getFormControls = function (formController) {
//                    var formControls = [];
//
//                    angular.forEach(formController, function (value) { // jshint ignore:line
//                        if (typeof value === 'object' && value.hasOwnProperty('$valid')) {
//                            this.push(value);
//                        }
//                    }, formControls);
//                    return formControls;
//                };
//
//                this.calculateNumRequiredFields = function (formController) {
//                    var formControls = getFormControls(formController);
//
//                    var numRequiredFields = 0;
//                    angular.forEach(formControls, function (value) { // jshint ignore:line
//                        if (value.$error.required) {
//                            numRequiredFields++;
//                        }
//                    });
//
//                    return numRequiredFields;
//                };
//
//
//                this.addLabels = function (scope, attrs) { // jshint ignore:line
//
//                    WcTranslateConfiguratorService.loadPartAndRefresh('WC-required');
//                    $timeout(angular.bind(this, function () {
//                        // check to make sure abbr is not already there before adding
//                        if (this.insertionPoint.has('abbr[title="Required"]').length === 0 && !attrs.disabled && !attrs.readonly) {
//                           // this.insertionPoint.prepend('<abbr class="required h6" title="Required">*</abbr>');
//                        }
//
//                        //lastly, check for the form legend and add it if necessary
//                        if (this.formElem.has('div.required-legend').length === 0 && !attrs.disabled && !attrs.readonly) {
//                            this.formElem.prepend($compile('<div class="required-legend hidden-xs"><span class="required-text"><abbr class="required h6" title="Required">*</abbr> {{"required.requiredText" | translate}}</span></div>')(scope));
//                        }
//                    }), 0);
//                };
//
//                this.removeLabels = function (formController) {
//                    this.insertionPoint.find('abbr.required').remove();
//                    var numRequiredFields = this.calculateNumRequiredFields(formController);
//                    if (numRequiredFields === 0) {
//                        this.formElem.find('div.required-legend').remove();
//                    }
//                };
//            }],
//
//            link: function (scope, elem, attrs, ctrls) { // jshint ignore:line
//                var ngRequiredController = ctrls[0];
//                var formController = ctrls[1];
//
//                scope.$watch(function () {
//                    return scope.ngRequired;
//                }, function (newValue) {
//                    if (newValue) {
//                        ngRequiredController.addLabels(scope, attrs);
//                        
//                    } else {
//                        ngRequiredController.removeLabels(formController);
//                    }
//                });
//            }
//        };
//    }]);


angular.module("WebCoreModule").directive("wcAlertConsole",function(){return{restrict:"A",template:"<div id=\"alert-console\"><div class=\"alert alert-dismissable\"ng-swipe-right=\"closeAlert(alert.uniqueishID)\" role=\"alert\" ng-repeat=\"alert in visibleMessages\" type=\"{{alert.type}}\" ng-class=\"{'zoom-out-animate': alert.fadeOut, 'fade-out': alert.fadeOut, 'alert-success' : alert.type == 'success', 'alert-danger' : alert.type == 'danger', 'alert-warning' : alert.type == 'warning', 'alert-info' : alert.type == 'info'}\"> <span class=\"glyphicon\" ng-class=\"{'glyphicon-ok': alert.type == 'success', 'glyphicon-warning-sign': alert.type == 'warning', 'glyphicon-remove-circle': alert.type == 'danger', 'glyphicon-info-sign' : alert.type == 'info'}\"></span><button class=\"close\" ng-click=\"closeAlert(alert.uniqueishID)\"><span aria-hidden=\"true\">&#120;</span><span class=\"sr-only\">Close</span></button><div><span ng-bind-html=\"alert.message\"></span>\x3c!--<progressbar ng-if=\"!alert.persist\" class=\"progress-striped active\" value=\"100 - alert.timeout*10\" type=\"{{alert.type}}\"></progressbar>--\x3e</div></div></div>",replace:!1,controller:["$scope","WcAlertConsoleService","$timeout",function(e,t,s){e.visibleMessages=[],e.closeAlert=function(e){t.removeMessage(e,!0)},t.getSettings().removeErrorOnStateChange&&e.$on("$stateChangeStart",function(){t.removeErrorMessages()}),e.$watch(function(){return t.getMessages(!0)},function(t,r){e.visibleMessages=t,s(function(){if(t.length>r.length){var e=$(document).scrollTop(),s=$("div.alert").last().offset();(s=s.top-15)<e&&$("html, body").animate({scrollTop:s},100)}},0)},!0)}]}});
angular.module("WebCoreModule").directive("wcChart",["Chart",function(t){return{restrict:"E",scope:{data:"&data",options:"&options",type:"@",height:"="},replace:!0,template:"<canvas></canvas>",link:function(i,a){var e;this.defaultOptions={responsive:!0,maintainAspectRatio:!1},$.extend(i.options(),this.defaultOptions),this.height=i.height||300,a.wrap("<div style='height:"+this.height+"px '></div>");var n=a[0];i.$watch("[data, options]",angular.bind(this,function(a){a&&i.data&&(this.destroyChart(),(e=new t(n,{type:i.type,data:i.data(),options:i.options()})).resize())},!0)),i.$on("$destroy",angular.bind(this,function(){this.destroyChart()})),this.destroyChart=function(){e&&e.destroy()}}}}]);
angular.module("WebCoreModule").directive("wcCheckAllNone",function(){return{restrict:"AE",require:"?^datatable",scope:{targetContainerId:"@targetContainerId"},template:'<a class="select-all" href="javascript:;" ng-click="checkAll()">{{"actions.selectAll" | translate}}</a> | <a class="select-none" href="javascript:;" ng-click="checkNone()">{{"actions.selectNone"| translate}}</a>',controller:["$scope","WcTableScopeService","WcTranslateConfiguratorService",function(e,t,c){c.loadPartAndRefresh("WC-checkAllNone"),e.viewScope=t.getParentScope(),e.toggleCheckAllExists=!1,e.setToggleCheckAllExists=function(t){e.toggleCheckAllExists=t},e.getToggleCheckAllExists=function(){return e.toggleCheckAllExists},e.checkAll=function(){if(e.targetContainerId.indexOf("table")>0)e.viewScope.$broadcast("table.select.checkbox.all"),e.viewScope.$broadcast("table.select.button.all");else{var t=$("#"+e.targetContainerId).find('input[type="checkbox"]:not(.toggle-check-all)');angular.forEach(t,function(e){e.checked=!0})}},e.checkNone=function(){if(e.targetContainerId.indexOf("table")>0)e.viewScope.$broadcast("table.select.checkbox.none"),e.viewScope.$broadcast("table.select.button.none");else{var t=$("#"+e.targetContainerId).find('input[type="checkbox"]:not(.toggle-check-all)');angular.forEach(t,function(e){e.checked=!1})}}}],link:["$scope","iElement","iAttrs","datatableController",function(){var e=arguments[0],t=arguments[3];t&&e.setToggleCheckAllExists(t.getToggleCheckAllExists())}]}});
//angular.module("WebCoreModule").directive("wcClickOnce",["$timeout",function(t){return{restrict:"A",priority:-1,link:function(n,i){var o=!1,c=function(i){o?(n.$broadcast("onClickOnce"),i.preventDefault(),i.stopImmediatePropagation()):(o=!0,t(function(){o=!1},500,!1))};n.$on("$destroy",function(){i.off("click",c)}),i.on("click",c)}}}]);

angular.module("WebCoreModule").directive("wcClickOnce", ["$timeout", function(t) {
    return {
        restrict: "A",
        priority: -1,
        link: function(n, i) {
//          	console.log('clicou')
            var o = !1,
                c = function(i) {
                    o ? (n.$broadcast("onClickOnce"), i.preventDefault(), i.stopImmediatePropagation()) : (o = !0, t(function() {
                        o = !1
                    }, 500, !1))
                };
            n.$on("$destroy", function() {
                i.off("click", c)
            }), i.on("click", c)
        }
    }
}]);

angular.module("WebCoreModule").directive("wcContinueIfValid",["$timeout",function(t){return{restrict:"A",required:"^ngController",controller:["$state","$element","$scope",function(t,a,n){t.$current.data=t.$current.data||{},t.$current.data.workflow=t.$current.data.workflow||null,t.$current.data.workflow?this.isWorkflowEnabled=!0:this.isWorkflowEnabled=!1,this.getWorkflowData=function(){return t.$current.data.workflow},this.navigateToState=function(a,n,e){var o={name:this.getWorkflowData().nextState,params:{},options:{location:!1,reload:!1}};1==arguments.length?o.name=a:arguments.length>1&&(a&&(o.name=a),n&&(o.params=n),e&&angular.extend(o.options,e)),t.go(o.name,o.params,o.options)},this.clickHandler=angular.bind(this,function(t){var n=this.getWorkflowData().controllerContinueCallbackFunctionName;if(n){var e=t[n](a);e?e.then?e.then(angular.bind(this,function(t){this.navigateToState(t.name,t.params,t.options)}),angular.bind(this,function(t){this.navigateToState(t.name,t.params,t.options)})):this.navigateToState(e.name,e.params,e.options):this.navigateToState()}else this.navigateToState()})}],link:function(a,n,e,o){n.on("click",function(){t(function(){var t=n.controller(),e=n[0].form.name,i=a[e];i||(i=a.$parent[e]),t.isFormSubmitted=!0,i.$valid&&(o.isWorkflowEnabled?o.clickHandler(t):a.$broadcast("navigateToNextState"))},0)})}}}]);
angular.module("WebCoreModule").directive("wcFileUploadImage",function(){return{restrict:"E",scope:{},bindToController:{onUpload:"&",fileTypes:"&"},template:['<div ng-show="ctrl.webcamPresent" class="row">','<div class="row">','<div class="col-md-3 col-md-offset-5" id="wc-file-upload-image-camera"></div>',"</div>",'<div class="row">','<div class="col-md-4 col-md-offset-5">','<button class="btn btn-tertiary " ng-click="ctrl.turnCameraOff()">Camera Off</button>','<button class="btn btn-tertiary" ng-click="ctrl.turnCameraOn()">Camera On</button>','<button class="btn btn-primary" ng-click="ctrl.capturePicture()">Take Picture</button>',"</div>","</div>","</div>",'<div class="row">','<div class="row">','<div class="col-md-3 col-md-offset-5">','<input wc-input-file="ctrl.chooseImageUpload" file-types="ctrl.fileTypes()" class="form-control" type="file" accept="image/">',"</div>","</div>",'<div class="row">','<div class="col-md-2 col-md-offset-5">','<button class="btn btn-primary" ng-click="ctrl.prepareForUpload()">Upload Photo</button>','<button class="btn btn-secondary" ng-click="ctrl.cancel()">Cancel</button>','<button class="btn btn-secondary" ng-click="ctrl.addImages()">Add Images</button>',"</div>","</div>","</div>"].join(""),controllerAs:"ctrl",controller:["$rootScope","WcCameraService","WcImageFileService","WcDataFileService","$scope",function(e,t,a,i){this.cameraElement=$("#wc-file-upload-image-camera"),this.chooseImageUpload=null,this.snapshotToUpload=null,this.webcamPresent=!1,t.checkForCamera().then(angular.bind(this,function(e){e&&(t.setCameraSize(800,600),this.webcamPresent=!0)})).catch(function(e){console.log(e)}),this.cancel=function(){this.chooseImageUpload=null,this.snapshotToUpload=null,this.previewImageElement&&(this.previewImageElement.remove(),delete this.previewImageElement,this.cameraElement.append(this.videoElement),this.videoElement.get(0).play())},this.capturePicture=function(){var e;0===this.cameraElement.find("img").length&&t.cameraIsOn&&(e=t.takePicture(),this.previewImageElement=$("<img>").attr("src",e),this.videoElement.remove(),this.cameraElement.append(this.previewImageElement),this.snapshotToUpload=e)},this.prepareForUpload=function(){var e=this.chooseImageUpload||this.snapshotToUpload,t={};e&&"string"!=typeof e&&e.length>0?i.readFile(e[0]).then(function(n){var c=i.prepareForFileUpload(n);return t.imageBase64String=c.base64String,t.imageMIMEType=c.MIMEType,t.fileType=i.getFileType(e[0]),t.description="...",a.createImageURI(n)}).then(angular.bind(this,function(e){var a=i.prepareForFileUpload(e);t.thumbnailBase64String=a.base64String,t.thumbnailMIMEType=a.MIMEType,this.onUpload({imageObject:t}),this.cancel(),this.original=$("<img>").attr("src",t.imageData),this.thumb=$("<img>").attr("src",e)})):"string"==typeof e&&a.createImageURI(e).then(angular.bind(this,function(a){t.imageData=e,t.thumbnailData=a,t.fileType="jpeg",t.description="...",this.original=$("<img>").attr("src",t.imageData),this.thumb=$("<img>").attr("src",t.thumbnailData),this.onUpload({imageObject:t}),this.cancel()}))},this.turnCameraOff=function(){t.stopCamera(),this.videoElement.remove()},this.turnCameraOn=function(){this.webcamPresent&&!t.cameraIsOn&&t.returnVideoElement().then(angular.bind(this,function(e){this.videoElement=e,$("#wc-file-upload-image-camera").append(this.videoElement),t.startCamera()})).catch(function(e){console.log(e)})}}],link:function(e,t,a,i){i.addImages=function(){t.append(i.original),t.append(i.thumb)}}}});
angular.module("WebCoreModule").directive("wcInputFile",["_",function(e){return{scope:{},bindToController:{wcInputFile:"=",fileTypes:"&"},controllerAs:"ctrl",controller:["$scope","$element","WcDataFileService",function(n,l,t){var i=this;this.onChange=function(o){var c,r=o.target.files;n.$apply(function(){void 0!==i.fileTypes()&&i.fileTypes().length>0&&(c=e.map(r,function(e){return t.getFileType(e)}).filter(function(e){return i.fileTypes().indexOf(e)>=0})),c&&c.length!==r.length?l.val(null):i.wcInputFile=r})}}],link:function(e,n,l,t){n.bind("change",t.onChange),e.$watch(function(){return t.wcInputFile},function(e){console.log("log"),null===e&&n.val(null)})}}}]);
angular.module("WebCoreModule").directive("wcLoadingIndicator",function(){return{restrict:"A",template:'<div id="loading-cover"></div><div id="loading-indicator"><span>{{\'application.loading\' | translate}}</span></div>',controller:["$scope","WcHttpRequestService",function(n,i){var t=0,a=!1;return this.showLoadingIndicator=function(){$("#loading-cover").show().animate({opacity:1},300),$("#loading-indicator").show().animate({opacity:1},300)},this.hideLoadingIndicator=function(){$("#loading-indicator").hide().animate({opacity:0},10),$("#loading-cover").hide().animate({opacity:0},10)},this.incrementPendingCounterAndShow=angular.bind(this,function(){1===++t&&this.showLoadingIndicator()}),this.decrementPendingCounterAndHide=angular.bind(this,function(){0===--t&&this.hideLoadingIndicator()}),i.addRequestInterceptor(angular.bind(this,function(){this.incrementPendingCounterAndShow()})),i.addErrorInterceptor(angular.bind(this,function(){a||this.decrementPendingCounterAndHide()})),i.addResponseInterceptor(angular.bind(this,function(){var n=arguments[0];return a||this.decrementPendingCounterAndHide(),n})),n.$on("$stateChangeStart",angular.bind(this,function(){a=!0})),this.hideLoadingIndicatorCallback=angular.bind(this,function(){t=0,a=!1,this.hideLoadingIndicator()}),n.$on("$stateChangeError",this.hideLoadingIndicatorCallback),n.$on("$viewContentLoaded",this.hideLoadingIndicatorCallback),n.$on("Unauthenticated",this.hideLoadingIndicatorCallback),n.$on("Offline",this.hideLoadingIndicatorCallback),n.loadingIndicator=this}]}});
angular.module("WebCoreModule").directive('wcOnlyNumbers', function () {
    return {
    	restrict: 'A',
    	require: "ngModel",
        link: function (scope, element, attr, ngModelCtrl) {
        	element.on('keydown', function(e) {
        	     -1 !== $.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) || /65|67|86|88/.test(e.keyCode) && (!0 === e.ctrlKey || !0 === e.metaKey) || 35 <= e.keyCode && 40 >= e.keyCode || (e.shiftKey || 48 > e.keyCode || 57 < e.keyCode) && (96 > e.keyCode || 105 < e.keyCode) && e.preventDefault()
        	 });
        }
    };
});
//angular.module("WebCoreModule").directive("wcNavMenu", function() {
//    return {
//    	controller: ["$scope", "$element", "$attrs", "$http", function(e, a, n, t) {
//        	e.menuDataUrl && t.get(e.menuDataUrl).success(function(a) {
//                e.menuData = a	
//            })
//        }],
//    	scope : {
//        	menuData : "=menuData",
//        	menuDataUrl : "@menuDataUrl"
//        }, 
//        template : "<div class='col-md-2 col-xs-2'> <nav class='navbar navbar-default'> <hr/> <ul class='nav'> <li ng-repeat='menu in menuData' data-toggle='collapse' data-target='#{{menu.protected}}'><a href='#{{menu.protected}}'>{{menu.protected}}</a><wc-sub-menu></wc-sub-menu></li> </ul> <hr/> </nav> <div class='sidebar-footer'> </div></div>"
//    };
//}).directive("wcSubMenu", function(){
//	return {
//    	template : "<ul id='{{menu.protected}}' class='collapse out'><li ng-repeat='menu in menu.subMenu' >{{menu.protected}}</li></ul>"
//    };
//})


//angular.module("WebCoreModule").directive("wcNavMenu", function() {
//    return {
//        restrict: "A",
//        scope: {
//            menuData: "=menuData",
//            menuDataUrl: "@menuDataUrl"
//        },
//        transclude: !0,
//        template: '<nav class="navbar navbar-default" role="navigation"> <div class="navbar-header visible-xxs"> <button id="toggle-nav-menu-collapse" type="button" class="navbar-toggle collapsed" ng-click="toggleNavbarCollpase($event)" aria-expanded="false"><span class="sr-only">{{\'application.navigation.toggleTitle\' | translate}}</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span> </button> </div> <div uib-collapse="navbarCollapsed" class="collapse navbar-collapse" id="primary-nav" role="menu"> <ul class="nav navbar-nav"> <li role="menuitem" wc-protected-resource="{{menu.protected}}" ng-repeat="menu in menuData" ng-class="{dropdown:menu.subMenu}" ui-sref-active="active"><a ng-click="collapseNavbar()" ng-if="!menu.subMenu" ui-sref="{{menu.state | translate}}" ui-sref-opts="{reload: true, notify: true}">{{menu.label | translate}}</a><a ng-if="menu.subMenu" ng-click="MainMenuCollpase($event)" role="button" aria-expanded="false" class="dropdown-toggle" data-toggle="collapse" data-target="#teste">{{menu.label | translate}}<span ng-if="menu.subMenu" class="caret"></span></a> <wc-sub-menu></wc-sub-menu> </li> </ul><span ng-transclude></span> </div></nav>',
//        controller: ["$scope", "$element", "$attrs", "$http", function(e, a, n, t) {
//            e.menuDataUrl && t.get(e.menuDataUrl).success(function(a) {
//                e.menuData = a
//            }), e.$on("$stateChangeStart", function() {
//                $("nav .in, nav .open").removeClass("in open")
//            }), e.$on("collapseNavBar", function() {
//                e.collapseNavbar()
//            }), e.navbarCollapsed = !0, e.MainMenuCollpase = function(e) {
//                $(e.target.parentElement).parent().find("li.dropdown,li.dropdown-submenu").not(e.target.parentElement).removeClass("open"), $(e.target.parentElement).toggleClass("open")
//            }, e.toggleNavbarCollpase = function() {
//                e.navbarCollapsed = !e.navbarCollapsed
//            }, e.collapseNavbar = function() {}
//        }]
//    }
//}).directive("wcSubMenu", ["$compile", function(e) {
//    return {
//        restrict: "E",
//        scope: !0,
//        link: function(a, n) {
//            if (a.collapasesubMenu = function(e) {
//                    e.stopPropagation(), n = e.target.parentElement, $(n).toggleClass("open")
//                }, a.menu) {
//                var t = angular.element('<ul id="teste" class="collapse"> <li wc-protected-resource="{{menu.protected}}" ng-repeat="menu in menu.subMenu" ng-class="{\'dropdown-submenu\':menu.subMenu}" ui-sref-active="active"><a ng-if="!menu.subMenu" ui-sref="{{menu.state | translate}}" ui-sref-opts="{reload: true, notify: true}">{{menu.label | translate}}</a><a ng-if="menu.subMenu" ng-click="collapasesubMenu($event)" href>{{menu.label | translate}}</a> <wc-sub-menu ng-if="menu.subMenu"></wc-sub-menu> </li> </ul>');
//                e(t)(a), n.replaceWith(t)
//            } else n.remove()
//        }
//    }
//}]);

//var myApp = angular.module("WebCoreModule");
//
//myApp.controller('toogleController', function($scope) {
//  $scope.box1 = true;
//});
//    
//myApp.directive('slideToggle', function() {  
//  return {
//    restrict: 'A',      
//    scope:{
//      isOpen: "=slideToggle" // 'data-slide-toggle' in our html
//    },
//    link: function(scope, element, attr) {
//      var slideDuration = parseInt(attr.slideToggleDuration, 10) || 200;      
//      
//      // Watch for when the value bound to isOpen changes
//      // When it changes trigger a slideToggle
//      scope.$watch('isOpen', function(newIsOpenVal, oldIsOpenVal){
//        if(newIsOpenVal !== oldIsOpenVal){ 
//          element.stop().slideToggle(slideDuration);
//        }
//      });
//      
//    }
//  };  
//});

var myApp = angular.module("WebCoreModule");

myApp.controller('ToogleController', function($scope) {
  $scope.box1 = true;
  $scope.toogleMenu = function() {
	  $scope.menuMobile=!$scope.menuMobile;
  }	
});
    
myApp.directive('slideToggle', function() {  
  return {
    restrict: 'A',      
    scope:{
      isOpen: "=slideToggle" // 'data-slide-toggle' in our html
    },  
    link: function(scope, element, attr) {
      var slideDuration = parseInt(attr.slideToggleDuration, 10) || 200;      
      // Watch for when the value bound to isOpen changes
      // When it changes trigger a slideToggle
    
      scope.$watch('isOpen', function(newIsOpenVal, oldIsOpenVal){
        if(newIsOpenVal !== oldIsOpenVal){ 
          element.stop().slideToggle(slideDuration);
        }
      });
      
    }
  };  
});



angular.module("WebCoreModule").directive("wcNavMenu", function() {
    return {
        restrict: "A",
        scope: {
            menuData: "=menuData",
            menuDataUrl: "@menuDataUrl"
        },
        transclude: !0,
        template: '<nav role="navigation" class="navigation-role"> <div class="navbar-header visible-xxs font-menu"> <button id="toggle-nav-menu-collapse" type="button" class="navbar-toggle collapsed" ng-click="toggleNavbarCollpase($event)" aria-expanded="false"><span class="sr-only">{{\'application.navigation.toggleTitle\' | translate}}</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span> </button> </div> <div id="primary-nav" role="menu"> <ul class="nav nav-pills nav-stacked font-menu" ng-repeat="menu in menuData"> <li role="menuitem" wc-protected-resource="{{menu.protected}}" ng-class="{dropdown:menu.subMenu}"> <a ng-click="collapseNavbar()" ng-if="!menu.subMenu" ui-sref="{{menu.state | translate}}" ui-sref-opts="{reload: true, notify: true}"><i class="fa fa2 fa-{{menu.icon}} icon-menu fa-2x" ng-if="!menu.subMenu"></i><span class="nav-text">{{menu.label | translate}}</span></a><a ng-if="menu.subMenu" ng-click="MainMenuCollpase($event)" role="button" aria-expanded="false" class="dropdown-toggle" data-toggle="collapse" data-target="#{{menu.protected}}"><i class="fa fa2 fa-{{menu.icon}} icon-menu fa-2x" ng-if="menu.subMenu"></i><span class="nav-text">{{menu.label | translate}}</span><span ng-if="menu.subMenu" class="caret arrow"></span></a> <wc-sub-menu></wc-sub-menu> </li> </ul> <span ng-transclude></span> </div></nav>',
        controller: ["$scope", "$element", "$attrs", "$http", "WcAuthorizationService", function(e, a, n, t, WcAuthorizationService) {
        	
        	e.menuDataUrl && t.get(e.menuDataUrl).success(function(a) {
            	WcAuthorizationService.requestAuthorizationMenu(a).then (function (menuDataAccess) {
            		e.menuData = menuDataAccess;
            	});
            }), e.$on("$stateChangeStart", function() {
                $("nav .in, nav .open").removeClass("open")
            }), e.$on("collapseNavBar", function() {
                e.collapseNavbar()
            }), e.navbarCollapsed = !0, e.MainMenuCollpase = function(e) {
                $(e.target.parentElement).parent().find("li.dropdown,li.dropdown-submenu").not(e.target.parentElement).removeClass("open"), $(e.target.parentElement).toggleClass("open")
            }, e.toggleNavbarCollpase = function() {
                e.navbarCollapsed = !e.navbarCollapsed
            }, e.collapseNavbar = function() {}
        }]
    }
}).directive("wcSubMenu", ["$compile", "$rootScope", function(e, $rootScope) {
    return {
        restrict: "E",
        scope: !0,
        link: function(scope, element, attr) {
        	if (scope.collapasesubMenu = function(e) {
        		e.stopPropagation(), 
        		element = e.target.parentElement, 
        		$(element).toggleClass("open")
                }, 
            scope.menu ) {
        		
                var t = angular.element('<ul id="{{menu.protected}}" class="nav nav-pills nav-stacked collapse submenu ul-sidebar " ><li  class="ul-submenu" wc-protected-resource="{{menu.protected}}" ng-repeat="menu in menu.subMenu" ng-class="{\'dropdown-submenu\':menu.subMenu, active: (\'{{menu.state | translate}}\' | includedByState) || (\'{{menu.state | translate}}-edit\' | includedByState) || (\'{{menu.state | translate}}-info\' | includedByState)}"><a  ng-if="!menu.subMenu"  ui-sref="{{menu.state | translate}}" ui-sref-opts="{reload: true, notify: true}" class="nav-text-sub">{{menu.label | translate}}</a><a ng-if="menu.subMenu"  ng-click="collapasesubMenu($event)" >{{menu.label | translate}}</a><wc-sub-menu  ng-if="menu.subMenu"></wc-sub-menu></li></ul>');
                e(t)(scope), element.replaceWith(t)
            } else element.remove()
            
            t.on('click', function(){
            	$rootScope.$broadcast('loadTab');
            })
        }
    }
}]);

angular.module("WebCoreModule").config(["$provide",function(t){t.decorator("ngModelDirective",["$delegate",function(t){var e=t[0],o=(e.link,function(t){var e=t.nodeName.toLowerCase();if("#comment"===t.nodeName.toLowerCase())return!1;var o=void 0;return"string"==typeof t.type&&(o=t.type.toLowerCase()),"textarea"===e&&!t.hasAttribute("maxlength")||"div"===e&&!t.classList.contains("ui-select-bootstrap")&&!t.hasAttribute("wc-data-table")&&!t.hasAttribute("uib-datepicker-popup-wrap")||"input"===e&&"checkbox"!==o&&"radio"!==o&&!t.hasAttribute("uib-typeahead")&&!t.hasAttribute("uib-datepicker-popup")}),a=e.compile;return e.compile=function(){var t=a.apply(this,arguments);return{pre:function(e,a,r,i){i[2]||(i[2]={});var n=i[2];void 0===n.$options&&o(a[0])&&(n.$options={updateOn:"blur",updateOnDefault:!1}),t.pre.apply(this,arguments)},post:t.post}},t}])}]);
angular.module("WebCoreModule").directive("wcOfflineIndicator",function(){return{restrict:"A",template:'<div><div id="offline-indicator" class="container-fluid" ng-switch="checking"><uib-alert type="warning"><span class="glyphicon glyphicon-warning-sign" ng-switch-when="false"></span><span class="glyphicon glyphicon-refresh glyphicon-refresh-animate" ng-switch-when="true"></span><span>{{\'offlineIndicator.offlineMessage\'|translate}} <a href ng-click="checkNetworkState()">{{\'offlineIndicator.retryConnection\'|translate}}</a></span></uib-alert></div><div id="unavailable-offline" class="container-fluid" ng-switch="checking"><uib-alert type="danger"><span class="glyphicon glyphicon-remove-circle" ng-switch-when="false"></span><span class="glyphicon glyphicon-refresh glyphicon-refresh-animate" ng-switch-when="true"></span><span>{{\'offlineIndicator.unavailableMessage\'|translate}} <a href ng-click="checkNetworkState()">{{\'offlineIndicator.retryConnection\'|translate}}</a></span></uib-alert></div><div id="unauth-indicator" class="container-fluid" ng-switch="checking"><uib-alert type="warning"><span class="glyphicon glyphicon-warning-sign" ng-switch-when="false"></span><span class="glyphicon glyphicon-refresh glyphicon-refresh-animate" ng-switch-when="true"></span><span>{{\'unauthIndicator.unauthMessage\'|translate}} <a href ng-click="wslLogin()">{{\'unauthIndicator.wslLogin\'|translate}}</a></span></uib-alert></div></div>',replace:!0,controller:["WcHttpRequestService","$scope","$window","$timeout","$state","WcTranslateConfiguratorService","Constants",function(n,i,e,a,t,l,s){return l.loadPartAndRefresh("WC-offlineIndicator"),$("#offline-indicator").hide(),$("#unavailable-offline").hide(),$("#unauth-indicator").hide(),i.checking=!1,this.showOfflineIndicator=function(){$("#offline-indicator").show();var n=$("#offline-indicator .alert");n.addClass("pulse"),a(function(){n.removeClass("pulse")},2e3),e.scrollTo(0,1)},this.hideOfflineIndicator=function(){$("#offline-indicator").hide()},this.showUnavailableOffline=function(){$("#unavailable-offline").show();var n=$("#unavailable-offline .alert");n.addClass("pulse"),a(function(){n.removeClass("pulse")},2e3),e.scrollTo(0,1)},this.hideUnavailableOffline=function(){$("#unavailable-offline").hide()},this.showUnauthIndicator=function(){$("#unauth-indicator").show();var n=$("#unauth-indicator .alert");n.addClass("pulse"),a(function(){n.removeClass("pulse")},2e3),e.scrollTo(0,1)},this.hideUnauthIndicator=function(){$("#unauth-indicator").hide()},i.checkNetworkState=function(){i.checking=!0,n.getNetworkState().then(function(n){"unauthenticated"===n&&i.wslLogin(),i.checking=!1})},i.wslLogin=function(){e.location.href=s.wslBaseUrl+encodeURIComponent(e.location.href)},n.addResponseInterceptor(angular.bind(this,function(){this.hideOfflineIndicator(),this.hideUnavailableOffline(),this.hideUnauthIndicator()})),i.$on("Offline",angular.bind(this,function(){t.current.data&&t.current.data.unavailableOffline?(this.hideOfflineIndicator(),this.showUnavailableOffline(),this.hideUnauthIndicator()):(this.showOfflineIndicator(),this.hideUnavailableOffline(),this.hideUnauthIndicator())})),i.$on("Unauthenticated",angular.bind(this,function(){this.showUnauthIndicator(),this.hideOfflineIndicator(),this.hideUnavailableOffline()})),i.offlineIndicator=this}]}});
angular.module("WebCoreModule").directive("wcPageTitle",function(){return{restrict:"A",controller:["$scope","$state","$compile",function(e,t,a){var n=!0;e.pageTitle="",this.cleanUpName=function(e){var t=e;return t=t.replace(/-/g," "),t=t.replace(/\b./g,function(e){return e.toUpperCase()})},this.updatePageTitle=function(){var a,n=$("#ng-app").attr("ng-app").replace("Module",""),r=this.cleanUpName(t.$current.name);t.$current.parent&&(a=this.cleanUpName(t.get(t.$current.parent).name));var i;i=a&&a.replace(/ /g,"")!==n?a+": "+r+" | "+n:r+" | "+n,e.pageTitle=i},e.$on("$viewContentLoaded",angular.bind(this,function(){if(n){var t=$("title").attr({"wc-page-title":"","ng-bind":"pageTitle"});t.replaceWith(a(t)(e)),n=!1}this.updatePageTitle()}))}]}});
angular.module("WebCoreModule").directive("wcPagination",["$templateCache","$compile",function(e,t){return{restrict:"A",priority:1,scope:{wcPagination:"=",location:"@",resultsPerPage:"&",resultsPerPageText:"@",showingResultsText:"@",resultsItemCount:"&",responsiveBreakpoints:"&"},controller:["$scope","$window","_",function(e,t,s){e.searchResults=e.wcPagination,angular.isArray(e.resultsPerPage())?e.resultsPerPage=e.resultsPerPage():e.resultsPerPage=[10,25,50,100],angular.isArray(e.responsiveBreakpoints())?e.responsiveBreakpoints=e.responsiveBreakpoints():e.responsiveBreakpoints=[430,500,600,900],e.resultsPerPageText||(e.resultsPerPageText="Results per page: "),e.showingResultsText||(e.showingResultsText="Showing results "),angular.isNumber(e.resultsItemCount())?e.resultsItemCount=e.resultsItemCount():e.resultsItemCount=e.resultsPerPage[0],e.totalItems=e.searchResults.length,e.itemsPerPage=e.resultsItemCount,e.currentPage=1,e.boundaryLinks=!0,e.maxSize=5,e.filteredSearchResults=[],e.updatePageResultsCount=function(){e.itemsPerPage=e.resultsItemCount},e.begin=1,e.end=e.begin+e.itemsPerPage,e.$watchCollection(function(){return e.currentPage+e.itemsPerPage},function(){e.begin=(e.currentPage-1)*e.itemsPerPage,e.end=e.begin+e.itemsPerPage,e.end>e.totalItems&&(e.end=e.totalItems),e.wcPagination=e.searchResults.slice(e.begin,e.end),t.scrollTo(0,1)}),e.currentBreakpoint="",e.$watch(function(){return e.currentBreakpoint},function(t,s){t!==s&&("xs"===t?($(".pagination-row").addClass("hidden"),e.itemsPerPage=e.searchResults.length,e.maxSize=0,e.boundaryLinks=!1):"sm"===t?($(".pagination-row").removeClass("hidden"),e.itemsPerPage=e.resultsItemCount,e.maxSize=0,e.boundaryLinks=!1):"md"===t?($(".pagination-row").removeClass("hidden"),e.itemsPerPage=e.resultsItemCount,e.maxSize=0,e.boundaryLinks=!1):"lg"===t?($(".pagination-row").removeClass("hidden"),e.itemsPerPage=e.resultsItemCount,e.maxSize=1,e.boundaryLinks=!0):(e.maxSize=5,e.boundaryLinks=!0))});var n=function(){window.innerWidth<=e.responsiveBreakpoints[0]&&"xs"!==e.currentBreakpoint?(e.currentBreakpoint="xs",e.$apply()):window.innerWidth>e.responsiveBreakpoints[0]&&window.innerWidth<=e.responsiveBreakpoints[1]&&"sm"!==e.currentBreakpoint?(e.currentBreakpoint="sm",e.$apply()):window.innerWidth>e.responsiveBreakpoints[1]&&window.innerWidth<=e.responsiveBreakpoints[2]&&"md"!==e.currentBreakpoint?(e.currentBreakpoint="md",e.$apply()):window.innerWidth>e.responsiveBreakpoints[2]&&window.innerWidth<=e.responsiveBreakpoints[3]&&"lg"!==e.currentBreakpoint?(e.currentBreakpoint="lg",e.$apply()):window.innerWidth>e.responsiveBreakpoints[3]&&"xl"!==e.currentBreakpoint&&(e.currentBreakpoint="xl",e.$apply())};angular.element(t).bind("resize",s.debounce(n,300)),setTimeout(n,0)}],link:function(e,s){"top"!==e.location&&"both"!==e.location||s.before(t('<div class="row pagination-row"><div class="col-sm-4 col-xs-6"><label for="results-per-page-top" class="control-label">{{resultsPerPageText}}</label><select ng-model="resultsItemCount" ng-options="result for result in resultsPerPage" id="results-per-page-top" name="resultsPerPage" ng-change="updatePageResultsCount();"></select></div><div class="col-sm-4 hidden-xs text-center results-data">{{showingResultsText}} {{begin+1}}-{{end}} of {{totalItems}}</div><div class="col-sm-4 col-xs-6 text-right"><uib-pagination total-items="totalItems" items-per-page="resultsItemCount" ng-model="currentPage" max-size="maxSize" boundary-links="boundaryLinks" previous-text="&#xe071" next-text="&#xe075" first-text="&#xe069" last-text="&#xe077"></uib-pagination></div></div>')(e)),"bottom"!==e.location&&"both"!==e.location||s.after(t('<div class="row pagination-row"><div class="col-sm-4 col-xs-6"><label for="results-per-page-bottom" class="control-label">{{resultsPerPageText}}</label><select ng-model="resultsItemCount" ng-options="result for result in resultsPerPage" id="results-per-page-bottom" name="resultsPerPage" ng-change="updatePageResultsCount();"></select></div><div class="col-sm-4 hidden-xs text-center results-data">{{showingResultsText}} {{begin+1}}-{{end}} of {{totalItems}}</div><div class="col-sm-4 col-xs-6 text-right"><uib-pagination total-items="totalItems" items-per-page="resultsItemCount" ng-model="currentPage" max-size="maxSize" boundary-links="boundaryLinks" previous-text="&#xe071" next-text="&#xe075" first-text="&#xe069" last-text="&#xe077"></uib-pagination></div></div>')(e))}}}]);
angular.module("WebCoreModule").directive("wcProtectedResource",function(){return{priority:-500,restrict:"A",require:["wcProtectedResource","?^wcDataTable"],controller:["WcAuthorizationService","$element","$attrs",function(e,t,i){this.checkAuthorization=function(){var r=null,o=i.wcProtectedResource;if(o){o.indexOf("|")>-1&&(r=o.slice(o.indexOf("|")+1,o.length).toString().trim()),r&&(o=o.slice(0,o.indexOf("|"))),o=o.split(",");for(var c=0;c<o.length;c++)o[c]=o[c].trim()}else o=[];e.isAuthorized(o,r).then(function(e){!1===e&&t.remove()})}}],compile:function(){return{post:function(){var e=arguments[3],t=e[0],i=e[1];i&&(i.checkAuthorization=t.checkAuthorization()),t.checkAuthorization()}}}}});
//angular.module("WebCoreModule").directive("wcValidationIndicator",["_","$translate","$timeout",function(e,a,r){return{restrict:"A",priority:1,link:function(n,t,i){r(function(){t[0].form&&"FIELDSET"!==t[0].tagName||(t=$(t).find("input"));var r=t[0].form.name,l=n[r];l||(l=n.$parent[r]),!l&&r.indexOf(".")>-1&&(r=r.split("."),l=n.$parent[r[0]][r[1]]);var s=t[0].name;s||(s=i.name)||""===i.wcResponsiveTable&&(s="wcResponsiveTable");var o;if(angular.isArray(r)){var d=t[0].attributes["ng-model"].nodeValue.split(".")[0];o=n.$parent[d]}else o=t.controller();var m=$(t).closest(".form-group")[0];m||(m=$('<div class="form-group"></div>').insertBefore("#"+t.context.attributes.id.value));var u,c,f,v,p,h,g,b,x=i.wcValidationIndicator,P={defaultMsg:"Please add error message for {{n}}.",email:"Please enter a valid email address.",minlength:"Please enter at least {{n}} characters.",maxlength:"You have entered more than {{n}} characters.",min:"Please enter the number greater than {{n}}.",max:"Please enter the number lesser than {{n}}.",minMaxRange:"Please enter between {{min}} and {{max}}.",required:"{{fieldName}} {{\'application.errors.isRequiredError\' | translate}}.",tableRequired:"{{fieldName}} is required.",date:"Please enter a valid date.",pattern:"The pattern entered is incorrect.",number:"Please enter a valid number.",url:"Please enter a valid URL.",inValid:"{{fieldName}} is invalid."},w=function(e){g.length>0?c=l[s].$error.hasOwnProperty("required")?a.instant(P.required,{fieldName:x}):a.instant(P.inValid,{fieldName:x}):(v=i[e],("min"===e||"max"===e)&&i.min&&i.max&&(e="minMaxRange",p=i.min,h=i.max),c=a.instant(P[e],{n:v,fieldName:x,min:p,max:h}))},N=s.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();b=N+"-error";var q=function(e){w(e),f=$('<span id="'+b+'" class="label label-danger"><span class="glyphicon glyphicon-remove-sign"></span><span class="label-text">'+c+"</span></span>")},y=function(){if($(m).find("#"+b).remove(),!l[s].$valid&&o.isFormSubmitted){g=e.filter(e.keys(i),function(e){return e.indexOf("Validator")>-1});for(var a=e.toPairs(l[s].$error),r=0;r<a.length;r++)u=a[r][0],q(u);$(m).append(f),$(m).addClass("has-error")}else $(m).removeClass("has-error"),$(m).find("#"+b).remove()};n.$watch(function(){return l[s].$valid},function(){y()}),n.$watch(function(){return o.isFormSubmitted},function(){y()}),n.$watch(function(){return l[s].$error},function(){y()},!0)},0)}}}]);

/**
 * @ngdoc directive
 * @name WebCoreModule.directive:wcValidationIndicator
 * @restrict A
 * @priority 1
 * @param {string=} wcValidationIndicator string defining the field identifier text that should be used in the validation message
 * @description
 * The wcValidationIndicator directive utilizes Angular's isValid and isRequired checks to display messages according to the error
 * state at the field level. The directive supports all form input types that are currently a part of the FRF.
 */
'use strict';
angular.module('WebCoreModule')
	.directive('wcValidationIndicator', ['_', '$translate', '$timeout', function(_, $translate, $timeout) {
		return {
			restrict: 'A',
			priority: 1,
			link: function(scope, elem, attr) { // jshint ignore:line
				//wrap in timeout of zero seconds to force a digest. This ensures nested directives finish before the indicator directive runs
				$timeout(function(){
					
//					if(elem[0].tagName == 'SELECT'){
//						console.log("ELEM " + $("#bkCountryUidD").val())
//						
//					}	
					
					//fieldset is caps here thanks to the browser defining it that way
					if(!elem[0].form || elem[0].tagName === 'FIELDSET'){
						elem = $(elem).find('input');
					}
					
					var formName = elem[0].form.name;
					
					var ngFormObj = scope[formName];
			
					if(!ngFormObj) {
						//break out of isolate scope and then walk the tree for the form obj
						ngFormObj = scope.$parent[formName];
					}

					//modals use ctrl.form.formName instead of ctrl.formName
					//handle it here
					if(!ngFormObj && formName.indexOf(".") > -1) {
						formName = formName.split('.');
						ngFormObj = scope.$parent[formName[0]][formName[1]];
					}

					var elemName = elem[0].name;
					//sometimes the reset element will not carry the name attr (I'm looking at you, ui-select).
					//in this case, instead grab it off of the attr object that was passed in
					if(!elemName) {
						elemName = attr.name;
						//if this still isn't right, see if we are in a datatable
						if(!elemName) {
							if(attr.wcResponsiveTable === "") {
								elemName = 'wcResponsiveTable';
							}
						}
					}
					var elemCtrl;
					//need to select the controller in a different way if we are within a modal
					if(angular.isArray(formName)) {
						//take the controller's name off of the ng-model.
						//todo - if there's a better way to do this, DO IT!!
						var ctrlName = elem[0].attributes["ng-model"].nodeValue.split('.')[0];
						elemCtrl = scope.$parent[ctrlName];
					}
					else {
						elemCtrl = elem.controller();
					}
					var formGroup = $(elem).closest('.form-group')[0];
					//datatables will not be in a formgroup. add one and refer to it
					if(!formGroup){
						formGroup = $('<div class="form-group"></div>').insertBefore('#'+elem.context.attributes.id.value);
					}

					var fieldNameTranslateString = attr.wcValidationIndicator;


					var errorTypes = {
						defaultMsg: 'Please add error message for {{n}}.',
						email: 'Please enter a valid email address.',
						minlength: 'Please enter at least {{n}} characters.',
						maxlength: 'You have entered more than {{n}} characters.',
						min: 'Please enter the number greater than {{n}}.',
						max: 'Please enter the number lesser than {{n}}.',
						minMaxRange: 'Please enter between {{min}} and {{max}}.',
						required: '{{fieldName}} is required.',
						tableRequired: '{{fieldName}} is required.',
						date: 'Please enter a valid date.',
						pattern: 'The pattern entered is incorrect.',
						number: 'Please enter a valid number.',
						url: 'Please enter a valid URL.',
						inValid: '{{fieldName}} is invalid.'
					};

					var errType, errorMessage, errorMessageDOM, n, min, max, validatorAttrs, errorMsgId;

					var buildErrorMsg = function (errType) {
						if(validatorAttrs.length>0){
							if(ngFormObj[elemName].$error.hasOwnProperty('required')){
								errorMessage = $translate.instant(errorTypes.required, {fieldName:fieldNameTranslateString});
							}
							else {
								errorMessage = $translate.instant(errorTypes.inValid, {fieldName:fieldNameTranslateString});
							}
						}
						else {
							n =attr[errType];
							if((errType==='min'||errType==='max')&&(attr.min&&attr.max)) {
								errType = 'minMaxRange';
								min=attr.min;
								max=attr.max;
							}
							errorMessage = $translate.instant(errorTypes[errType], {n: n, fieldName:fieldNameTranslateString, min:min, max:max});
						}

					};


					//handy regex from http://stackoverflow.com/questions/8955533/javascript-jquery-split-camelcase-string-and-add-hyphen-rather-than-space
					var elemNameSnakeCase = elemName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
					errorMsgId = elemNameSnakeCase + '-error';

					var buildErrorMsgDOM = function (errType) {
						buildErrorMsg(errType);
						errorMessageDOM = $('<span id="' + errorMsgId + '" class="label label-danger"><span class="glyphicon glyphicon-remove-sign"></span><span class="label-text">' + errorMessage + '</span></span>');
					};

					var watchListener = function() {
						//first, remove potential leftover messages.
						$(formGroup).find('#' + errorMsgId).remove();
						
						var idSelected = "";
						
						if(elem[0].tagName == 'SELECT'){
//							console.log('######## ngFormObj[elemName] => '+ngFormObj[elemName]);
							idSelected = $( "#"+elemName+" option:selected" ).val();
							if(idSelected == ""){
								ngFormObj[elemName].$valid = false;
								ngFormObj[elemName].$error.required = true;
							}
						}	
						//when the validation error occurs, insert the error messages and mark the container
						if(!ngFormObj[elemName].$valid && elemCtrl.isFormSubmitted) {
							
							validatorAttrs = _.filter(_.keys(attr), function(item){
								return (item.indexOf('Validator') > -1);
							});

							var errorCases = _.toPairs(ngFormObj[elemName].$error);

							for(var i=0; i<errorCases.length; i++) {
								errType = errorCases[i][0];
								buildErrorMsgDOM(errType);
							}

							$(formGroup).append(errorMessageDOM);
							$(formGroup).addClass('has-error');
						} else {
							$(formGroup).removeClass('has-error');
							$(formGroup).find('#' + errorMsgId).remove();
						}
					};

					scope.$watch(function(){
						return ngFormObj[elemName].$valid;
					}, function(){
						watchListener();
					});

					scope.$watch(function(){
						return elemCtrl.isFormSubmitted;
					}, function(){
						watchListener();
					});

					scope.$watch(function(){
						return ngFormObj[elemName].$error;
					}, function(){
						watchListener();
					}, true);
				},0);
			}
		};
	}]);

angular.module("WebCoreModule").directive("wcDataTable",["$compile","$window","_",function(e,t,a){return{restrict:"A",require:["wcDataTable","?ngModel"],scope:{headerTemplate:"@headerTemplate",overrideOptions:"@wcDataTable",columns:"=columns",columnDefs:"@columnDefs",responsiveColumnDefs:"@responsiveColumnDefs",data:"=data",checkBoxCol:"@checkBoxCol",radioButtonCol:"@radioButtonCol",selectedValue:"@selectedValue",ngModel:"=ngModel",name:"@name"},transclude:!0,replace:!0,template:"<div ng-transclude></div>",controller:["$compile","$scope","$element","$attrs","WcDataTableService",function(e,n,i,o,s){this.defaultOptions={bAutoWidth:!1,bStateSave:!1,bPaginate:!0,sPaginationType:"bootstrap_full_numbers",sDom:'<"row paginator paginator-top"<"col-xs-3"l><"col-xs-4 text-right"i><"col-xs-5 text-right"p>>t<"row paginator paginator-bottom"<"col-xs-3"l><"col-xs-4 text-right"i><"col-xs-5 text-right"p>>>',bLengthChange:!0,bFilter:!1,bDestroy:!0,fnCreatedRow:function(t,a,i){var o=$(t)[0],l=$(o).find("td"),r=$($(l)[0]);$(o).find("a, button").on("click",angular.bind(this,function(){s.setClickedRowData(n.data[i])})),e(r.contents())(n.$parent)},aaSorting:[[2,"asc"]]},this.options={},this.useResponsiveColumns=!1,this.currentBreakpoint=-1,this.previousBreakPoint=-1,this.toggleCheckAll=n.checkBoxCol===parseInt(n.checkBoxCol),this.checkAuthorization=function(){},this.getToggleCheckAllExists=function(){return this.toggleCheckAll},this.initialize=function(e){t.alert=function(){var e=t.alert;return function(a){t.alert=e,0===a.indexOf("DataTables warning")?console.warn(a):e(a)}}(),this.table=i.find("table");var s={};if(n.overrideOptions&&(s=n.$eval(n.overrideOptions)),n.columns&&(s.aoColumns=angular.copy(n.columns)),this.showcheckBoxColumn=n.checkBoxCol===parseInt(n.checkBoxCol),this.showRadioColumn=n.radioButtonCol===parseInt(n.radioButtonCol),this.inValidCombination=this.showcheckBoxColumn&&this.showRadioColumn,this.hasInputField=this.showcheckBoxColumn||this.showRadioColumn,this.inValidCombination){c="YOU CANNOT HAVE A DATATABLE WITH BOTH A CHECKBOX COLUMN AND A RADIOBUTTON COLUMN - IT MESSES WITH THE DATA";return console.error(c),i.prepend('<div class="alert alert-danger"><td colspan=""><p>'+c+"</p></div>"),!1}var l=o.required?"required":"",r=n.name?'name="'+n.name+'"':"";if(this.hasInputField&&!o.ngModel){c='Must define the "ng-model" attribute IF a checkbox or radio column index is defined.';console.error(c),i.prepend('<div class="alert alert-danger"><td colspan=""><p>'+c+"</p></div>")}if(this.hasInputField&&!r){c='Must define the "name" attribute IF a checkbox or radio column index is defined.';console.error(c),i.prepend('<div class="alert alert-danger"><td colspan=""><p>'+c+"</p></div>")}if(this.hasInputField&&!n.selectedValue){c='Must define the "selected-value" attribute IF a checkbox or radio column index is defined.';console.error(c),i.prepend('<div class="alert alert-danger"><td colspan=""><p>'+c+"</p></div>")}if(!this.hasInputField&&l){var c="Must define a checkbox or radio column index IF the HTML5 required attribute is set";console.error(c),i.prepend('<div class="alert alert-danger"><td colspan=""><p>'+c+"</p></div>")}if(this.showcheckBoxColumn){var d={sTitle:'<input type="checkbox" id="toggleAll" class="toggle-check-all"/><label for="toggleAll" class="hidden">Toggle Check All</label>',sClass:"text-center",mData:n.selectedValue,mRender:function(e,t,a){return angular.toJson(e)===angular.toJson(a[n.selectedValue])&&-1===new String(a[n.selectedValue]).indexOf("<label")?'<label class="sr-only" for="checkbox_'+a[n.selectedValue]+'">Select '+a[n.selectedValue]+'</label><input type="checkbox" id="checkbox_'+a[n.selectedValue]+'" '+r+" "+l+' class="checkbox table-check-box" value="'+a[n.selectedValue]+'"/>':e},bSortable:!1};angular.toJson(s.aoColumns[n.checkBoxCol])!==angular.toJson(d)&&s.aoColumns.splice(n.checkBoxCol,0,d),$(this.table).addClass("table-toggle-check-all")}if(this.showRadioColumn){var h={sTitle:"",sClass:"text-center",mData:n.selectedValue,mRender:function(e){return e?'<label class="sr-only" for="radio_'+e+'">Select '+e+'</label><input type="radio" id="radio_'+e+'" '+r+" "+l+' class="radio table-radio-button" value="'+e+'"/>':""},bSortable:!1};angular.toJson(s.aoColumns[n.radioButtonCol])!==angular.toJson(h)&&s.aoColumns.splice(n.radioButtonCol,0,h)}if(n.columnDefs&&(s.aoColumnDefs=n.$eval(n.columnDefs)),n.responsiveColumnDefs){if(this.responsiveColumnDefs=n.$eval(n.responsiveColumnDefs),void 0===this.responsiveColumnDefs.initial)throw"DataTables Error: No initial state defined.";this.useResponsiveColumns=!0,this.maxBreakpoint=a.max(this.responsiveColumnDefs.breakpoints)}return this.defineTable(s),n.data&&(this.dataTable.fnAddData(n.data),n.$watch(function(){return n.data},angular.bind(this,function(t,a){t!==a&&(this.defineTable(this.options),this.dataTable.fnClearTable(),this.dataTable.fnAddData(n.data),this.createInputColumn(e))}))),this.createInputColumn=function(e){var t=$(this.table);if(this.showRadioColumn){r=this.table.fnGetNodes();n.$parent.$eval(o.ngModel)&&($(r).find("input[id=radio_"+n.$parent.$eval(o.ngModel)+"]").prop("checked",!0),$(r).find("input[id=radio_"+n.$parent.$eval(o.ngModel)+"]").parent().parent().addClass("selected")),angular.element($(r).find(".table-radio-button")).on("change",function(){$.each(r,function(){$(this).removeClass("selected"),$(this).find('input[type="radio"]').prop("checked",!1)}),$(this).parent().parent().addClass("selected"),$(this).prop("checked",!0),e.$setViewValue($(this).val()),n.$apply()})}if(this.showcheckBoxColumn){$(this.table).addClass("table-toggle-check-all");var i,s=[],l=[],r=this.table.fnGetNodes();n.$parent.$eval(o.ngModel)&&angular.forEach(n.$parent.$eval(o.ngModel),function(e){$(r).find("input[id=checkbox_"+e+"]").prop("checked",!0),$(r).find("input[id=checkbox_"+e+"]").parent().parent().addClass("selected")}),angular.element($(r).find(".table-check-box")).on("change",function(){e.$viewValue?this.checked?($(this).parent().parent().addClass("selected"),s=e.$viewValue,i=[$(this).val()],l=a.uniq(s.concat(i)),e.$setViewValue(l)):($(this).parent().parent().removeClass("selected"),l=a.without(e.$viewValue,$(this).val()),e.$setViewValue(l)):($(this).parent().parent().addClass("selected"),e.$setViewValue([$(this).val()])),t.find(".table-check-box").length===t.find(".selected").length?t.find("thead th input.toggle-check-all").prop("checked",!0):t.find("thead th input.toggle-check-all").prop("checked",!1),"$apply"!==n.$root.$$phase&&"$digest"!==n.$root.$$phase&&n.$apply()}),angular.element(t.find("thead th input.toggle-check-all")).on("change",function(){this.checked?$.each(t.find(".table-check-box"),function(){!1===$(this).prop("checked")&&$(this).click()}):$.each(t.find(".table-check-box"),function(){$(this).prop("checked")&&$(this).click()})}),this.table.bind("draw",function(){t.find(".table-check-box").length===t.find(".selected").length?t.find("thead th input.toggle-check-all").prop("checked",!0):t.find("thead th input.toggle-check-all").prop("checked",!1)})}},!0},this.defineTable=function(e){e=a.defaults(e,this.defaultOptions),angular.extend(this.options,e),this.dataTable&&this.dataTable.fnDestroy(),this.dataTable=this.table.dataTable(this.options)},this.adjustColumns=function(){var e=this.dataTable.fnSettings(),n={},o=null;$(t).width()>this.maxBreakpoint&&(this.previousBreakPoint=this.currentBreakPoint,this.currentBreakPoint=-1,o=this.responsiveColumnDefs.initial.columns,n={bPaginate:this.responsiveColumnDefs.initial.paging,sDom:this.responsiveColumnDefs.initial.dom,sPaginationType:this.responsiveColumnDefs.initial.pagination,oLanguage:{oPaginate:{sShowPagingText:this.responsiveColumnDefs.initial.showPagingText}}});for(l=0;l<=this.responsiveColumnDefs.breakpoints.length;l++)if($(t).width()<this.responsiveColumnDefs.breakpoints[l]){this.previousBreakPoint=this.currentBreakPoint,this.currentBreakPoint=this.responsiveColumnDefs.breakpoints[l],o=this.responsiveColumnDefs.columns[l],n={bPaginate:this.responsiveColumnDefs.paging[l],sDom:this.responsiveColumnDefs.dom[l],sPaginationType:this.responsiveColumnDefs.pagination[l],oLanguage:{oPaginate:{sShowPagingText:this.responsiveColumnDefs.showPagingText[l]}}};break}if(this.currentBreakPoint!==this.previousBreakPoint){var s=angular.merge(this.options,n);this.defineTable(s);for(var l=0;l<e.aoColumns.length;l++)a.contains(o,l)?this.dataTable.fnSetColumnVis(l,!1):e.aoColumns[l].bVisible||this.dataTable.fnSetColumnVis(l,!0);i.find(".paginator select").addClass("form-control input-sm")}}}],compile:function(){var a=/<.+>/;return{pre:function(t,n){if(t.headerTemplate){var i=t.headerTemplate;i&&!a.test(i)&&(i=$.ajax({type:"GET",url:i,async:!1}).responseText),i=angular.element(i),e(i)(t);var o=n.find("table"),s=o.find("thead");s.exists()?s.replaceWith(i):o.append(i)}},post:function(e,a,n,i){var o=i[0],s=i[1];o.initialize(s)&&(o.useResponsiveColumns&&(o.adjustColumns(),angular.element(t).bind("resize",function(){o.adjustColumns(),o.createInputColumn(s),e.$apply()})),o.createInputColumn(s))}}}}}]);
angular.module("WebCoreModule").service("WcDataTableService",["$q",function(e){var t={};this.setClickedRowData=function(e){t=e},this.getClickedRowData=function(){return e.when(t)}}]);
$.extend(!0,$.fn.dataTable.defaults,{sDom:"<'row paginator'<'col-xs-6'l><'col-xs-6'f>r>t<'row paginator'<'col-xs-6'i><'col-xs-6'p>>",sPaginationType:"bootstrap_full_numbers",oLanguage:{sLengthMenu:"Results per page: _MENU_",sInfo:"Showing Results: _START_ - _END_ of _TOTAL_"}}),$.extend($.fn.dataTableExt.oStdClasses,{sWrapper:"dataTables_wrapper form-inline"}),$.extend($.fn.dataTableExt.oPagination,{bootstrap_two_button:{fnInit:function(a,e,t){var s=a.oLanguage.oPaginate,i=a.oClasses,n="disabled "+i.sPageButtonStaticDisabled,l='<ul class="pagination"><li class="previous '+n+'"><a href="javascript:;" class="'+i.sPageButton+" "+i.sPagePrevious+'" tabindex="'+a.iTabIndex+'" role="button"><span class="'+i.sPagePreviousText+'">'+s.sPrevious+'</span></a></li><li class="next '+n+'"><a href="javascript:;" class="'+i.sPageButton+" "+i.sPageNext+'" tabindex="'+a.iTabIndex+'" role="button"><span class="'+i.sPageNextText+'">'+s.sNext+"</span></a></li></ul>";$(e).append(l);var o=$("a",e),r=o[0],d=o[1];a.aanFeatures.p||(e.id=a.sTableId+"_paginate",r.id=a.sTableId+"_previous",d.id=a.sTableId+"_next",r.setAttribute("aria-controls",a.sTableId),d.setAttribute("aria-controls",a.sTableId));var c=function(e){e.preventDefault(),a.oApi._fnPageChange(a,e.data.action)&&t(a)};a.oApi._fnBindAction(r,{action:"previous"},c),a.oApi._fnBindAction(d,{action:"next"},c)},fnUpdate:function(a){if(a.aanFeatures.p)for(var e=Math.ceil(a.fnRecordsDisplay()/a._iDisplayLength),t=Math.ceil(a._iDisplayStart/a._iDisplayLength)+1,s="disabled "+a.oClasses.sPageButtonStaticDisabled,i=a.aanFeatures.p,n=0;n<i.length;n++)1===t?$("li:eq(0)",i[n]).addClass(s):$("li:eq(0)",i[n]).removeClass(s),0===e||t===e||-1===a._iDisplayLength?$("li:eq(-1)",i[n]).addClass(s):$("li:eq(-1)",i[n]).removeClass(s)}},bootstrap_normal:{fnInit:function(a,e,t){var s=a.oLanguage.oPaginate,i=a.oClasses,n="disabled "+i.sPageButtonStaticDisabled,l='<ul class="pagination"><li class="previous '+n+'"><a href="javascript:;" class="'+i.sPageButton+" "+i.sPagePrevious+'" tabindex="'+a.iTabIndex+'" role="button"><span class="'+i.sPagePreviousText+'">'+s.sPrevious+'</span></a></li><li class="next '+n+'"><a href="javascript:;" class="'+i.sPageButton+" "+i.sPageNext+'" tabindex="'+a.iTabIndex+'" role="button"><span class="'+i.sPageNextText+'">'+s.sNext+"</span></a></li></ul>";$(e).append(l);var o=$("a",e),r=o[0],d=o[1];a.aanFeatures.p||(e.id=a.sTableId+"_paginate",r.id=a.sTableId+"_previous",d.id=a.sTableId+"_next",r.setAttribute("aria-controls",a.sTableId),d.setAttribute("aria-controls",a.sTableId));var c=function(e){e.preventDefault(),a.oApi._fnPageChange(a,e.data.action)&&t(a)};a.oApi._fnBindAction(r,{action:"previous"},c),a.oApi._fnBindAction(d,{action:"next"},c)},fnUpdate:function(a,e){if(a.aanFeatures.p){var t,s,i=$.fn.dataTableExt.oPagination.iFullNumbersShowPages,n=Math.floor(i/2),l=Math.ceil(a.fnRecordsDisplay()/a._iDisplayLength),o=Math.ceil(a._iDisplayStart/a._iDisplayLength)+1;-1===a._iDisplayLength?(t=1,s=1,o=1):l<i?(t=1,s=l):o<=n?(t=1,s=i):o>=l-n?(t=l-i+1,s=l):s=(t=o-Math.ceil(i/2)+1)+i-1;for(var r=a.oClasses,d="active "+r.sPageButtonActive,c="disabled "+r.sPageButtonStaticDisabled,p="",u=t;u<=s;u++)p+=o!==u?'<li><a href="javascript:;" class="'+r.sPageButton+'" tabindex="'+a.iTabIndex+'" role="button">'+a.fnFormatNumber(u)+"</a></li>":'<li class="'+d+'"><a href="javascript:;" class="'+r.sPageButton+'" tabindex="'+a.iTabIndex+'" role="button">'+a.fnFormatNumber(u)+"</a></li>";for(var b=a.aanFeatures.p,u=0;u<b.length;u++)b[u].hasChildNodes()&&(1===o?$("li:eq(0)",b[u]).addClass(c):$("li:eq(0)",b[u]).removeClass(c),0===l||o===l||-1===a._iDisplayLength?$("li:eq(-1)",b[u]).addClass(c):$("li:eq(-1)",b[u]).removeClass(c),$("li:gt(0)",b[u]).filter(":not(li:eq(-1))").remove(),$(p).clone().insertBefore($("li:eq(-1)",b[u])).each(function(s){a.oApi._fnBindAction(this,{page:s+t-1},function(t){a.oApi._fnPageChange(a,t.data.page),e(a),t.preventDefault()})}))}}},bootstrap_full_numbers:{fnInit:function(a,e,t){var s=a.oLanguage.oPaginate,i=a.oClasses,n="disabled "+i.sPageButtonStaticDisabled,l=s.sShowPagingText?"":"text-hide",o=s.sShowPagingText?i.sPageButton:i.sPageButton+" no-text",r='<ul class="pagination"><li class="first '+n+'"><a href="javascript:;" class="'+o+" "+i.sPageFirst+'" tabindex="'+a.iTabIndex+'" role="button"><span class="'+l+'">'+s.sFirst+'</span></a></li><li class="previous '+n+'"><a href="javascript:;" class="'+o+" "+i.sPagePrevious+'" tabindex="'+a.iTabIndex+'" role="button"><span class="'+l+'">'+s.sPrevious+'</span></a></li><li class="next '+n+'"><a href="javascript:;" class="'+o+" "+i.sPageNext+'" tabindex="'+a.iTabIndex+'" role="button"><span class="'+l+'">'+s.sNext+'</span></a></li><li class="last '+n+'"><a href="javascript:;" class="'+o+" "+i.sPageLast+'" tabindex="'+a.iTabIndex+'" role="button"><span class="'+l+'">'+s.sLast+"</span></a></li></ul>";$(e).append(r);var d=$("a",e),c=d[0],p=d[1],u=d[2],b=d[3];a.aanFeatures.p||(e.id=a.sTableId+"_paginate",c.id=a.sTableId+"_first",p.id=a.sTableId+"_previous",u.id=a.sTableId+"_next",b.id=a.sTableId+"_last",c.setAttribute("aria-controls",a.sTableId),p.setAttribute("aria-controls",a.sTableId),u.setAttribute("aria-controls",a.sTableId),b.setAttribute("aria-controls",a.sTableId));var f=function(e){e.preventDefault(),a.oApi._fnPageChange(a,e.data.action)&&t(a)};a.oApi._fnBindAction(c,{action:"first"},f),a.oApi._fnBindAction(p,{action:"previous"},f),a.oApi._fnBindAction(u,{action:"next"},f),a.oApi._fnBindAction(b,{action:"last"},f)},fnUpdate:function(a,e){if(a.aanFeatures.p){var t,s,i=$.fn.dataTableExt.oPagination.iFullNumbersShowPages,n=Math.floor(i/2),l=Math.ceil(a.fnRecordsDisplay()/a._iDisplayLength),o=Math.ceil(a._iDisplayStart/a._iDisplayLength)+1;-1===a._iDisplayLength?(t=1,s=1,o=1):l<i?(t=1,s=l):o<=n?(t=1,s=i):o>=l-n?(t=l-i+1,s=l):s=(t=o-Math.ceil(i/2)+1)+i-1;for(var r=a.oClasses,d="active "+r.sPageButtonActive,c="disabled "+r.sPageButtonStaticDisabled,p="",u=t;u<=s;u++)p+=o!==u?'<li><a href="javascript:;" class="'+r.sPageButton+'" tabindex="'+a.iTabIndex+'" role="button">'+a.fnFormatNumber(u)+"</a></li>":'<li class="'+d+'"><a href="javascript:;" class="'+r.sPageButton+'" tabindex="'+a.iTabIndex+'" role="button">'+a.fnFormatNumber(u)+"</a></li>";for(var b=a.aanFeatures.p,u=0;u<b.length;u++)b[u].hasChildNodes()&&(1===o?($("li:eq(0)",b[u]).addClass(c),$("li:eq(1)",b[u]).addClass(c)):($("li:eq(0)",b[u]).removeClass(c),$("li:eq(1)",b[u]).removeClass(c)),0===l||o===l||-1===a._iDisplayLength?($("li:eq(-1)",b[u]).addClass(c),$("li:eq(-2)",b[u]).addClass(c)):($("li:eq(-1)",b[u]).removeClass(c),$("li:eq(-2)",b[u]).removeClass(c)),$("li:gt(1)",b[u]).filter(":not(li:eq(-2))").filter(":not(li:eq(-1))").remove(),$(p).clone().insertBefore($("li:eq(-2)",b[u])).each(function(s){a.oApi._fnBindAction(this,{page:s+t-1},function(t){a.oApi._fnPageChange(a,t.data.page),e(a),t.preventDefault()})}))}}}}),$.fn.DataTable.TableTools&&($.extend(!0,$.fn.DataTable.TableTools.classes,{container:"DTTT btn-group",buttons:{normal:"btn btn-default",disabled:"disabled"},collection:{container:"DTTT_dropdown dropdown-menu",buttons:{normal:"",disabled:"disabled"}},print:{info:"DTTT_print_info"},select:{row:"active"}}),$.extend(!0,$.fn.DataTable.TableTools.DEFAULTS.oTags,{collection:{container:"ul",button:"li",liner:"a"}}));
angular.module("WebCoreModule").directive("prism",[function(){return{restrict:"A",link:function(e,i){i.ready(function(){Prism.highlightElement(i[0])})}}}]);
angular.module("WebCoreModule").filter("WcPrice",["_",function(n){function r(n,r){return!n&&0!==n||!r&&0!==r?n&&null===r?"min":r&&null===n?"max":"invalid":"range"}function i(r,i,e){return e?n.filter(r,function(n){if(n[e]<=i)return!0}):n.filter(r,function(n){if(n<=i)return!0})}function e(r,i,e){return e?n.filter(r,function(n){if(n[e]>=i)return!0}):n.filter(r,function(n){if(n>=i)return!0})}function t(r,i,e,t){return t?n.filter(r,function(n){if(n[t]>=i&&n[t]<=e)return!0}):n.filter(r,function(n){if(n>=i&&n<=e)return!0})}return function(n,u,f,c){var l=[];switch((void 0===u||isNaN(u))&&(u=null),(void 0===f||isNaN(f))&&(f=null),r(u,f)){case"range":l=t(n,u,f,c);break;case"min":l=e(n,u,c);break;case"max":l=i(n,f,c);break;case"invalid":l=n}return l}}]);
angular.module("WcResponsiveTableModule",[]);

angular.module("WcResponsiveTableModule").directive("wcResponsiveTableClient",["$compile","_","$timeout","$swipe",function(e,t,l,n){return{scope:{data:"&",rowKey:"@",ngModel:"=",resultsPerPage:"=",paginationControlsPlacement:"@",responsiveView:"@",columnData:"=",selectResultsPerPage:"="},require:["?ngModel"],controller:["_","$scope","$element","$attrs","WcTableScopeService","WcTableCollectionService","WcTablePaginationService",function(e,t,n,i,a,o,r){var c=t.$parent;""===i.required&&(t.required=!0),""===i.paginationEnabled&&(t.paginationEnabled=!0),""===i.checkallnoneEnabled&&(t.checkallnoneEnabled=!0),""===i.exporttopdfEnabled&&(t.exporttopdfEnabled=!0),""===i.exporttoexcelEnabled&&(t.exporttoexcelEnabled=!0),o.setInitialCollection(t.data()),o.setRowKey(t.rowKey),a.setParentScope(c),a.setTableScope(t),t.ngModel||(t.ngModel=[]),t.lastCollectionRendered=null,t.renderTable=function(e){t.$broadcast("table.pagination.update",e),t.$broadcast("table.render.start"),t.tableIsLoading()},t.tableIsLoading=function(){$(".wc-table-loading-indicator").show(),$(".wc-table-loading-cover").show()},t.tableIsFinishedLoading=function(){$(".wc-table-loading-indicator").hide(),$(".wc-table-loading-cover").hide()},t.tableRendered=function(){$(".wc-table-column-"+t.previousSortColumn).removeClass("wc-table-column-highlight"),$(".wc-table-column-"+t.activeSortColumn).addClass("wc-table-column-highlight"),l(function(){c.$broadcast("table.render.complete"),t.tableIsFinishedLoading()},0)},t.toggleFilterVisibility=function(){$("div[wc-responsive-table] thead input[wc-column-filter], div[wc-responsive-table] thead select[wc-column-filter]").toggle();var e=$("div[wc-responsive-table] .filter-visibility-toggle span:first-child").text();e.indexOf("Show")>-1?(e=e.replace("Show","Hide"),$(".wc-table thead > tr > th").css("vertical-align","top")):(e=e.replace("Hide","Show"),$(".wc-table thead > tr > th").css("vertical-align","bottom")),$("div[wc-responsive-table] .filter-visibility-toggle span:first-child").text(e)};var s=2;t.ratchetCols=function(e){window.innerWidth<1200&&(t.$broadcast("ng-swipe"),"left"===e?($(".wc-table.table-ratchet .wc-table-column-"+s).hide(),s<t.numberOfCols&&s++):"right"===e&&($(".wc-table.table-ratchet .wc-table-column-"+(s-1)).show(),s>2&&s--))},t.$on("ng-swipe",function(){t.animating||(t.animating=!0,$(".wc-table.table-ratchet table").animate({opacity:.7},150,function(){$(".wc-table.table-ratchet table").animate({opacity:1},200,function(){})}),t.animating=!1)}),t.columnsToHide=[],(t.paginationEnabled||t.resultsPerPage||t.numberOfPageControls||t.selectResultsPerPage||t.responsiveBreakpoints||t.paginationControlsPlacement)&&(r.setPaginationState(!0),r.setPaginationDefaults({numberOfPageControls:t.numberOfPageControls,responsiveBreakpoints:t.responsiveBreakpoints,selectResultsPerPage:t.selectResultsPerPage,resultsPerPage:t.resultsPerPage,paginationControlsPlacement:t.paginationControlsPlacement}))}],link:function(l,i,a,o){var r=i[0].children[0];"TABLE"!==r.tagName&&(console.error("Table tag <table> must come right after <wc-responsive-table>"),console.error("Directive found "+r[0].tagName+" instead")),i.addClass("wc-table");var c=$(r).find("tbody tr"),s=$(r).find("thead tr")[0];l.numberOfCols=s.children.length;for(var d=0;d<s.children.length;d++)l.columnsToHide[d]=!1,$(s.children[d]).addClass("wc-table-column-"+d);for(d=0;d<c.children().length;d++){var u=$(c.children()[d]);if(u.addClass("wc-table-column-"+d),"list"===l.responsiveView){var p=$(s).find("th")[d],b=$(p).clone().children().remove().end().text();u.attr("data-title",b)}}if(l.exporttopdfEnabled&&i.prepend(e("<wc-export-to-pdf>")(l)),l.exporttoexcelEnabled&&i.prepend(e("<wc-export-to-excel>")(l)),l.paginationEnabled&&i.prepend(e("<wc-table-pagination>")(l)),l.checkallnoneEnabled&&i.next().append(e('<wc-check-all-none target-container-id="'+a.id+'">')(l)),"scroll"===l.responsiveView)i.addClass("table-responsive");else if("ratchet"===l.responsiveView){i.addClass("table-ratchet");var g,h,f=function(e){if(!g)return!1;var t=Math.abs(e.y-g.y),l=e.x-g.x;return!!(h&&t<75&&0!==l&&Math.abs(l)>30&&t/Math.abs(l)<.3)&&(l>0?"right":"left")};n.bind($(r),{start:function(e){g=e,h=!0},cancel:function(){h=!1},end:function(e){var t=f(e);t&&l.ratchetCols(t)}})}else if("column-toggle"===l.responsiveView||"radio-columns"===l.responsiveView){i.addClass("column-toggle");var w='<span class="dropdown column-toggle"><span name="columnToggleDropdown" data-toggle="dropdown" id="columnToggleDropdown"><span>Manage Columns</span><span class="glyphicon glyphicon-chevron-down"></span></span><fieldset class="dropdown-menu form-group" role="menu" aria-labelledby="columnToggleDropdown">';$(s).children().each(function(e,t){var l=t.firstChild.data;t.firstChild.nextSibling&&"wc-row-select-header-checkbox"===t.firstChild.nextSibling.localName&&(l="Checkbox Column"),t.firstChild.nextSibling&&"wc-row-select-header-radio"===t.firstChild.nextSibling.localName&&(l="Radio Column"),null!==t.firstChild&&(w+='<div role="menuitem" class="checkbox"><label for="col'+e+'"><input id="col'+e+'" type="checkbox" checked ng-model="columnsToHide['+e+']"/>'+l+"</label></div>")}),w+="</fieldset></span>",l.$watchCollection(function(){return l.columnsToHide},function(e,t){if(e!==t)for(l=0;l<e.length;l++)e[l]?$(".wc-table.column-toggle .wc-table-column-"+l).show():$(".wc-table.column-toggle .wc-table-column-"+l).hide();else{for(var l=0;l<e.length;l++)e[l]=!0;$(".form-group").click(function(e){e.stopPropagation()})}}),$(r).before(e(w)(l))}else"list"===l.responsiveView?(i.addClass("table-mobile-stack"),$(".filter-visibility-toggle").hide()):l.responsiveView;if(i.find("thead input[wc-column-filter], thead select[wc-column-filter]").length)if(""===a.staticFilter)l.staticFilter=!0,$("div[wc-responsive-table] thead input[wc-column-filter], div[wc-responsive-table] thead select[wc-column-filter]").toggle();else{$(r).before(e('<div class="filter-visibility-toggle" ng-click="toggleFilterVisibility()"><span>Show Filters</span><span class="glyphicon glyphicon-filter"></span></div>')(l)),$(r).before('<div class="active-filters"></div>')}i.append('<div class="wc-table-loading-cover"><div class="wc-table-loading-indicator"><span>Loading...</span></div>');var v=function(e){$(e).each(function(e,t){$(t).css("height",$(t).closest("tr").css("height"))})},m=function(){v(".wc-table-column-0"),v(".wc-table-column-1")};if("scroll"===l.responsiveView){$(window).on("resize",t.debounce(m,250)),l.$on("table.render.complete",t.debounce(m,10));var C=function(e){$(".table-responsive .wc-table-column-0").each(function(t,l){$(l).css("left",e.currentTarget.scrollLeft+"px")}),$(".table-responsive .wc-table-column-1").each(function(t,l){$(l).css("left",e.currentTarget.scrollLeft+100+"px")}),$("div[wc-responsive-table].table-responsive .filter-visibility-toggle").each(function(t,l){$(l).css("left",e.currentTarget.scrollLeft+15+"px")})};i.scroll(C),i.on("touchmove",C)}else"ratchet"===l.responsiveView||"list"===l.responsiveView||l.responsiveView;o[0]&&(o[0].$name="wcResponsiveTable",o[0].$parsers.push(function(e){return l.required&&(!e||angular.isArray(e)&&0===e.length?o[0].$setValidity("tableRequired",!1):o[0].$setValidity("tableRequired",!0)),e}),o[0].$formatters.push(function(e){return l.required&&(!e||angular.isArray(e)&&0===e.length?o[0].$setValidity("tableRequired",!1):o[0].$setValidity("tableRequired",!0)),e}),l.applyModel=function(e){o[0].$setViewValue(e)},o[0].$$parentForm.$addControl(o[0])),l.dataRowChildren=c.children().clone(),c.children().remove(),c.attr("wc-row-repeat",""),e(c)(l),c[0].children.length<1&&l.renderTable()}}}]);

angular.module("WcResponsiveTableModule").directive("wcResponsiveTable", ["$compile", "_", "$timeout", "$swipe", function(e, t, l, n) {
    return {
        scope: {
            data: "&",
            count: "&",
            rowKey: "@",
            ngModel: "=",
            resultsPerPage: "=",
            paginationControlsPlacement: "@",
            responsiveView: "@",
            columnData: "=",
            selectResultsPerPage: "=",
            currentPage: "=page"
        },
        require: ["?ngModel"],
        controller: ["_", "$scope", "$element", "$attrs", "WcTableScopeService", "WcTableCollectionService", "WcTablePaginationService", function(e, t, n, i, a, o, r) {
            var c = t.$parent;
            
//            console.log("COUNT = " + t.count());
            
            "" === i.required && (t.required = !0), "" === i.paginationEnabled && (t.paginationEnabled = !0), "" === i.checkallnoneEnabled && (t.checkallnoneEnabled = !0), "" === i.exporttopdfEnabled && (t.exporttopdfEnabled = !0), "" === i.exporttoexcelEnabled && (t.exporttoexcelEnabled = !0), o.setInitialCollection(t.data(), t.count()), o.setRowKey(t.rowKey), a.setParentScope(c), a.setTableScope(t), t.ngModel || (t.ngModel = []), t.lastCollectionRendered = null, t.renderTable = function(e) {
                t.$broadcast("table.pagination.update", e), t.$broadcast("table.render.start"), t.tableIsLoading()
            }, t.tableIsLoading = function() {
                $(".wc-table-loading-indicator").show(), $(".wc-table-loading-cover").show()
            }, t.tableIsFinishedLoading = function() {
                $(".wc-table-loading-indicator").hide(), $(".wc-table-loading-cover").hide()
            }, t.tableRendered = function() {
                $(".wc-table-column-" + t.previousSortColumn).removeClass("wc-table-column-highlight"), $(".wc-table-column-" + t.activeSortColumn).addClass("wc-table-column-highlight"), l(function() {
                    c.$broadcast("table.render.complete"), t.tableIsFinishedLoading()
                }, 0)
            }, t.toggleFilterVisibility = function() {
                $("div[wc-responsive-table] thead input[wc-column-filter], div[wc-responsive-table] thead select[wc-column-filter]").toggle();
                var e = $("div[wc-responsive-table] .filter-visibility-toggle span:first-child").text();
                e.indexOf("Show") > -1 ? (e = e.replace("Show", "Hide"), $(".wc-table thead > tr > th").css("vertical-align", "top")) : (e = e.replace("Hide", "Show"), $(".wc-table thead > tr > th").css("vertical-align", "bottom")), $("div[wc-responsive-table] .filter-visibility-toggle span:first-child").text(e)
            };
            var s = 2;
            t.ratchetCols = function(e) {
                window.innerWidth < 1200 && (t.$broadcast("ng-swipe"), "left" === e ? ($(".wc-table.table-ratchet .wc-table-column-" + s).hide(), s < t.numberOfCols && s++) : "right" === e && ($(".wc-table.table-ratchet .wc-table-column-" + (s - 1)).show(), s > 2 && s--))
            }, t.$on("ng-swipe", function() {
                t.animating || (t.animating = !0, $(".wc-table.table-ratchet table").animate({
                    opacity: .7
                }, 150, function() {
                    $(".wc-table.table-ratchet table").animate({
                        opacity: 1
                    }, 200, function() {})
                }), t.animating = !1)
            }), t.columnsToHide = [], (t.paginationEnabled || t.resultsPerPage || t.numberOfPageControls || t.selectResultsPerPage || t.responsiveBreakpoints || t.paginationControlsPlacement) && (r.setPaginationState(!0), r.setPaginationDefaults({
                numberOfPageControls: t.numberOfPageControls,
                responsiveBreakpoints: t.responsiveBreakpoints,
                selectResultsPerPage: t.selectResultsPerPage,
                resultsPerPage: t.resultsPerPage,
                paginationControlsPlacement: t.paginationControlsPlacement
            }))
        }],
        link: function(l, i, a, o) {

        	console.log("currentPagePagination " + l.currentPage);
        	        	
            var r = i[0].children[0];
            "TABLE" !== r.tagName && (console.error("Table tag <table> must come right after <wc-responsive-table>"), console.error("Directive found " + r[0].tagName + " instead")), i.addClass("wc-table");
            var c = $(r).find("tbody tr"),
                s = $(r).find("thead tr")[0];
            l.numberOfCols = s.children.length;
            for (var d = 0; d < s.children.length; d++) l.columnsToHide[d] = !1, $(s.children[d]).addClass("wc-table-column-" + d);
            for (d = 0; d < c.children().length; d++) {
                var u = $(c.children()[d]);
                if (u.addClass("wc-table-column-" + d), "list" === l.responsiveView) {
                    var p = $(s).find("th")[d],
                        b = $(p).clone().children().remove().end().text();
                    u.attr("data-title", b)
                }
            }
            if (l.exporttopdfEnabled && i.prepend(e("<wc-export-to-pdf>")(l)), l.exporttoexcelEnabled && i.prepend(e("<wc-export-to-excel>")(l)), l.paginationEnabled && i.prepend(e("<wc-table-pagination page='currentPage'>")(l)), l.checkallnoneEnabled && i.next().append(e('<wc-check-all-none target-container-id="' + a.id + '">')(l)), "scroll" === l.responsiveView) i.addClass("table-responsive");
            else if ("ratchet" === l.responsiveView) {
                i.addClass("table-ratchet");
                var g, h, f = function(e) {
                    if (!g) return !1;
                    var t = Math.abs(e.y - g.y),
                        l = e.x - g.x;
                    return !!(h && t < 75 && 0 !== l && Math.abs(l) > 30 && t / Math.abs(l) < .3) && (l > 0 ? "right" : "left")
                };
                n.bind($(r), {
                    start: function(e) {
                        g = e, h = !0
                    },
                    cancel: function() {
                        h = !1
                    },
                    end: function(e) {
                        var t = f(e);
                        t && l.ratchetCols(t)
                    }
                })
            } else if ("column-toggle" === l.responsiveView || "radio-columns" === l.responsiveView) {
                i.addClass("column-toggle");
                var w = '<span class="dropdown column-toggle"><span name="columnToggleDropdown" data-toggle="dropdown" id="columnToggleDropdown"><span>Manage Columns</span><span class="glyphicon glyphicon-chevron-down"></span></span><fieldset class="dropdown-menu form-group" role="menu" aria-labelledby="columnToggleDropdown">';
                $(s).children().each(function(e, t) {
                    var l = t.firstChild.data;
                    t.firstChild.nextSibling && "wc-row-select-header-checkbox" === t.firstChild.nextSibling.localName && (l = "Checkbox Column"), t.firstChild.nextSibling && "wc-row-select-header-radio" === t.firstChild.nextSibling.localName && (l = "Radio Column"), null !== t.firstChild && (w += '<div role="menuitem" class="checkbox"><label for="col' + e + '"><input id="col' + e + '" type="checkbox" checked ng-model="columnsToHide[' + e + ']"/>' + l + "</label></div>")
                }), w += "</fieldset></span>", l.$watchCollection(function() {
                    return l.columnsToHide
                }, function(e, t) {
                    if (e !== t)
                        for (l = 0; l < e.length; l++) e[l] ? $(".wc-table.column-toggle .wc-table-column-" + l).show() : $(".wc-table.column-toggle .wc-table-column-" + l).hide();
                    else {
                        for (var l = 0; l < e.length; l++) e[l] = !0;
                        $(".form-group").click(function(e) {
                            e.stopPropagation()
                        })
                    }
                }), $(r).before(e(w)(l))
            } else "list" === l.responsiveView ? (i.addClass("table-mobile-stack"), $(".filter-visibility-toggle").hide()) : l.responsiveView;
            if (i.find("thead input[wc-column-filter], thead select[wc-column-filter]").length)
                if ("" === a.staticFilter) l.staticFilter = !0, $("div[wc-responsive-table] thead input[wc-column-filter], div[wc-responsive-table] thead select[wc-column-filter]").toggle();
                else {
                    $(r).before(e('<div class="filter-visibility-toggle" ng-click="toggleFilterVisibility()"><span>Show Filters</span><span class="glyphicon glyphicon-filter"></span></div>')(l)), $(r).before('<div class="active-filters"></div>')
                }
            i.append('<div class="wc-table-loading-cover"><div class="wc-table-loading-indicator"><span>Loading...</span></div>');
            var v = function(e) {
                    $(e).each(function(e, t) {
                        $(t).css("height", $(t).closest("tr").css("height"))
                    })
                },
                m = function() {
                    v(".wc-table-column-0"), v(".wc-table-column-1")
                };
            if ("scroll" === l.responsiveView) {
                $(window).on("resize", t.debounce(m, 250)), l.$on("table.render.complete", t.debounce(m, 10));
                var C = function(e) {
                    $(".table-responsive .wc-table-column-0").each(function(t, l) {
                        $(l).css("left", e.currentTarget.scrollLeft + "px")
                    }), $(".table-responsive .wc-table-column-1").each(function(t, l) {
                        $(l).css("left", e.currentTarget.scrollLeft + 100 + "px")
                    }), $("div[wc-responsive-table].table-responsive .filter-visibility-toggle").each(function(t, l) {
                        $(l).css("left", e.currentTarget.scrollLeft + 15 + "px")
                    })
                };
                i.scroll(C), i.on("touchmove", C)
            } else "ratchet" === l.responsiveView || "list" === l.responsiveView || l.responsiveView;
            o[0] && (o[0].$name = "wcResponsiveTable", o[0].$parsers.push(function(e) {
                return l.required && (!e || angular.isArray(e) && 0 === e.length ? o[0].$setValidity("tableRequired", !1) : o[0].$setValidity("tableRequired", !0)), e
            }), o[0].$formatters.push(function(e) {
                return l.required && (!e || angular.isArray(e) && 0 === e.length ? o[0].$setValidity("tableRequired", !1) : o[0].$setValidity("tableRequired", !0)), e
            }), l.applyModel = function(e) {
                o[0].$setViewValue(e)
            }, o[0].$$parentForm.$addControl(o[0])), l.dataRowChildren = c.children().clone(), c.children().remove(), c.attr("wc-row-repeat", ""), e(c)(l), c[0].children.length < 1 && l.renderTable()
        }
    }
}]);

angular.module("WcResponsiveTableModule").directive("wcRowRepeat",["$compile","_","$translate",function(e,t,$translate){return{controller:["WcTableScopeService","WcTableCollectionService","WcTablePaginationService",function(e,t,n){this.collection=t.getCollection,this.tableScope=e.getTableScope,this.rowKey=t.getRowKey(),this.pagination=n.getPaginationDefaults}],link:function(n,o,r,a){function l(l,p){var g,s,u,f=c.length,h=a.tableScope().ngModel,w=a.collection();if(f>0){for(u=0;u<f;u++)c[u].el.remove(),c[u].scope.$destroy();c=[]}for(w.length<p&&(p=w.length),u=l;u<p;u++){if(s=n.$new(!1,a.tableScope()),s.row=w[u],s.rowKey=s.row[a.rowKey],s.index=u,h.length>0){var b=h.reduce(function(e,t){return t===s.rowKey?t:e},null);(b||0===b)&&(s.isSelected=!0)}var v=$("<tr></tr>");t.forEach(r.$attr,function(e,t){"wcRowRepeat"!=t&&v.attr(e,r[t])}),v.append(n.dataRowChildren.clone()),(g={}).el=v,g.scope=s,c.push(g),$(d).remove(),i.append(v),e(v)(s)}w.length<1&&i[0].children.length<1&&i.append(d),o.remove()}var c=[],i=o.parent(),p=n.numberOfCols,d=$('<tr><td class="text-center" colspan='+p+" >"+$translate.instant('application.noRecordsFound')+"</td></tr>");n.$on("table.render.start",function(){l(a.pagination().pageStart,a.pagination().pageEnd),a.tableScope().tableRendered()})}}}]);
angular.module("WcResponsiveTableModule").directive("wcRowSelectCheckbox",["$filter",function(e){return{restrict:"E",template:'<input type="checkbox" ng-change="selectRow()" class="wc-checkbox-column" ng-model="isChecked">',scope:{},controller:["$scope","$element","WcTableScopeService",function(c,n,t){c.selectRow=function(){var n=t.getTableScope(),o=c.$parent.rowKey,l=n.ngModel,i=0!==e("filter")(l,o,!0).length;(l.length<1||i)&&!c.isChecked?n.ngModel=e("filter")(l,function(e){return e!==o},!0):i||n.ngModel.push(o),n.applyModel(n.ngModel)},c.$on("table.render.complete",function(){c.$parent.isSelected&&(c.isChecked=!0)}),c.$on("table.select.checkbox.all",function(){c.isChecked=!0,c.selectRow()}),c.$on("table.select.checkbox.none",function(){c.isChecked=!1,c.selectRow()})}],link:function(e,c){var n=function(e){var n=c.parent().parent();e?$(n).addClass("wc-highlight-row"):$(n).removeClass("wc-highlight-row");var t=n.children();$(t).each(function(c,n){e?$(n).addClass("wc-highlight-row"):$(n).removeClass("wc-highlight-row")})};e.$watch("isChecked",function(e){n(e)})}}}]);
angular.module("WcResponsiveTableModule").directive("wcRowSelectRadio",function(){return{restrict:"E",template:'<input type="radio" name="table" class="wc-radio-column" ng-click="selectRow()">',scope:{},controller:["$scope","WcTableScopeService",function(e,o){e.tableScope=o.getTableScope(),e.rowKey=e.$parent.rowKey,e.selectRow=function(){var c=o.getTableScope(),t=e.$parent.rowKey;c.ngModel=[t],c.applyModel(c.ngModel)},e.$on("table.render.complete",function(){e.$parent.isSelected&&(e.highlightRow(!0),e.selectRow())})}],link:function(e,o){e.highlightRow=function(e){var c=o.parent().parent();e?$(c).addClass("wc-highlight-row"):$(c).removeClass("wc-highlight-row");var t=c.children();$(t).each(function(o,c){var t=$(c).find(".wc-radio-column");e?($(c).addClass("wc-highlight-row"),t&&t.prop("checked",!0)):($(c).removeClass("wc-highlight-row"),t&&t.prop("checked",!1))})},e.$watch("tableScope.ngModel",function(o){if(e.$parent.$parent.ngModel){var c;c=o[0]===e.rowKey&&o.length>0,e.highlightRow(c)}})}}});
angular.module("WcResponsiveTableModule").directive("wcRowSelectAll",function(){return{restrict:"A",scope:{},controller:["$scope","WcTableScopeService",function(e,c){e.viewScope=c.getParentScope(),e.selectAll=function(){e.viewScope.$broadcast("table.select.checkbox.all"),e.viewScope.$broadcast("table.select.button.all"),e.$apply()}}],link:function(e,c){c.on("click",function(){e.selectAll()})}}});
angular.module("WcResponsiveTableModule").directive("wcRowSelectNone",function(){return{restrict:"A",scope:{},controller:["$scope","WcTableScopeService",function(e,c){var n=c.getParentScope();e.selectNone=function(){n.$broadcast("table.select.checkbox.none"),n.$broadcast("table.select.button.none"),e.$apply()}}],link:function(e,c){c.on("click",function(){e.selectNone()})}}});
angular.module("WcResponsiveTableModule").directive("wcTableSelectionInfo",function(){return{restrict:"E",scope:{},template:"<span>{{numberOfSelectedRows}} rows currently selected.</span>",controller:["$scope","WcTableScopeService",function(e,c){var n=c.getTableScope();e.numberOfSelectedRows=0,n.$watch(function(){return n.ngModel.length},function(c,n){c!==n&&(e.numberOfSelectedRows=c)})}]}});
angular.module("WcResponsiveTableModule").directive("wcRowActionSingle",function(){return{restrict:"A",scope:{wcRowActionSingle:"@"},controller:["$scope","WcTableScopeService",function(o,c){o.singleAction=function(){var n=o.$parent,e=c.getParentScope(),i=[].concat(n.rowKey);console.log("rowActionSingle: rowScope:",n),e.$broadcast(o.wcRowActionSingle,i)}}],link:function(o,c){c.on("click",function(){o.singleAction()})}}});
angular.module("WcResponsiveTableModule").directive("wcRowSelectHeaderCheckbox",function(){return{restrict:"E",template:'<input type="checkbox" ng-click="selectAllRows()" ng-model="isChecked" class="wc-header-checkbox">',scope:{wcRowSelectHeaderCheckbox:"@"},controller:["$scope","$timeout","WcTableScopeService",function(e,c,t){var n=t.getTableScope(),o=function(){for(var c=angular.element('tbody input[type="checkbox"]'),t=0;t<c.length;t++)if(!angular.element(c[t]).is(":checked")){e.isChecked=!1;break}};e.$on("table.render.complete",function(){c(function(){e.isChecked=!0,o()})}),e.$watch(function(){return n.ngModel},function(){o()}),e.selectAllRows=function(){var c=e.isChecked?"table.select.checkbox.all":"table.select.checkbox.none";n.$broadcast(c)},e.$on("table.select.button.all",function(){e.isChecked=!0}),e.$on("table.select.button.none",function(){e.isChecked=!1})}]}});
angular.module("WcResponsiveTableModule").directive("wcRowSelectHeaderRadio",function(){return{restrict:"E",template:"",scope:{wcRowSelectHeaderRadio:"@"},controller:function(){}}});
angular.module("WcResponsiveTableModule").directive("wcRowActionMultiple",function(){return{restrict:"A",scope:{wcRowActionMultiple:"@"},controller:["$scope","WcTableScopeService",function(c,e){c.multipleAction=function(){var t=e.getTableScope().ngModel,o=e.getParentScope();t.length&&o.$broadcast(c.wcRowActionMultiple,[].concat(t))}}],link:function(c,e){e.on("click",function(){c.multipleAction()})}}});
//angular.module("WcResponsiveTableModule").directive("wcTablePagination",["$compile",function(a){return{scope:{},controller:["$scope","$window","_","WcTableScopeService","WcTablePaginationService","WcTableCollectionService","WcTranslateConfiguratorService",function(a,n,e,t,i,o,r){var s,g=t.getTableScope();r.loadPartAndRefresh("WC-dataTable"),a.pagination=i.getPaginationDefaults(),s=a.pagination,a.$on("table.pagination.update",function(n,e){e&&(s.currentPage=1),s.totalItems=o.getCollectionLength(),s.totalPages=Math.ceil(s.totalItems/s.resultsPerPage),a.updatePaginationControls(s.currentPage),a.createPaginationControlNumbers()}),s.boundaryLinks=!0,s.currentBreakpoint="",s.currentPage=1,s.paginationPageControls=[],s.totalItems=o.getCollectionLength(),s.totalPages=Math.ceil(s.totalItems/s.resultsPerPage),a.createPaginationControlNumbers=function(){for(var a=[],n=s.totalPages>s.numberOfPageControls?s.numberOfPageControls:s.totalPages,e=Math.floor(n/2),t=0;t<n;t++)s.currentPage-e>0&&s.currentPage-e<=s.totalPages&&a.push(s.currentPage-e),e--;if(a.length<n){var i,o,r=Math.floor(s.currentPage-n/2),g=Math.abs(a.length-n);if(r<=0){var l=a[a.length-1];for(o=1;o<=g;o++)i=l+o,s.totalPages>=i&&a.push(i)}else{var c=a[0];for(o=1;o<=g;o++)i=c-o,a.unshift(i)}}s.paginationPageControls=a},a.changeResultsPerPage=function(){if("All"===s.resultsPerPage)s.resultsPerPage=s.totalItems,s.pageStart=0,s.pageEnd=s.totalItems,s.totalPages=1,a.changePage(1);else{s.totalPages=Math.ceil(s.totalItems/s.resultsPerPage);var n=Math.ceil(s.pageStart/s.resultsPerPage);a.changePage(n||1)}},a.updatePaginationControls=function(a){s.currentPage=a,s.pageStart=a*s.resultsPerPage-s.resultsPerPage;var n=s.pageStart+s.resultsPerPage;n>s.totalItems?s.pageEnd=s.totalItems:s.pageEnd=n,i.setPaginationDefaults({pageStart:s.pageStart,pageEnd:s.pageEnd})},a.changePage=function(n){if(!(n>0&&n<=s.totalPages))throw isNaN(n)?"Invaild Page Number: "+n+". Must be a number, no other characters allowed":n<=0?"Invaild Page Number: "+n+". Must be greater than 0":n>s.totalPages?"Invaild Page Number: "+n+". Must be smaller than "+s.totalPages:"Invaild Page Number: "+n+". Not sure what you did, but it is invalid";a.updatePaginationControls(n),a.createPaginationControlNumbers(),g.renderTable()},a.nextPage=function(){var n=s.currentPage;n+1<=s.totalPages&&a.changePage(++n)},a.previousPage=function(){var n=s.currentPage;n-1>0&&a.changePage(--n)},a.$watch(function(){return s.currentBreakpoint},function(n,e){n!==e&&("xs"===n?(s.numberOfPageControls=0,s.boundaryLinks=!1):"sm"===n?(s.numberOfPageControls=0,s.boundaryLinks=!1):"md"===n?(s.numberOfPageControls=0,s.boundaryLinks=!1):"lg"===n?(s.numberOfPageControls=3,s.boundaryLinks=!0):(s.numberOfPageControls=i.getPaginationDefaults().numberOfPageControls,s.boundaryLinks=!0),a.createPaginationControlNumbers())});var l=function(){window.innerWidth<=s.responsiveBreakpoints[0]&&"xs"!==s.currentBreakpoint?s.currentBreakpoint="xs":window.innerWidth>s.responsiveBreakpoints[0]&&window.innerWidth<=s.responsiveBreakpoints[1]&&"sm"!==s.currentBreakpoint?s.currentBreakpoint="sm":window.innerWidth>s.responsiveBreakpoints[1]&&window.innerWidth<=s.responsiveBreakpoints[2]&&"md"!==s.currentBreakpoint?s.currentBreakpoint="md":window.innerWidth>s.responsiveBreakpoints[2]&&window.innerWidth<=s.responsiveBreakpoints[3]&&"lg"!==s.currentBreakpoint?s.currentBreakpoint="lg":window.innerWidth>s.responsiveBreakpoints[3]&&"xl"!==s.currentBreakpoint&&(s.currentBreakpoint="xl"),a.$digest()};angular.element(n).bind("resize",e.debounce(l,300)),setTimeout(l,0)}],link:function(n){var e=['<div class="col-xs-3 result-page-count">','<label>{{"pagination.resultsPerPage" | translate}}: ','<select class="form-control form-inline input-sm pagination-results-per-page" ng-options="result for result in pagination.selectResultsPerPage"','ng-model="pagination.resultsPerPage" ng-change="changeResultsPerPage()">',"</select></label>","</div>"].join(""),t=['<div class="col-xs-4 text-right">','<p class="hidden-xs hidden-sm results-data"><span ng-if="pagination.totalItems==0">{{"pagination.paginationNoRecordLegend" | translate:pagination}}</span><span ng-if="pagination.totalItems>0"> {{"pagination.paginationLegend" | translate:pagination}}</span>',"</p>","</div>"].join(""),i=['<div class="col-xs-5 pagination-control text-right">','<ul class="hidden-xs pagination pagination-sm">','<li ng-hide="!pagination.boundaryLinks" class="pagination-page"  ng-class="{disabled: pagination.currentPage == 1}"><button ng-disabled="pagination.currentPage == 1" ng-click="changePage(1)">&#xe069</button></li>','<li class="pagination-page"  ng-class="{disabled: pagination.currentPage == 1}"><button  ng-disabled="pagination.currentPage == 1" class="previous" ng-click="previousPage()">&#xe071</button></li>','<li class="pagination-page pagination-page-number" ng-class="{active: pagination.currentPage === number}" ng-repeat="number in pagination.paginationPageControls">','<button ng-click="changePage(number)">{{number}}</button>',"</li>",'<li class="pagination-page" ng-class="{disabled: pagination.currentPage == pagination.totalPages}"><button ng-disabled="pagination.currentPage == pagination.totalPages" class="next" ng-click="nextPage()">&#xe075</button></li>','<li ng-hide="!pagination.boundaryLinks" class="pagination-page"  ng-class="{disabled: pagination.currentPage == pagination.totalPages}"><button ng-disabled="pagination.currentPage == pagination.totalPages" ng-click="changePage(pagination.totalPages)">&#xe077</button></li>',"</ul>","<div>"].join(""),o=['<div class="hidden-sm hidden-md hidden-lg hidden-xl text-center">','<ul class="pagination pagination-sm">','<li class="pagination-page" ng-class="{disabled: pagination.currentPage == 1}"><button class="previous" ng-click="previousPage()">&#xe071</button></li>',"<li>",'<input type="text" pattern="[0-9]*" ng-model="pagination.newInputPage" ng-change="changePage(pagination.newInputPage)" placeholder="Jump to Page" />',"</li>",'<li class="pagination-page" ng-class="{disabled: pagination.currentPage == pagination.totalPages}"><button class="next" ng-click="nextPage()">&#xe075</button></li>',"</ul>",'<p class="text-center">{{"pagination.paginationLegendMobile" | translate:pagination}}</p>',"</div>"].join(""),r=$("div[wc-responsive-table]").attr("data-table-name"),s=[];r&&(s=['<div class="col-xs-12 hidden action-dropdown">','<div class="col-xs-4 pt-10"><strong>{{"pagination.rowActions" | translate}} :</strong></div>','<div class="col-xs-8">','<select class="form-control inline">','<option>{{"pagination.select" | translate}}</option>','<option>{{"pagination.delete" | translate}}</option>',"</select>",'<button class="btn ml-5 mt-neg-3 btn-primary" wc-row-action-multiple="delete-'+r+'">{{"pagination.submit" | translate}}</button>',"</div>","</div>"].join(""));var g=['<div class="col-xs-12">','<div class="row">',e,t,i,o,"</div>","</div>",s].join(""),l=n.pagination.paginationControlsPlacement,c=$("div[wc-responsive-table]");n.createPaginationControlNumbers(),n.pagination.totalItems>0&&("top"!==l&&"both"!==l||c.before(a(g)(n)),"bottom"!==l&&"both"!==l||c.after(a(g)(n)))}}}]);

angular.module("WcResponsiveTableModule").directive("wcTablePagination", ["$compile", "$window", function(a, w) {
    return {
        scope: {
        	currentPage:"=page"
        },
        controller: ["$scope", "$window", "_", "WcTableScopeService", "WcTablePaginationService", "WcTableCollectionService", "WcTranslateConfiguratorService", function(a, n, e, t, i, o, r) {
            var s, g = t.getTableScope();
            
            var currentPage = a.currentPage;
            
            r.loadPartAndRefresh("WC-dataTable"), a.pagination = i.getPaginationDefaults(), s = a.pagination, a.$on("table.pagination.update", function(n, e) {
            	e && (s.currentPage = currentPage), 
            	s.totalItems = o.getCollectionLength(), 
            	s.totalPages = Math.ceil(s.totalItems / s.resultsPerPage), 
            	a.updatePaginationControls(currentPage), 
            	a.createPaginationControlNumbers()
            }), s.boundaryLinks = !0, s.currentBreakpoint = "", s.currentPage = 1, s.paginationPageControls = [], s.totalItems = o.getCollectionLength(), s.totalPages = Math.ceil(s.totalItems / s.resultsPerPage), a.createPaginationControlNumbers = function() {
                for (var a = [], n = s.totalPages > s.numberOfPageControls ? s.numberOfPageControls : s.totalPages, e = Math.floor(n / 2), t = 0; t < n; t++) s.currentPage - e > 0 && s.currentPage - e <= s.totalPages && a.push(s.currentPage - e), e--;
                if (a.length < n) {
                    var i, o, r = Math.floor(s.currentPage - n / 2),
                        g = Math.abs(a.length - n);
                    if (r <= 0) {
                        var l = a[a.length - 1];
                        for (o = 1; o <= g; o++) i = l + o, s.totalPages >= i && a.push(i)
                    } else {
                        var c = a[0];
                        for (o = 1; o <= g; o++) i = c - o, a.unshift(i)
                    }
                }
                s.paginationPageControls = a
            }, a.changeResultsPerPage = function() {
//            	console.log('totalItems='+s.totalItems);
            	
            	if(s.totalItems == 0){
            		return;
            	}
            	
            	if ("All" === s.resultsPerPage){ 
//            		console.log('All ='+s.resultsPerPage);
            		s.resultsPerPage = s.totalItems, s.pageStart = 0, s.pageEnd = s.totalItems, s.totalPages = 1, a.changePage(1);
            	} else {
            		s.totalPages = Math.ceil(s.totalItems / s.resultsPerPage);
                    var n = Math.ceil(s.pageStart / s.resultsPerPage);

                    console.log('n ='+ n );
                    
                    var data = {
                    		startRecord : s.resultsPerPage * (n == 0 ? 1 : n),
                    		maxPerPage : s.resultsPerPage,
                    		currentPage : 1
                    }
                    
                	if (w.sessionStorage.getItem("userInfo") != null) {
                		var userInformation = JSON.parse(w.sessionStorage.getItem("userInfo"));
                		userInformation.resultsPerPage = s.resultsPerPage;
                		w.sessionStorage.setItem("userInfo", JSON.stringify(userInformation));
                	}
                    
                    //t.getParentScope().$broadcast("pagination", data);
                    a.changePage(n || 1)
                }
            }, a.updatePaginationControls = function(a) {
                
//            	console.log('updatePaginationControls');
            	
            	s.currentPage = a//2 
            	
            	if(a == 1){
//            		console.log('pageStart='+ a);
            		s.pageStart = 0;
            	}else{
            		if(i.paginationStart == 0){
            			s.pageStart = i.paginationStart;
            			i.paginationStart = a;
            			s.currentPage = 1;
            		}else{
            			s.pageStart = a * s.resultsPerPage - s.resultsPerPage;
            		}
            	}
            	

            	var n = s.pageStart + s.resultsPerPage;
                
                n > s.totalItems ? s.pageEnd = s.totalItems : s.pageEnd = n
                , i.setPaginationDefaults({
                    pageStart: 0,
                    pageEnd: s.pageEnd 
                    
                  
                })
           
            }, a.changePage = function(n) {
            	
            	if(s.totalItems == 0){
            		return;
            	}
            	
            	var data = {
                		startRecord : s.resultsPerPage * (n - 1),
                		maxPerPage : s.resultsPerPage,
                }
            	
            	currentPage = n;
            	a.currentPage = n;
            	t.getParentScope().$broadcast("pagination", data);
                if (!(n > 0 && n <= s.totalPages)) throw isNaN(n) ? "Invaild Page Number: " + n + ". Must be a number, no other characters allowed" : n <= 0 ? "Invaild Page Number: " + n + ". Must be greater than 0" : n > s.totalPages ? "Invaild Page Number: " + n + ". Must be smaller than " + s.totalPages : "Invaild Page Number: " + n + ". Not sure what you did, but it is invalid";
                a.updatePaginationControls(n), a.createPaginationControlNumbers()
            }, a.nextPage = function() {
                var n = s.currentPage;
//                console.log('nextPage='+n);
                n + 1 <= s.totalPages && a.changePage(++n)
            }, a.previousPage = function() {
                var n = s.currentPage;
//                console.log('previousPage='+s);
                n - 1 > 0 && a.changePage(--n)
            }, a.$watch(function() {
//            	console.log('currentBreakpoint='+s.currentBreakpoint);
                return s.currentBreakpoint
            }, function(n, e) {
                n !== e && ("xs" === n ? (s.numberOfPageControls = 0, s.boundaryLinks = !1) : "sm" === n ? (s.numberOfPageControls = 0, s.boundaryLinks = !1) : "md" === n ? (s.numberOfPageControls = 0, s.boundaryLinks = !1) : "lg" === n ? (s.numberOfPageControls = 3, s.boundaryLinks = !0) : (s.numberOfPageControls = i.getPaginationDefaults().numberOfPageControls, s.boundaryLinks = !0), a.createPaginationControlNumbers())
            });
            var l = function() {
                window.innerWidth <= s.responsiveBreakpoints[0] && "xs" !== s.currentBreakpoint ? s.currentBreakpoint = "xs" : window.innerWidth > s.responsiveBreakpoints[0] && window.innerWidth <= s.responsiveBreakpoints[1] && "sm" !== s.currentBreakpoint ? s.currentBreakpoint = "sm" : window.innerWidth > s.responsiveBreakpoints[1] && window.innerWidth <= s.responsiveBreakpoints[2] && "md" !== s.currentBreakpoint ? s.currentBreakpoint = "md" : window.innerWidth > s.responsiveBreakpoints[2] && window.innerWidth <= s.responsiveBreakpoints[3] && "lg" !== s.currentBreakpoint ? s.currentBreakpoint = "lg" : window.innerWidth > s.responsiveBreakpoints[3] && "xl" !== s.currentBreakpoint && (s.currentBreakpoint = "xl"), a.$digest()
            };
            angular.element(n).bind("resize", e.debounce(l, 300)), setTimeout(l, 0)
        }],
        link: function(n) {
        	n.changePage(n.currentPage);
            var e = ['<div class="col-xs-3 result-page-count">', '<label>{{"pagination.resultsPerPage" | translate}}: ', '<select class="form-control form-inline input-sm pagination-results-per-page" ng-options="result for result in pagination.selectResultsPerPage"', 'ng-model="pagination.resultsPerPage" ng-change="changeResultsPerPage()">', "</select></label>", "</div>"].join(""),
                t = ['<div class="col-xs-4 text-right">', '<p class="hidden-xs hidden-sm results-data"><span ng-if="pagination.totalItems==0">{{"pagination.paginationNoRecordLegend" | translate:pagination}}</span><span ng-if="pagination.totalItems>0"> {{"pagination.paginationLegend" | translate:pagination}}</span>', "</p>", "</div>"].join(""),
                i = ['<div class="col-xs-5 pagination-control text-right">', '<ul class="hidden-xs pagination pagination-sm">', '<li ng-hide="!pagination.boundaryLinks" class="pagination-page"  ng-class="{disabled: pagination.currentPage == 1}"><button ng-disabled="pagination.currentPage == 1" ng-click="changePage(1)">&#xe069</button></li>', '<li class="pagination-page"  ng-class="{disabled: pagination.currentPage == 1}"><button  ng-disabled="pagination.currentPage == 1" class="previous" ng-click="previousPage()">&#xe071</button></li>', '<li class="pagination-page pagination-page-number" ng-class="{active: pagination.currentPage === number}" ng-repeat="number in pagination.paginationPageControls">', '<button ng-click="changePage(number)">{{number}}</button>', "</li>", '<li class="pagination-page" ng-class="{disabled: pagination.currentPage == pagination.totalPages}"><button ng-disabled="pagination.currentPage == pagination.totalPages" class="next" ng-click="nextPage()">&#xe075</button></li>', '<li ng-hide="!pagination.boundaryLinks" class="pagination-page"  ng-class="{disabled: pagination.currentPage == pagination.totalPages}"><button ng-disabled="pagination.currentPage == pagination.totalPages" ng-click="changePage(pagination.totalPages)">&#xe077</button></li>', "</ul>", "<div>"].join(""),
                o = ['<div class="hidden-sm hidden-md hidden-lg hidden-xl text-center">', '<ul class="pagination pagination-sm">', '<li class="pagination-page" ng-class="{disabled: pagination.currentPage == 1}"><button class="previous" ng-click="previousPage()">&#xe071</button></li>', "<li>", '<input type="text" pattern="[0-9]*" ng-model="pagination.newInputPage" ng-change="changePage(pagination.newInputPage)" placeholder="Jump to Page" />', "</li>", '<li class="pagination-page" ng-class="{disabled: pagination.currentPage == pagination.totalPages}"><button class="next" ng-click="nextPage()">&#xe075</button></li>', "</ul>", '<p class="text-center">{{"pagination.paginationLegendMobile" | translate:pagination}}</p>', "</div>"].join(""),
                r = $("div[wc-responsive-table]").attr("data-table-name"),
                s = [];
            r && (s = ['<div class="col-xs-12 hidden action-dropdown">', '<div class="col-xs-4 pt-10"><strong>{{"pagination.rowActions" | translate}} :</strong></div>', '<div class="col-xs-8">', '<select class="form-control inline">', '<option>{{"pagination.select" | translate}}</option>', '<option>{{"pagination.delete" | translate}}</option>', "</select>", '<button class="btn ml-5 mt-neg-3 btn-primary" wc-row-action-multiple="delete-' + r + '">{{"pagination.submit" | translate}}</button>', "</div>", "</div>"].join(""));
            var g = ['<div class="col-xs-12">', '<div class="row">', e, t, i, o, "</div>", "</div>", s].join(""),
                l = n.pagination.paginationControlsPlacement,
                c = $("div[wc-responsive-table]");
//            console.log("wcTablePagination " + n.pagination.totalItems)

// n.createPaginationControlNumbers(), n.pagination.totalItems > 0 && ("top" !== l && "both" !== l || c.before(a(g)(n)), "bottom" !== l && "both" !== l || c.after(a(g)(n)))
// in some situations the page needs to be load with no data on the "datatable" and with enabled pagination component, because of this, that alteration was necessary. from: n.pagination.totalItems> 0 TO: n.pagination.totalItems > -1.
// on this way the pagination component appears
            n.createPaginationControlNumbers(), n.pagination.totalItems > -1 && ("top" !== l && "both" !== l || c.before(a(g)(n)), "bottom" !== l && "both" !== l || c.after(a(g)(n)))
        }
    }
}]);

angular.module("WcResponsiveTableModule").directive("wcColumnSort",function(){return{restrict:"A",scope:{wcColumnSort:"@",wcColumnSortDefault:"@",specialChars:"@",columnIndex:"@"},controller:["$scope","$timeout","WcTableScopeService","WcTableCollectionService","WcTablePaginationService",function(e,t,l,o,a){var c=e.specialChars;e.tableScope=l.getTableScope(),e.sortReverse=!1,e.timeout=t,this.collectionLength=o.getCollectionLength(),this.resultsPerPage=a.getPaginationDefaults().resultsPerPage,e.sortCollection=function(){o.sortEnabled=!0,e.timeout(function(){var t=o.getCollection();e.tableScope.previousSortColumn=e.tableScope.activeSortColumn,e.tableScope.activeSortColumn=e.columnIndex,o.setCollection(function(e,t,l,o){return l=l?1:-1,o?e.sort(function(e,o){return 1===l?_.get(o,t).localeCompare(_.get(e,t)):_.get(e,t).localeCompare(_.get(o,t))}):e.sort(function(e,o){return _.get(e,t)<_.get(o,t)?1*l:_.get(e,t)>_.get(o,t)?-1*l:0})}(t,e.wcColumnSort,e.sortReverse,c),o.sortEnabled,o.filterEnabled),e.tableScope.$broadcast("table.sort.complete",e.wcColumnSort,e.sortReverse),e.sortReverse=!e.sortReverse},30)},e.wcColumnSortDefault?("desc"===e.wcColumnSortDefault&&(e.sortReverse=!0),e.sortCollection()):e.timeout(function(){e.tableScope.renderTable()},30)}],link:function(e,t,l,o){t.addClass("wc-table-column-sort-heading"),e.tableScope.$on("table.sort.complete",function(l,o,a){var c=t.find("span.glyphicon:first-child"),n=t.attr("class").match(/wc-table-column-\d+/)[0];o===e.wcColumnSort?(c.toggleClass("glyphicon-sort",!1),a?(c.toggleClass("glyphicon-sort-by-alphabet-alt",!0),c.toggleClass("glyphicon-sort-by-alphabet",!1)):(c.toggleClass("glyphicon-sort-by-alphabet",!0),c.toggleClass("glyphicon-sort-by-alphabet-alt",!1)),$("."+n).addClass("wc-table-column-highlight")):(c.toggleClass("glyphicon-sort",!0),c.toggleClass("glyphicon-sort-by-alphabet glyphicon-sort-by-alphabet-alt",!1),$("."+n).removeClass("wc-table-column-highlight"),e.sortReverse=!1)}),e.tableScope.$on("table.render.complete",function(){var e=t.attr("class").match(/wc-table-column-\d+/)[0];t.hasClass("wc-table-column-highlight")?$("td."+e).addClass("wc-table-column-highlight"):$("td."+e).removeClass("wc-table-column-highlight")}),t.on("click",function(){var t=o.collectionLength,l=!1;o.resultsPerPage<=25?t>=1e5&&(l=!0):o.resultsPerPage<=75?t>=1e4&&(l=!0):t>=1e3&&(l=!0),l&&e.tableScope.tableIsLoading(),e.sortCollection()}),t[0].children.length?t.find("input, select").before('<span class="glyphicon glyphicon-sort"></span>'):t.append('<span class="glyphicon glyphicon-sort"></span>')}}});
angular.module("WcResponsiveTableModule").directive("wcColumnFilter",["$compile",function(e){return{restrict:"A",scope:{wcColumnFilter:"@",wcColumnFilterDelay:"@"},controller:["$scope","WcTableScopeService","_","wcColumnFilterService","WcTableCollectionService","$timeout",function(e,t,i,l,n,o){var r=t.getTableScope(),a=n.getCollection();r.$on("table.collection.update",angular.bind(this,function(){a=n.getCollection(),o(angular.bind(this,function(){this.filterColumn()}),0)})),this.predicate=e.wcColumnFilter,this.wcColumnFilterService=l,this.collection=a,e.wcColumnFilterDelay=e.wcColumnFilterDelay||0,e.isMultiSelect=!1,this.filterColumn=function(){n.filterEnabled=!0;for(var e=i.toPairs(l.getColumnsToFilter()),t=e.length-1;t>=0;t--)""===e[t][1]&&e.splice(t,1);if(0==e.length)n.setCollection(a,n.sortEnabled,n.filterEnabled);else{var o=i.filter(a,angular.bind(this,function(t){for(var l,n=0;n<e.length;n++)if(angular.isArray(e[n][1])){l=!1;for(var o=0;o<e[n][1].length;o++)if(i.get(t,e[n][0])&&i.get(t,e[n][0]).toString().toLowerCase().indexOf(e[n][1][o].toLowerCase())>-1){l=!0;break}}else{if(!(i.get(t,e[n][0])&&i.get(t,e[n][0]).toString().toLowerCase().indexOf(e[n][1].toLowerCase())>-1)){l=!1;break}l=!0}return l}));n.setCollection(o,n.sortEnabled,n.filterEnabled)}},e.dismissFilter=function(e){var t=$('input[wc-column-filter="'+e+'"], select[wc-column-filter="'+e+'"]');"SELECT"===t.prop("tagName")?(t.val(""),t.trigger("change")):(t.val(""),t.trigger("keyup")),$(".active-filters ."+e.replace(".","-")).remove()}}],link:function(t,i,l,n){var o=function(){var l=i.val(),o=_.get(n.wcColumnFilterService.getColumnsToFilter(),n.predicate);if(!(void 0==l||""==l&&""==o||""==l&&void 0==o||l==o)){n.wcColumnFilterService.setColumnsToFilter(n.predicate,l),n.filterColumn();var r=$(i[0].parentElement).find("span.glyphicon-filter"),a=n.predicate.replace(".","-"),c=$(".active-filters ."+a);""!==l?(r.length||i.before('<span class="glyphicon glyphicon-filter"></span>'),c.length?c.find("span:last-child").text(i.parent()[0].firstChild.data+": "+JSON.stringify(l,null,1)):$(".active-filters").append(e('<button class="'+a+'" ng-click="dismissFilter(\''+n.predicate+'\')"><span class="glyphicon glyphicon-remove"></span><span>'+i.parent()[0].firstChild.data+": "+JSON.stringify(l,null,1)+"</span></button>")(t))):""===l&&(r.remove(),c.remove())}};if("SELECT"===i.prop("tagName")){t.isMultiSelect=i.attr("multiple");var r=_.uniq(_.map(n.collection,n.predicate)).sort(),a=$("<option></option>");t.isMultiSelect||(a.attr("value",""),a.text("Select an option"),i.append(a)),_.each(r,function(e){var t=$("<option></option>");t.attr("value",e),t.text(e),i.append(t)}),i.on("change",o)}else i.keyup(_.debounce(o,t.wcColumnFilterDelay));i.on("click",function(e){e.stopPropagation()})}}}]);
angular.module("WebCoreModule").directive("wcExportToExcel",function(){return{scope:[],restrict:"AE",require:"?^wcResponsiveTable",template:"<a class='btn btn-link icon icon-excel'  ng-click='makeExcel()' aria-label='Export'> <i class='fa fa-file-excel-o'  aria-hidden='true' title='Export to Excel'></i> </a>",controller:["$scope","$element","XLSX","WcTableScopeService","WcTableCollectionService","_",function(e,t,r,n,a,o){e.excelExport=function(t,n,l){var c=a.getCollection(),i=a.getCollectionLength(),s=[];s.push(t);for(var u=s[0].length,f=0;f<i;++f){for(var h=[],p=0;p<u;p++){var v=o.get(c[f],n[p]);h.push(v)}s.push(h)}for(var g=(l=l.toString())+".xlsx",b={SheetNames:[],Sheets:{}},d=e.sheetFromArrayOfArrays(s),m=[],p=0;p<n.length;++p){var x={},A=0;A=Math.max.apply(Math,s.map(function(e){return null==e[p]?0:e[p].toString().length})),x.wch=A,m.push(x)}d["!cols"]=m;var y=[];d["!merges"]=y,b.SheetNames.push(l),b.Sheets[l]=d;var S=r.write(b,{type:"binary"});saveAs(new Blob([e.s2ab(S)],{type:"application/octet-stream"}),g)},e.s2ab=function(e){if("undefined"!=typeof ArrayBuffer){for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),n=0;n!=e.length;++n)r[n]=255&e.charCodeAt(n);return t}for(var t=new Array(e.length),n=0;n!=e.length;++n)t[n]=255&e.charCodeAt(n);return t},e.sheetFromArrayOfArrays=function(t){for(var n={},a={s:{c:1e7,r:1e7},e:{c:0,r:0}},o=0;o!=t.length;++o)for(var l=0;l!=t[o].length;++l){a.s.r>o&&(a.s.r=o),a.s.c>l&&(a.s.c=l),a.e.r<o&&(a.e.r=o),a.e.c<l&&(a.e.c=l);var c={v:t[o][l]};if(null!=c.v){var i=r.utils.encode_cell({c:l,r:o});"number"==typeof c.v?c.t="n":"boolean"==typeof c.v?c.t="b":c.v instanceof Date?(c.t="n",c.z=r.SSF._table[14],c.v=e.dateNum(c.v)):c.t="s",n[i]=c,0===o&&(n[i].bold=!0)}}return a.s.c<1e7&&(n["!ref"]=r.utils.encode_range(a)),n},e.dateNum=function(e,t){var r=e.getTime();return t&&(r+=1263168e5),(r+22091616e5)/864e5}}],link:function(e,t){e.makeExcel=function(){for(var r=t.parent().attr("id"),n=t.parent().find("th"),a=[],o=0;o<n.length;o++)"Actions"!==n[o].innerText&&""!==n[o].innerText.trim()&&a.push(n[o].childNodes[0].wholeText);for(var l=t.parent().find("tr")[1].children,c=[],i=0;i<n.length;i++)if(l[i].getAttribute("ng-bind")){var s=l[i].getAttribute("ng-bind");c.push(s.substr(s.indexOf(".")+1))}else n[i].getAttribute("wc-column-sort")&&c.push(n[i].getAttribute("wc-column-sort"));e.excelExport(a,c,r)}}}});
angular.module("WebCoreModule").directive("wcExportToPdf",["$compile","WcTableCollectionService",function(e,t){return{scope:{},template:"<a class='btn btn-link icon icon-pdf'  ng-click='makePDF()' aria-label='Export'> <i class='fa fa-file-pdf-o'  aria-hidden='true' title='Export to PDF'></i> </a>",controller:["$scope","$element","WcTableCollectionService","WcTranslateConfiguratorService",function(e,t,r,n){n.loadPartAndRefresh("WC-dataTable"),e.exportToPDF=function(e,t,n){for(var o=r.getCollection(),i=o.length,l=e.length,a=[],c=[],d="",f=0;f<l;f++)e[f]={text:e[f],bold:!0};a.push(e);for(var s=[],h=0;h<l;h++)s.push("auto");if(i>0)for(f=0;f<i;f++){for(var u=o[f],p=0;p<l;p++){var g=t[p].toString();if(-1==g.indexOf("."))d=u[t[p]];else{for(var b=g.split("."),v=u,m=0;m<b.length;m++)v=v[b[m]];d=v}c.push(d)}a.push(c),c=[]}var x={content:[{table:{headerRows:1,widths:s,body:a}}]};return n=n.toString()+".pdf",pdfMake.createPdf(x).download(n)}}],link:function(e,r){e.makePDF=function(){for(var n=r.parent().attr("id"),o=r.parent().children("table").children("thead").children("tr").children("th"),i=[],l=0;l<o.length;l++)"Actions"!=o[l].innerText&&""!=o[l].innerText.trim()&&i.push(o[l].childNodes[0].wholeText);var a=[];if(t.getCollection().length>0)for(var c=r.parent().children("table").children("tbody").children("tr")[0].getElementsByTagName("td"),d=0;d<c.length;d++)if(c[d].getAttribute("ng-bind")){var f=c[d].getAttribute("ng-bind"),s=f.substr(f.indexOf(".")+1);a.push(s)}else o[d].getAttribute("wc-column-sort")&&a.push(o[d].getAttribute("wc-column-sort"));e.exportToPDF(i,a,n)}}}}]);
angular.module("WcResponsiveTableModule").service("WcTableScopeService",function(){var e=null,c=null;this.getParentScope=function(){return e},this.getTableScope=function(){return c},this.setParentScope=function(o){0===o.$id||o.$id?c&&o.$id===c.$id?(e=null,console.error("WcTableScopeService: setTableScope(); parent scope and table scope can not be the same scope")):e=o:(e=null,console.error("WcTableScopeService: setTableScope(); You must pass in a valid Angular Scope"))},this.setTableScope=function(o){0===o.$id||o.$id?e&&o.$id===e.$id?(c=null,console.error("WcTableScopeService: setTableScope(); parent scope and table scope can not be the same scope")):c=o:(c=null,console.error("WcTableScopeService: setTableScope(); You must pass in a valid Angular Scope"))}});
angular.module("WcResponsiveTableModule").service("wcColumnFilterService",function(){var e={};this.getColumnsToFilter=function(){return e},this.setColumnsToFilter=function(t,i){e[t]=i}});
//angular.module("WcResponsiveTableModule").service("WcTableCollectionService",["WcTableScopeService",function(e){var t=[],o="";this.getCollection=function(){return t},this.getCollectionLength=function(){return t.length},this.getRowKey=function(){return o},this.setCollection=function(o,n,i){t=o,void 0===n&&void 0===i&&e.getTableScope().$broadcast("table.collection.update"),e.getTableScope().renderTable(n||i)},this.setInitialCollection=function(e){t=e},this.setRowKey=function(e){e?o=e:(o="id",t.forEach(function(e,t){e[o]=t}))}}]);

angular.module("WcResponsiveTableModule").service("WcTableCollectionService", ["WcTableScopeService", function(e) {
    var t = [],
        o = "";
    
    var listCount = 0;
    
   this.getCollection = function() {
        return t
    }, this.getCollectionLength = function() {
        return listCount
    },this.setCollectionLength = function(count) {
        listCount = count
    },this.getRowKey = function() {
        return o
    }, this.setCollection = function(o, n, i) {
//    	console.log("setCollelction o: " + o + " n: " + n +" i : " + i);
        t = o, void 0 === n && void 0 === i && e.getTableScope().$broadcast("table.collection.update"), e.getTableScope().renderTable(n || i)
    }, this.setInitialCollection = function(e, count) {
        t = e
        listCount = count;
    }, this.setRowKey = function(e) {
        e ? o = e : (o = "id", t.forEach(function(e, t) {
            e[o] = t
        }))
    }
}]);

//angular.module("WcResponsiveTableModule").service("WcTablePaginationService",["WcTableCollectionService",function(e){var t,n={pageStart:0,pageEnd:10,resultsPerPage:10,numberOfPageControls:5,selectResultsPerPage:[10,25,50],responsiveBreakpoints:[430,500,600,900],paginationControlsPlacement:"both"};this.getPaginationDefaults=function(){return t?angular.copy(n):{pageStart:0,pageEnd:e.getCollectionLength()}},this.isPaginationEnabled=function(){return t},this.setPaginationDefaults=function(e){for(var t in e)0===n[t]||n[t]?(e[t]||"number"==typeof e[t]&&e[t]>-1)&&(n[t]=e[t]):console.error("WcTablePaginationService: setPaginationDefaults(); Property "+t+" is not a pagination default")},this.setPaginationState=function(e){t=e}}]);

angular.module("WcResponsiveTableModule").service("WcTablePaginationService", ["WcTableCollectionService", "$window", function(e, w) {
	
	try {
		
	var userInformation = {resultsPerPage:10};
	
	if (w.sessionStorage.getItem("userInfo") == null) {
		w.sessionStorage.setItem("userInfo", JSON.stringify(userInformation));
	} else {
		userInformation = JSON.parse(w.sessionStorage.getItem("userInfo"));
		if (userInformation.resultsPerPage == null) {
			userInformation.resultsPerPage = 10;
		}
	}

    var t, n = {
        pageStart: 0,
        pageEnd: 10,
        resultsPerPage: userInformation.resultsPerPage,
        numberOfPageControls: 5,
        selectResultsPerPage: [10, 25, 50],
        responsiveBreakpoints: [430, 500, 600, 900],
        paginationControlsPlacement: "both"
    };
	console.log ("n= " + JSON.stringify(n.resultsPerPage));
	} catch (e) {alert(e);}

    
    var paginationStart;
    
    var paginationData;
    
    this.setPaginationServer = function(data){
    	 paginationData = data;
    }, this.getPaginationServer = function(){
    	return paginationData;
    }, this.getPaginationDefaults = function() {
        return t ? angular.copy(n) : {
            pageStart: 0,
            pageEnd: e.getCollectionLength()
        }
    }, this.isPaginationEnabled = function() {
        return t
    }, this.setPaginationDefaults = function(e) {
    	for (var t in e)0 === n[t] || n[t] ? (e[t] || "number" == typeof e[t] && e[t] > -1) && (n[t] = e[t]) : console.error("WcTablePaginationService: setPaginationDefaults(); Property " + t + " is not a pagination default")
    		
    }, this.setPaginationState = function(e) {
        t = e
    }
}]);

angular.module("WebCoreModule").directive("wcTab", function(){
	return {
		restrict : "AE",
		template :  "<div class='tabs-container'>" + 
				    "<div class='tab-content' ng-show='tab == 1'>" +
				    " <h3>Primeira aba</h3>"+
			        "</div>" +
			        "</div>" +
					"<ul class='nav nav-tabs'>" + 
				    "<li class='active'><a ng-click='tab=1' ng-class='{active : tab==1}' >Warehouse</a></li>" +
				    "<li><a ng-click='tab=2' ng-class='{active : tab==2}'>GSDB</a></li>" + 
				    "</ul>" +
				    "<div class='tabs-container'>" + 
				    "<div class='tab-content' ng-show='tab == 1'>" +
				    "<div ng-include='warehouses.create.html'></div>" +
				    "</div>" +
				    "<div class='tab-content' ng-show='tab == 2'>" +
				    " <h3>Segunda aba</h3>"+
				    "</div>" +
				    "</div>",
        scope: {
        	contentPage: "@"
        }
	}
})

angular.module("WebCoreModule").directive('dynamic', function ($compile) {
	  return {
		    restrict: 'A',
		    replace: true,
		    link: function (scope, ele, attrs) {
		      scope.$watch(attrs.dynamic, function() {
		        ele.html(scope.trustedHtml);
		        $compile(ele.contents())(scope);
		      });
		    }
		  };
		})
		
angular.module("WcResponsiveTableModule").directive("repeatItem", function() {
	return {
		restrict: "EA",
		scope: {
			items: '=',
			fieldItem: '@',
			listId: '@'
		},
		template: "<ul></ul>",
		link: function(scope, element, attr){
			
			var items = scope.items;
			var fieldItem = scope.fieldItem;
			
			element.find('ul').attr('id' , scope.fieldItem);

			var mylist = document.getElementById(scope.fieldItem);
			
			angular.forEach(items, function(value){
				var valueItem = value[fieldItem];
				mylist.insertAdjacentHTML('beforeend', '<li>' + valueItem + '</li>');
			})
			
			scope.lineHtml = mylist;
			console.log(scope.fieldItem);
		}
		
	}
})

angular.module('WebCoreModule').directive('searchField', function ($timeout, $rootScope) {
	return {
		restrict: 'AE',
		template: '<div class="input-container" style="border:0"><i class="fa fa-search icon"></i><input id="{{idItem}}" style="border-radius: 3px;" type="text" class="form-control fontSizeItemReceiving" maxlength="20"/></div>',	
		scope: {
			items: '=',
			idItem: '@',
			fieldFilter: '@',
			methodFormat: '&'
		},
		link: function (scope, element, attr) {
			
			var totalItems = scope.items;
			
			scope.$on('updateReceivingModel', function(){
				$timeout( function () {
					totalItems = scope.items;
				}, 0, false)
			});
			
			element.on('keyup', function (evt) {
				
				var valueItem = $('#' + scope.idItem).val();
				
				var itemsFiltered = [];
				
				angular.forEach(totalItems, function (item) {
					
					var itemField = item[scope.fieldFilter].toString().toUpperCase(); 
					
					if (itemField.indexOf(valueItem.toString().toUpperCase()) != -1) {
						itemsFiltered.push(item);
					}
				})
				
			   $timeout(function() {
					scope.items = itemsFiltered;
			   }, 1000);
				
			})
			
		}
	}
})

angular.module('WebCoreModule').directive('filterChar', function ($timeout, $rootScope, $q) {
	return {
		restrict: 'AE',
		template: '<div class="input-container" style="border:0"><i class="fa fa-search icon"></i><input id="{{idItem}}" style="border-radius: 3px;" type="text" class="form-control fontSizeItemReceiving" maxlength="20"/></div>', 
		scope: {
			items: '=',
			tableItems: '&',
			fieldFilter: '@',
			formatItems: '&',
			idItem: '@'
		},
		link: function (scope, element, attr) {
			
			if ($rootScope.totalItems == undefined) {
				$rootScope.totalItems = [];
				$rootScope.totalItems = scope.items;
			} 
			
			$rootScope.$on('changeItems', function() {
				$rootScope.totalItems = scope.items;
			})
			
			element.on('keyup', function (evt) {
				
				var valueItem = $('#' + scope.idItem).val();
				
				var itemsFiltered = [];
				
				angular.forEach($rootScope.totalItems, function (item) {
					
					var itemField = item[scope.fieldFilter].toString().toUpperCase(); 
					
					if (itemField.indexOf(valueItem.toString().toUpperCase()) != -1) {
						itemsFiltered.push(item);
					}
				})
				
				let promiseOne = scope.items = itemsFiltered;
				let promiseTwo = scope.tableItems();
				
				$q.all([promiseOne, promiseTwo]).then(function () {
					scope.$watch('promiseOne', function() {
						scope.tableItems();
						$timeout(function () {
							$('#' + scope.idItem).val(valueItem);
							$('#' + scope.idItem).focus();
							scope.formatItems();
						}, 10)
					});
				})
				
//				$q.resolve().then(function() {
//					$q.resolve().then(function() {
//						console.log('passo 2')
//						scope.tableItems();
//					});
//				    console.log('passo 1')
//				    scope.items = itemsFiltered;
//				 });
//				$q.resolve().then(function() {
//					console.log('passo 3')
//					$('#' + attr.id).val(valueItem);
//					$('#' + attr.id).focus();
//				});
	
			})
		}
	
	}
})

angular.module('WebCoreModule').directive('bubble', ['PreReceivingService', function (PreReceivingService, $timeout, $q, $translate) {
	return {
		restrict: 'AE',
		scope : {
			key : '=',
			items: '=',
			image: '@'
		},		template: '<img src="{{image}}"/><div id="box{{key}}" class="col-1 box-bubble speech-bubble-box"></div>',
		link: function (scope, element, attr) {
			
			scope.visible = false;
			
			var key = scope.key;
			var items = scope.items;
			
			var box = $("#box" + key);
			
			scope.$watch('box', function() {
				$("#box" + key).hide();
			})
			
			element.on('click', function (evt) {
				
				PreReceivingService.viewBoxes(scope.key).then(function (response) {
					var itemsInvoice = response;
					var html = '<ul class="ul-box">'
						var inner = '';
					
					scope.visible = !scope.visible;
					
					angular.forEach(itemsInvoice, function (item){
						var codeBox = item.boxR == undefined || item.boxR == '' ? 'Box not exist ' : "Box" + ': ' + item.boxR;
						var totalBox = item.totalBox == 0 || item.totalBox == '' ? ' ' : item.totalBox;
						inner = inner + '<li>' + codeBox + ' Qt: ' + totalBox +'</li>'
					})
					
					html = html + inner + '</ul>'
					
					$("#box" + key).html(html);
				});
				
				
				if ($("#box" + key).is(':visible')  == false) {
					$("#box" + key).show()
				} else {
					$("#box" + key).hide()
				}
			})
			
			
		}
		
	}
}])

angular.module("WebCoreModule").directive('autocomplete', ['WcHttpEndpointPrototype', '$location', '$anchorScroll','$filter', '$translate', function(WcHttpEndpointPrototype, $location, $anchorScroll, $filter, $translate){
		return {
			restrict: "E",
			transclude: false,
			scope: {
				method: "@",
				prototype: "=",
				idPrototype: "=id",
				endpoint: "@",
				indexElement: "@index",
				disable: "@",
				placeholder: "@",
				msgValidation: "@"
			},
			template: '<div>'
						+ '<input ng-disabled = "disable" id="modelId" class="form-control" ng-model="prototype" name="modelId" required' 
						+ ' wc-validation-indicator="{{msgValidation}}"'
						+ ' />'
						+ '<input type="hidden" ng-model="idPrototype" />'
					    + '<ul class="dropdown-multiselect" id="demo" ng-show="isVisible" >'
						+ '<li ng-repeat="(key, value) in records track by $index" id="item-{{$index}}" data-key="{{key}}" ng-click="itemSelected(key, value)" ng-show="isVisible" >'
						+ '<span style="display:none;" ></span>{{value}}</li>'
					    + '</ul></div>',
						
			link: function(scope, element, attr){
				scope.records = new Object();
				scope.allRecords = new Object();
				scope.recordsFilter = [];
				var index = 0;
				
				element.on('keyup', function(event){
					scope.isVisible = false;
					
					if(event.keyCode == 40){
						scope.isVisible = true;
						var id = 'item-' + index;
						$(event.currentTarget).find('#'+id).addClass('item-mark');
						$location.hash(id);
						$anchorScroll();
						
						if(index > 0){
							var idErase = '#item-' + (index -1);
							$(event.currentTarget).find(idErase).removeClass('item-mark');
						}
						index++;
						return 
					}
					
					if(event.keyCode == 38){
						scope.isVisible = true;
						index--;
						var id = 'item-' + (index -1);
						$(event.currentTarget).find('#'+id).addClass('item-mark');
						$location.hash(id);
						$anchorScroll();
						if(index > 0){
							var idErase = '#item-' + index;
							$(event.currentTarget).find(idErase).removeClass('item-mark');
						}
						return 
					}
					
					if(event.keyCode == 13){
						if(index < 0){
							index = 1;
						}
						scope.isVisible = true;
						var id = '#item-' + (index -1);
						$("#modelId").val($(event.currentTarget).find(id).text());
						scope.itemSelected($(event.currentTarget).find(id).attr('data-key'), $(event.currentTarget).find(id).text())
					}
					
					index = 0;
					if($("#modelId").val().length > scope.indexElement  && ((event.keyCode > 64 && event.keyCode < 91) || (event.keyCode >= 96 && event.keyCode < 123) || event.keyCode== 8 || event.keyCode== 32 || (event.keyCode>= 48 && event.keyCode<= 57))){
						if(JSON.stringify(scope.records) =='{}'){
							var endpointWc = new WcHttpEndpointPrototype(scope.endpoint);
							
							var subdivision = window.sessionStorage.getItem("bkSubDivisionUidD");
							
							endpointWc.subRoute(scope.method + "/" + $("#modelId").val() + "/" + subdivision).get()
							.then(function (response) {
								if(response.data != null && JSON.stringify(response.data) !='{}'){
									scope.records = response.data;
									scope.recordsFilter = scope.records; 
									scope.isVisible = true;
								}else{
									scope.isVisible = false;
								}
							});
						}else{
							var array = []
						    
							angular.forEach(scope.recordsFilter, function(value, index) { 
								array.push(value);
							});
							scope.recordsFilter = array;

							scope.records = $filter('filter')(scope.recordsFilter, $("#modelId").val());

							scope.isVisible = true;
							
						}
					}else{
						scope.records = new Object();
						scope.isVisible = false;
					}
					scope.$apply();
				});
				
				scope.itemSelected = function(key, value){
					scope.idPrototype = key;
					scope.prototype = value;
					scope.isVisible = false;
				}
			}
		}
}]);

angular.module("WebCoreModule").directive('navTab', function ($compile) {
	return {
		restrict : 'E',
		replace: true,
		transclude: true,
		template : '<ul class="nav nav-tabs" ng-transclude></ul>',
	}
	
})
 
angular.module("WebCoreModule").directive('navTabItem', function ($compile, $rootScope) {
	return {
		restrict : 'E',
		replace: true,
		scope: {
			name: '@',
			path: '@',
			styleClass: '@',
		},
		template : '<li class="{{styleClass}}" ng-click="active()" ><a data-toggle="tab" ui-sref="{{path}}">{{name}} </a></li>',
		link: function(scope, ele, attrs){
			// Altera as Abas ao serem selecionadas 
			scope.active = function(){
				angular.element(ele[0]).parent().find('li').removeClass("active");
				angular.element(ele[0]).addClass("active");
			}
			// Altera para aba inicial caso evento for disparado
			$rootScope.$on('loadTab', function(){
				var el = angular.element(ele[0]).parent().find('li');
				el.removeClass("active");
				angular.element(el[0]).addClass("active");
			})
		}
	}
});


angular.module("WebCoreModule").directive('multiSelect', function ($compile, $rootScope) {
	
	return {
		restrict: 'EA',
		template : '<div class="row"><div id="{{elementId}}" class="dropdown dropdown-language col-sm-10" name="{{elementName}}">'
	    + ' <button class="selectpicker form-control btn btn-default dropdown-toggle" type="button" ng-click="toggleDropdown()" id="dropdown-{{elementId}}" ng-disabled="isDisabled">'
	    +   ' {{bindModel.length == 0 ? "Select one or more plants" : bindModel.length == 1 ? (bindModel.length + " plant selected") : (bindModel.length + " plants selected")}}'
	    +    ' <span class="caret"></span>'
	    + '</button>'
	    
	    + '<ul class="dropdown-menu dropdown-multiselect" id="dropdown-item-menu-{{elementId}}" aria-labelledby="dropdown-item-{{elementId}}">'
	    //+   '<li ng-repeat="item in items" ng-class="{"item-selected": item.checked}" ng-click="itemSelect(item)">'
	    +   '<li ng-repeat="item in items" id="item-{{item.id}}" ng-click="itemSelect(item)">'
	    + '       <span> <i class="fa fa-check icon-menu fa-2x" style="display: none;"></i> </sapn> {{item.label}}' 
	    + '  </li>'
	    + '</ul>'
	    +	'</div>'
	    

	    + '<button class="btn btn-primary-default col-sm-1 col-md-1" ng-click="selectedAll()"> '
	    + '<span> <i class="fa fa-arrows-h icon-menu fa-2x" ></i> </sapn>' 
	    + ' </button>'
	    +	'</div>',
	    
	    
		scope: {
            bindModel: '=ngModel',
            bindItem : '=listItem',
            ngChange: '&',
            ngDisabled: '=ngDisabled',
            ngRequired: '=ngRequired',
            clazz: '@'
        	
        },
        
        link: function(scope, elem, attrs, ctrl) {
        	
        	angular.extend(scope, {
                items: [],
                elementId: attrs.id,
                elementName: attrs.label || attrs.id,
                isDisabled: false,
                isRequired: false,
                selected : "{'item-selected-blue': item.checked}"
            });
            
            scope.items = scope.bindItem;
            
            if (undefined !== attrs.disabled) {
                scope.isDisabled = true;
            }

            scope.$watch('bindModel', function (newValue, oldValue) {
            	
                if (newValue !== oldValue) {
                    if (newValue.length === 0) {
                        scope.items.forEach(function(item) {
                            delete item.checked;
                        });
                    } else {
                        scope.items.forEach(function(item) {
                            var found = false;
                            for(var x = 0; x < newValue.length; x++) {
                                if (newValue[x].id === item.id) {
                                    found = true;
                                }
                            }
                            item.checked = found;
                        });
                    }
                    scope.ngChange();
                }
            });

            scope.$watch('ngDisabled', function (isDisabled) {
                scope.isDisabled = isDisabled;
            });

            scope.$watch('ngRequired', function (isRequired) {
                scope.isRequired = isRequired;
            });

            scope.toggleDropdown = function () {
                $('#dropdown-item-menu-'+scope.elementId).toggleClass('settings-active');
                scope.open = !scope.open;
                
                if (scope.open) {
                    if (window.onclick) {
                        window.onclick();
                    }
                    window.onclick = function (event) {
                        scope.closeSearchWhenClickingElsewhere(event, scope.toggleDropdown);
                    };
                } else {
                    scope.open = false;
                    window.onclick = null;
                }
            };

            scope.closeSearchWhenClickingElsewhere = function(event, callbackOnClose) {
                if (event) {
                    var clickedElement = event.target;
                    if (!clickedElement) return;

                    var elementClasses = clickedElement.classList;
                    var clickedOnSearchDrawer = elementClasses.contains('dropdown-toggle') || elementClasses.contains('dropdown-menu') || (clickedElement.parentElement !== null && clickedElement.parentElement.classList.contains('dropdown-menu'));

                    if (!clickedOnSearchDrawer) {
                        callbackOnClose();
                        return;
                    }
                } else {
                    callbackOnClose();
                    return;
                }

            };

            scope.itemSelect = function (item) {
            	
            	var itemMark = angular.element('#item-'+item.id);
            	item.checked = !item.checked;
                var itemSelected = angular.copy(item);
                
                if (item.checked) {
               	   	itemMark.find('i').css({'display' : 'inline'});
                	
                    delete itemSelected.checked;
                    //delete itemSelected.label;
                    scope.bindModel.push(itemSelected);
                } else {
                	itemMark.find('i').css({'display' : 'none'});
                    for (var x = 0; x < scope.bindModel.length; x++) {
                        if (itemSelected.id === scope.bindModel[x].id) {
                            scope.bindModel.splice(x, 1);
                            break;
                        }
                    }
                }
            };
            
            
            scope.selectedAll = function(){
            	            	
            	scope.items.forEach(function(item) {
            		scope.itemSelect(item);
            		
            	});
            }

        }
	}
	
	
});

angular.module("WebCoreModule").directive('listMultiSelect', function ($compile, $rootScope) {
	
	return {
		restrict: 'EA',
		template: '<div ng-hide="bindModel.length == 0"> '
	    + '<select multiple class="form-control list-group" >'
	    +   '<option ng-repeat="item in bindModel" class="list-group-item list-group-item-info" >'
	    + '       {{item.id}} - {{item.label}}  '
	    + '  </option>'
	    + '</ul>'
	    +	'</div></div>',
	    scope: {
            bindModel: '=ngModel'
        },
	
		link: function(scope, elem, attrs) {
			
			//bindModel.length == 0
			
		}
		
		
	}
});

angular.module("WebCoreModule").directive('onChangeFile', function() {
	  return {
	    restrict: 'A',
	    link: function (scope, element, attrs) {
	      var onChangeFunc = scope.$eval(attrs.onChangeFile);
	      element.bind('change', onChangeFunc);
	    }
	  };
});

angular.module("WebCoreModule").directive('validFile', ['AlertService', function (AlertService) {
	return {
	    require: 'ngModel',
	    link: function (scope, elem, attrs, ngModel) {
	        var validFormats = ['xls','xlsx'];
	        elem.bind('change', function () {
	            validType(false);
	            scope.$apply(function () {
	                ngModel.$render();
	            });
	        });
	        ngModel.$render = function () {
	            ngModel.$setViewValue(elem.val());
	        };
	        function validType(bool) {
	            ngModel.$setValidity('extension', bool);
	        }
	        ngModel.$parsers.push(function(value) {
	            var ext = value.substr(value.lastIndexOf('.')+1);
	            if(ext=='') return;
	            if(validFormats.indexOf(ext) == -1){
	            	var formatInvalid = value.substr(value.lastIndexOf('\\')+1);
	            	console.log(formatInvalid.substr(formatInvalid.lastIndexOf('.')+1));
	            	AlertService.showError ('','application.errors.typeNotPermissed', 'danger');
	            	
	            	return value;
	            }
	            validType(true);
	            return value;
	        });
	    }
	  };
	}]);



//angular.module("WebCoreModule").directive('multipleItems', function(){
//	return {
//		restrict : 'EA',
//		transclude : false,
//		scope: {
//            items : "=",
//            method : "&"
//        },
//        template : '<div><input id="inputMultiselect" type="submit" value="V" class="form-control " style="cursor:pointer; background:transparent; text-align: right;"></input></div>' +  
//        				'<div id="multiselect" style="display: none;"><ul><li id="item{{$index}}"  ng-click="chooseItems(item, $index)" ng-repeat="item in items track by $index" style="padding : 5px; cursor : pointer">{{item.desc}}</li></ul></div>',
//		controller: ['$scope', 'PrinterService', function(scope, PrinterService){
//			scope.chooseItems = function(item, index) {
//				var itemFound = PrinterService.findItem(item);
//				
//				if(itemFound == null) {
//					PrinterService.addItem(item);
//					$("#item" + index).append($(" <span class='glyphicon glyphicon-ok' aria-hidden='true'></span>"));
//				}else{
//					PrinterService.removeItem(item);
//					$("#item" + index);
//				}
//				
//			}
//		}],
//        link : function(scope, element, attrs){
//			
//			var elementChild = element[0].querySelector('#multiselect');
//			var elem = element[0].querySelector('#inputMultiselect');
//			var statusElementChild = 'none';
//			var contentSelect = element[0].querySelector('#multiselect');
//			var dynamicStyle = "padding : 15px; font-family: Verdana";
//			
//			
//			$('#inputMultiselect').on('click', function() {	
//				if (statusElementChild == 'none') {
//					statusElementChild = 'block';
//				} else {
//					statusElementChild = 'none';
//				}
//				contentSelect.setAttribute('style', 'display:' + statusElementChild + "; "   + dynamicStyle);
//			});	
//		}	
//	}
//})


//angular.module("WebCoreModule").directive('multiSelect', function(){
//	return{
//		restrict : 'E',
//		scope : {
//			items : '='
//		},
//		template : '<div align="center"> ' +   
//					'<h1>AngularJS Listbox example</h1> <select ng-options="c.locationN for c in items" multiple></div> ',   
////						'<select style="width: 100%;" size="7" ng-model="items" multiple ' +  
////							'ng-multiple="true" ' +  
////							'ng-options="item.locationN item in items"></select> ' +  
////					'</div>',
//		link : function(scope, elem, attr){
//			console.log("items " + scope.items[0].locationN);
//		}			
//						
//	}
//})


//angular.module("WebCoreModule").directive('autocomplete', function() {
//  var index = -1;
//
//  return {
//    restrict: 'EA',
//    scope: {
//      searchParam: '=ngModel',
//      suggestions: '=data',
//      onType: '=onType',
//      onSelect: '=onSelect',
//      autocompleteRequired: '=',
//      noAutoSort: '=noAutoSort'
//    },
//    controller: ['$scope', function($scope){
//      // the index of the suggestions that's currently selected
//      $scope.selectedIndex = -1;
//
//      $scope.initLock = true;
//
//      // set new index
//      $scope.setIndex = function(i){
//        $scope.selectedIndex = parseInt(i);
//      };
//
//      this.setIndex = function(i){
//        $scope.setIndex(i);
//        $scope.$apply();
//      };
//
//      $scope.getIndex = function(i){
//        return $scope.selectedIndex;
//      };
//
//      // watches if the parameter filter should be changed
//      var watching = true;
//
//      // autocompleting drop down on/off
//      $scope.completing = false;
//
//      // starts autocompleting on typing in something
//      $scope.$watch('searchParam', function(newValue, oldValue){
//
//        if (oldValue === newValue || (!oldValue && $scope.initLock)) {
//          return;
//        }
//
//        if(watching && typeof $scope.searchParam !== 'undefined' && $scope.searchParam !== null) {
//          $scope.completing = true;
//          $scope.searchFilter = $scope.searchParam;
//          $scope.selectedIndex = -1;
//        }
//
//        // function thats passed to on-type attribute gets executed
//        if($scope.onType)
//          $scope.onType($scope.searchParam);
//      });
//
//      // for hovering over suggestions
//      this.preSelect = function(suggestion){
//    	  
//        watching = false;
//
//        // this line determines if it is shown
//        // in the input field before it's selected:
//        //$scope.searchParam = suggestion;
//
//        $scope.$apply();
//        watching = true;
//
//      };
//
//      $scope.preSelect = this.preSelect;
//
//      this.preSelectOff = function(){
//        watching = true;
//      };
//
//      $scope.preSelectOff = this.preSelectOff;
//
//      // selecting a suggestion with RIGHT ARROW or ENTER
//      $scope.select = function(suggestion){
//        if(suggestion){
//          $scope.searchParam = suggestion;
//          $scope.searchFilter = suggestion;
//          if($scope.onSelect)
//            $scope.onSelect(suggestion);
//        }
//        watching = false;
//        $scope.completing = false;
//        setTimeout(function(){watching = true;},1000);
//        $scope.setIndex(-1);
//      };
//
//
//    }],
//    link: function(scope, element, attrs){
//        console.log(scope.noAutoSort)
//
//      setTimeout(function() {
//        scope.initLock = false;
//        scope.$apply();
//      }, 250);
//
//      var attr = '';
//
//      // Default atts
//      scope.attrs = {
//        "placeholder": "start typing...",
//        "class": "",
//        "id": "",
//        "inputclass": "",
//        "inputid": ""
//      };
//
//      for (var a in attrs) {
//        attr = a.replace('attr', '').toLowerCase();
//        // add attribute overriding defaults
//        // and preventing duplication
//        if (a.indexOf('attr') === 0) {
//          scope.attrs[attr] = attrs[a];
//        }
//      }
//
//      if (attrs.clickActivation) {
//        element[0].onclick = function(e){
//          if(!scope.searchParam){
//            setTimeout(function() {
//              scope.completing = true;
//              scope.$apply();
//            }, 200);
//          }
//        };
//      }
//
//      var key = {left: 37, up: 38, right: 39, down: 40 , enter: 13, esc: 27, tab: 9};
//
//      document.addEventListener("keydown", function(e){
//        var keycode = e.keyCode || e.which;
//
//        switch (keycode){
//          case key.esc:
//            // disable suggestions on escape
//            scope.select();
//            scope.setIndex(-1);
//            scope.$apply();
//            e.preventDefault();
//        }
//      }, true);
//
//      document.addEventListener("blur", function(e){
//        // disable suggestions on blur
//        // we do a timeout to prevent hiding it before a click event is registered
//        setTimeout(function() {
//          scope.select();
//          scope.setIndex(-1);
//          scope.$apply();
//        }, 150);
//      }, true);
//
//      element[0].addEventListener("keydown",function (e){
//        var keycode = e.keyCode || e.which;
//
//        var l = angular.element(this).find('li').length;
//
//        // this allows submitting forms by pressing Enter in the autocompleted field
//        if(!scope.completing || l == 0) return;
//
//        // implementation of the up and down movement in the list of suggestions
//        switch (keycode){
//          case key.up:
//
//            index = scope.getIndex()-1;
//            if(index<-1){
//              index = l-1;
//            } else if (index >= l ){
//              index = -1;
//              scope.setIndex(index);
//              scope.preSelectOff();
//              break;
//            }
//            scope.setIndex(index);
//
//            if(index!==-1)
//              scope.preSelect(angular.element(angular.element(this).find('li')[index]).text());
//
//            scope.$apply();
//
//            break;
//          case key.down:
//            index = scope.getIndex()+1;
//            if(index<-1){
//              index = l-1;
//            } else if (index >= l ){
//              index = -1;
//              scope.setIndex(index);
//              scope.preSelectOff();
//              scope.$apply();
//              break;
//            }
//            scope.setIndex(index);
//
//            if(index!==-1)
//              scope.preSelect(angular.element(angular.element(this).find('li')[index]).text());
//
//            break;
//          case key.left:
//            break;
//          case key.right:
//          case key.enter:
//          case key.tab:
//
//            index = scope.getIndex();
//            // scope.preSelectOff();
//            if(index !== -1) {
//              scope.select(angular.element(angular.element(this).find('li')[index]).text());
//              if(keycode == key.enter) {
//                e.preventDefault();
//              }
//            } else {
//              if(keycode == key.enter) {
//                scope.select();
//              }
//            }
//            scope.setIndex(-1);
//            scope.$apply();
//
//            break;
//          case key.esc:
//            // disable suggestions on escape
//            scope.select();
//            scope.setIndex(-1);
//            scope.$apply();
//            e.preventDefault();
//            break;
//          default:
//            return;
//        }
//
//      });
//    },
//    template: '\
//        <div class="autocomplete {{ attrs.class }}" id="{{ attrs.id }}">\
//          <input\
//            type="text"\
//            ng-model="searchParam"\
//            placeholder="{{ attrs.placeholder }}"\
//            class="{{ attrs.inputclass }}"\
//            tabindex="{{ attrs.tabindex }}"\
//            id="{{ attrs.inputid }}"\
//            name="{{ attrs.name }}"\
//            ng-required="{{ autocompleteRequired }}" />\
//          <ul ng-if="!noAutoSort" ng-show="completing && (suggestions | filter:searchFilter).length > 0">\
//            <li\
//              suggestion\
//              ng-repeat="suggestion in suggestions | filter:searchFilter | orderBy:\'toString()\' track by $index"\
//              index="{{ $index }}"\
//              val="{{ suggestion }}"\
//              ng-class="{ active: ($index === selectedIndex) }"\
//              ng-click="select(suggestion)"\
//              ng-bind-html="suggestion | highlight:searchParam"></li>\
//          </ul>\
//          <ul ng-if="noAutoSort" ng-show="completing && (suggestions | filter:searchFilter).length > 0">\
//            <li\
//              suggestion\
//              ng-repeat="suggestion in suggestions | filter:searchFilter track by $index"\
//              index="{{ $index }}"\
//              val="{{ suggestion }}"\
//              ng-class="{ active: ($index === selectedIndex) }"\
//              ng-click="select(suggestion)"\
//              ng-bind-html="suggestion | highlight:searchParam"></li>\
//          </ul>\
//        </div>'
//  };
//});
//
//angular.module("WebCoreModule").filter('highlight', ['$sce', function ($sce) {
//  return function (input, searchParam) {
//    if (typeof input === 'function') return '';
//    if (searchParam) {
//      var words = '(' +
//            searchParam.split(/\ /).join(' |') + '|' +
//            searchParam.split(/\ /).join('|') +
//          ')',
//          exp = new RegExp(words, 'gi');
//      if (words.length) {
//        input = input.replace(exp, "<span class=\"highlight\">$1</span>");
//      }
//    }
//    return $sce.trustAsHtml(input);
//  };
//}]);
//
//angular.module("WebCoreModule").directive('suggestion', function(){
//  return {
//    restrict: 'A',
//    require: '^autocomplete', // ^look for controller on parents element
//    link: function(scope, element, attrs, autoCtrl){
//      element.bind('mouseenter', function() {
//        autoCtrl.preSelect(attrs.val);
//        autoCtrl.setIndex(attrs.index);
//      });
//
//      element.bind('mouseleave', function() {
//        autoCtrl.preSelectOff();
//      });
//    }
//  };
//});




	  

